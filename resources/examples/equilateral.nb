(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    302902,       6533]
NotebookOptionsPosition[    296712,       6319]
NotebookOutlinePosition[    297048,       6334]
CellTagsIndexPosition[    297005,       6331]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
By Yi Wang, 2014, tririverwangyi@gmail.com
For convention used here, see http://arxiv.org/abs/1303.1523\
\>", "Text",
 CellChangeTimes->{{3.6082079272523212`*^9, 3.60820796792624*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"$Assumptions", "=", 
   RowBox[{
    RowBox[{"k1", ">", "0"}], "&&", 
    RowBox[{"k2", ">", "0"}], "&&", 
    RowBox[{"k3", ">", "0"}], "&&", 
    RowBox[{"\[Epsilon]", ">", "0"}], "&&", 
    RowBox[{"\[Tau]", "<", "0"}], "&&", 
    RowBox[{"cs", ">", "0"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.598699230699121*^9, 3.5986992466001787`*^9}, {
  3.5987046077421923`*^9, 3.598704608986248*^9}}],

Cell[CellGroupData[{

Cell["\<\
The Lagrangian for general kinetic terms\
\>", "Section",
 CellChangeTimes->{{3.59868528949975*^9, 3.598685290997931*^9}, {
   3.59869316422793*^9, 3.598693174886235*^9}, 3.598707087562826*^9}],

Cell[TextData[{
 "Note: conformal time is used: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["ds", "2"], "=", " ", 
    RowBox[{
     RowBox[{"-", " ", 
      SuperscriptBox["d\[Tau]", "2"]}], "+", 
     SuperscriptBox["dx", "2"], "+", 
     SuperscriptBox["dy", "2"], "+", 
     SuperscriptBox["dz", "2"]}]}], TraditionalForm]]],
 " ."
}], "Text",
 CellChangeTimes->{{3.598685299657954*^9, 3.598685340234289*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"lagrangian", "=", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"a", "[", "\[Tau]", "]"}], "4"], 
    RowBox[{"P", "[", 
     RowBox[{"X", ",", " ", "\[Phi]"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.5986850232689047`*^9, 3.598685066136998*^9}, {
   3.598685142415563*^9, 3.598685238210174*^9}, 3.598687743619837*^9, {
   3.598688292077231*^9, 3.598688294372285*^9}, 3.598704651295244*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
The 3rd order Lagrangian and Hamiltonian\
\>", "Section",
 CellChangeTimes->{{3.5986877536548367`*^9, 3.5986877591665688`*^9}, {
  3.5987070777490063`*^9, 3.5987071022370863`*^9}}],

Cell[CellGroupData[{

Cell["Define expansions of X and \[Phi]", "Subsection",
 CellChangeTimes->{{3.598704666626889*^9, 3.598704673645782*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"X\[Phi]Expand", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"X", "\[Rule]", 
      RowBox[{
       RowBox[{"X0", "[", "\[Tau]", "]"}], "+", 
       RowBox[{"Eps", " ", "\[Delta]X1"}], "+", 
       RowBox[{
        SuperscriptBox["Eps", "2"], "\[Delta]X2"}]}]}], ",", " ", 
     RowBox[{"\[Phi]", "\[Rule]", 
      RowBox[{
       RowBox[{"\[Phi]0", "[", "\[Tau]", "]"}], "+", 
       RowBox[{"Eps", " ", 
        RowBox[{"\[Delta]\[Phi]", "[", 
         RowBox[{"x", ",", "y", ",", "z", ",", "\[Tau]"}], "]"}]}]}]}]}], 
    "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.59868781314526*^9, 3.598687860075252*^9}, {
  3.598688362044647*^9, 3.598688386813985*^9}, {3.598688559985524*^9, 
  3.598688562167673*^9}}],

Cell[TextData[{
 "The actual expansion of the kinetic term. Here X = X0 + \[Delta]X1 + \
\[Delta]X2 = X0 + XExpand[1] + XExpand[2],\nwhere  \[Delta]X1 are the order \
\[Delta]\[Phi] terms and \[Delta]X2 are the order ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Delta]\[Phi]", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " terms. There are no higher order terms, when metric perturbations are \
neglected."
}], "Text",
 CellChangeTimes->{{3.598704732823661*^9, 3.598704738980191*^9}, {
  3.598706207364377*^9, 3.5987062462481613`*^9}, {3.598706278034039*^9, 
  3.598706343013728*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"XExpand", "[", "n_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"Series", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        FractionBox["1", 
         RowBox[{"2", 
          SuperscriptBox[
           RowBox[{"a", "[", "\[Tau]", "]"}], "2"]}]], 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"\[Phi]", "[", 
              RowBox[{"x", ",", "y", ",", "z", ",", "\[Tau]"}], "]"}], ",", 
             "\[Tau]"}], "]"}], "2"], "-", 
          SuperscriptBox[
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"\[Phi]", "[", 
              RowBox[{"x", ",", "y", ",", "z", ",", "\[Tau]"}], "]"}], ",", 
             "x"}], "]"}], "2"], "-", 
          SuperscriptBox[
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"\[Phi]", "[", 
              RowBox[{"x", ",", "y", ",", "z", ",", "\[Tau]"}], "]"}], ",", 
             "y"}], "]"}], "2"], "-", 
          SuperscriptBox[
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"\[Phi]", "[", 
              RowBox[{"x", ",", "y", ",", "z", ",", "\[Tau]"}], "]"}], ",", 
             "z"}], "]"}], "2"]}], ")"}]}], "/.", 
       RowBox[{"\[Phi]", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Phi]0", "[", "#4", "]"}], "+", 
           RowBox[{"Eps", " ", 
            RowBox[{"\[Delta]\[Phi]", "[", 
             RowBox[{"#1", ",", "#2", ",", "#3", ",", "#4"}], "]"}]}]}], 
          "&"}], ")"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"Eps", ",", "0", ",", "n"}], "}"}]}], "]"}], "//", 
    RowBox[{
     RowBox[{"SeriesCoefficient", "[", 
      RowBox[{"#", ",", "n"}], "]"}], "&"}]}], "//", "Simplify"}]}]], "Input",\

 CellChangeTimes->{{3.598688334300988*^9, 3.598688349255865*^9}, {
  3.598688471493044*^9, 3.598688525673526*^9}, {3.598688952565461*^9, 
  3.598688953171438*^9}}],

Cell["\<\
The two orders in explicit form:\
\>", "Text",
 CellChangeTimes->{{3.598706197987718*^9, 3.5987062039673557`*^9}, {
  3.598706367972978*^9, 3.598706376423273*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"XExpand", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.598706107873664*^9, 3.59870610794736*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    SuperscriptBox["\[Phi]0", "\[Prime]",
     MultilineFunction->None], "[", "\[Tau]", "]"}], " ", 
   RowBox[{
    SuperscriptBox["\[Delta]\[Phi]", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "0", ",", "0", ",", "1"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"x", ",", "y", ",", "z", ",", "\[Tau]"}], "]"}]}], 
  SuperscriptBox[
   RowBox[{"a", "[", "\[Tau]", "]"}], "2"]]], "Output",
 CellChangeTimes->{3.598706108328347*^9, 3.598706996044015*^9, 
  3.606808972226495*^9, 3.60680906063011*^9, 3.606809204992597*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"XExpand", "[", "2", "]"}]], "Input",
 CellChangeTimes->{{3.5987061115158663`*^9, 3.598706111566925*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["\[Delta]\[Phi]", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "0", ",", "0", ",", "1"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"x", ",", "y", ",", "z", ",", "\[Tau]"}], "]"}], "2"]}], "+", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["\[Delta]\[Phi]", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "0", ",", "1", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"x", ",", "y", ",", "z", ",", "\[Tau]"}], "]"}], "2"], "+", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["\[Delta]\[Phi]", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "1", ",", "0", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"x", ",", "y", ",", "z", ",", "\[Tau]"}], "]"}], "2"], "+", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["\[Delta]\[Phi]", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"1", ",", "0", ",", "0", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"x", ",", "y", ",", "z", ",", "\[Tau]"}], "]"}], "2"]}], 
   RowBox[{"2", " ", 
    SuperscriptBox[
     RowBox[{"a", "[", "\[Tau]", "]"}], "2"]}]]}]], "Output",
 CellChangeTimes->{3.5987061118752127`*^9, 3.598706996076683*^9, 
  3.606808972252315*^9, 3.606809060731597*^9, 3.606809205002768*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Define P, PX, PXX, PXXX, etc. (neglecting the slow roll terms)\
\>", "Subsection",
 CellChangeTimes->{{3.598704680758581*^9, 3.598704699958226*^9}, {
  3.59870640597788*^9, 3.598706417925131*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Pabbrev", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"P", "[", "__", "]"}], "\[RuleDelayed]", "P"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Derivative", "[", 
         RowBox[{"1", ",", "0"}], "]"}], "[", "P", "]"}], "[", "__", "]"}], 
      "\[RuleDelayed]", "PX"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Derivative", "[", 
         RowBox[{"2", ",", "0"}], "]"}], "[", "P", "]"}], "[", "__", "]"}], 
      "\[RuleDelayed]", "PXX"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Derivative", "[", 
         RowBox[{"3", ",", "0"}], "]"}], "[", "P", "]"}], "[", "__", "]"}], 
      "\[RuleDelayed]", "PXXX"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "below", " ", "are", " ", "slow", " ", "roll", " ", "suppressed", " ", 
       "terms"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Derivative", "[", 
         RowBox[{"0", ",", "1"}], "]"}], "[", "P", "]"}], "[", "__", "]"}], 
      "\[RuleDelayed]", 
      RowBox[{"(*", "P\[Phi]", "*)"}], "0"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Derivative", "[", 
         RowBox[{"0", ",", "2"}], "]"}], "[", "P", "]"}], "[", "__", "]"}], 
      "\[RuleDelayed]", 
      RowBox[{"(*", "P\[Phi]\[Phi]", "*)"}], "0"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Derivative", "[", 
         RowBox[{"0", ",", "3"}], "]"}], "[", "P", "]"}], "[", "__", "]"}], 
      "\[RuleDelayed]", 
      RowBox[{"(*", "P\[Phi]\[Phi]\[Phi]", "*)"}], "0"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Derivative", "[", 
         RowBox[{"1", ",", "1"}], "]"}], "[", "P", "]"}], "[", "__", "]"}], 
      "\[RuleDelayed]", 
      RowBox[{"(*", "PX\[Phi]", "*)"}], "0"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Derivative", "[", 
         RowBox[{"1", ",", "2"}], "]"}], "[", "P", "]"}], "[", "__", "]"}], 
      "\[RuleDelayed]", 
      RowBox[{"(*", "PX\[Phi]\[Phi]", "*)"}], "0"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Derivative", "[", 
         RowBox[{"2", ",", "1"}], "]"}], "[", "P", "]"}], "[", "__", "]"}], 
      "\[RuleDelayed]", 
      RowBox[{"(*", "PXX\[Phi]", "*)"}], "0"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.598687781642064*^9, 3.5986877875579987`*^9}, {
  3.598687883705607*^9, 3.598687888122863*^9}, {3.598687932143943*^9, 
  3.5986879405383368`*^9}, {3.598687987256798*^9, 3.5986880283724203`*^9}, {
  3.598688206260467*^9, 3.598688233101963*^9}}],

Cell["\<\
Here are the useful substitutions to bring the Lagrangian to a conventional \
form\
\>", "Text",
 CellChangeTimes->{{3.598704804184761*^9, 3.5987048572401867`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"toCanonical", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"\[Phi]0", "'"}], "[", "\[Tau]", "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{"a", "[", "\[Tau]", "]"}], 
       OverscriptBox["\[Phi]0", "\[Bullet]"]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Phi]0", "''"}], "[", "\[Tau]", "]"}], "\[Rule]", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"a", "[", "\[Tau]", "]"}], "2"], 
       RowBox[{"(", 
        RowBox[{"H", " ", 
         OverscriptBox["\[Phi]0", "\[Bullet]"]}], 
        RowBox[{"(*", 
         RowBox[{"+", 
          OverscriptBox["\[Phi]0", "\[Bullet]\[Bullet]"]}], "*)"}], 
        RowBox[{"(*", 
         RowBox[{"slow", " ", "roll", " ", "suppressed"}], "*)"}], ")"}]}]}], 
     ",", 
     RowBox[{
      RowBox[{
       RowBox[{"a", "'"}], "[", "\[Tau]", "]"}], "\[Rule]", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"a", "[", "\[Tau]", "]"}], "2"], "H"}]}], ",", 
     RowBox[{
      SuperscriptBox[
       OverscriptBox["\[Phi]0", "\[Bullet]"], 
       RowBox[{"n_", "/;", 
        RowBox[{"IntegerQ", "[", 
         RowBox[{"n", "/", "2"}], "]"}]}]], "\[RuleDelayed]", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"2", "\[Epsilon]", " ", 
         RowBox[{
          SuperscriptBox["H", "2"], "/", "PX"}]}], ")"}], 
       RowBox[{"n", "/", "2"}]]}], ",", 
     RowBox[{"PXX", "\[Rule]", 
      RowBox[{
       FractionBox["PX", 
        SuperscriptBox[
         OverscriptBox["\[Phi]0", "\[Bullet]"], "2"]], 
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", 
          SuperscriptBox["cs", "2"]], "-", "1"}], ")"}]}]}], ",", 
     RowBox[{"\[Epsilon]", "\[Rule]", 
      FractionBox[
       RowBox[{"\[CapitalSigma]", " ", 
        SuperscriptBox["cs", "2"]}], 
       SuperscriptBox["H", "2"]]}], ",", 
     RowBox[{"PXXX", "\[Rule]", 
      RowBox[{
       FractionBox["12", 
        SuperscriptBox[
         OverscriptBox["\[Phi]0", "\[Bullet]"], "6"]], 
       RowBox[{"(", 
        RowBox[{"\[Lambda]", "-", 
         RowBox[{
          FractionBox[
           SuperscriptBox[
            OverscriptBox["\[Phi]0", "\[Bullet]"], "4"], "4"], "PXX"}]}], 
        ")"}]}]}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.5986890620945787`*^9, 3.5986891038382177`*^9}, {
   3.5986891763261003`*^9, 3.598689190732429*^9}, {3.598689323198287*^9, 
   3.5986893890052567`*^9}, {3.598689577785893*^9, 3.598689584658386*^9}, {
   3.5986896794157467`*^9, 3.5986897173886547`*^9}, {3.598689756449923*^9, 
   3.598689810251499*^9}, {3.598689861816683*^9, 3.598689926658225*^9}, {
   3.598689964241107*^9, 3.598689975802985*^9}, {3.598690012556048*^9, 
   3.5986900468540363`*^9}, {3.598690371217395*^9, 3.598690372599266*^9}, {
   3.598690451275914*^9, 3.5986905078096323`*^9}, {3.598690646413012*^9, 
   3.598690673543662*^9}, {3.598690859375826*^9, 3.598690901147262*^9}, {
   3.598691065621863*^9, 3.598691096612611*^9}, 3.598691287095368*^9, {
   3.598691365775158*^9, 3.598691371527504*^9}, {3.598692099012621*^9, 
   3.598692117761001*^9}, {3.598692214279501*^9, 3.5986922155893927`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Expansion of the Lagrangian, in \[Delta]\[Phi]-gauge\
\>", "Subsection",
 CellChangeTimes->{{3.5987047563459597`*^9, 3.59870476202148*^9}, {
  3.598704904360817*^9, 3.598704909317474*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"lag", "[", "n_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Series", "[", 
      RowBox[{
       RowBox[{"lagrangian", "/.", "X\[Phi]Expand"}], ",", 
       RowBox[{"{", 
        RowBox[{"Eps", ",", "0", ",", "n"}], "}"}]}], "]"}], " ", "/.", 
     "Pabbrev"}], "//", 
    RowBox[{
     RowBox[{"SeriesCoefficient", "[", 
      RowBox[{"#", ",", "n"}], "]"}], "&"}]}], "//", "Simplify"}]}]], "Input",\

 CellChangeTimes->{{3.5986878626769533`*^9, 3.59868786724692*^9}}],

Cell["\<\
This is the third order aLagrangian, in terms of \[Delta]X1 and \[Delta]X2\
\>", "Text",
 CellChangeTimes->{{3.5987047693804283`*^9, 3.598704793136367*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lag", "[", "3", "]"}]], "Input",
 CellChangeTimes->{{3.598687875293498*^9, 3.5986879019457273`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "6"], " ", "\[Delta]X1", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"PXXX", " ", 
     SuperscriptBox["\[Delta]X1", "2"]}], "+", 
    RowBox[{"6", " ", "PXX", " ", "\[Delta]X2"}]}], ")"}], " ", 
  SuperscriptBox[
   RowBox[{"a", "[", "\[Tau]", "]"}], "4"]}]], "Output",
 CellChangeTimes->{
  3.59868790281666*^9, 3.598687942705984*^9, 3.59868803515942*^9, {
   3.598688214258102*^9, 3.5986882372779903`*^9}, 3.598688303443203*^9, 
   3.598688393030682*^9, 3.598688569365106*^9, 3.598688939100603*^9, 
   3.598703420209531*^9, 3.598705432102867*^9, 3.598706996191093*^9, 
   3.6068089723636103`*^9, 3.606809060769527*^9, 3.6068092051145763`*^9}]
}, Open  ]],

Cell["\<\
lag3 is the 3rd order Lagrangian, in the \[Delta]\[Phi]-gauge\
\>", "Text",
 CellChangeTimes->{{3.5987048793656073`*^9, 3.5987048947176437`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lag3", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"lag", "[", "3", "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Delta]X1", "\[Rule]", 
        RowBox[{"XExpand", "[", "1", "]"}]}], ",", 
       RowBox[{"\[Delta]X2", "\[Rule]", 
        RowBox[{"XExpand", "[", "2", "]"}]}]}], "}"}]}], "//.", 
    "toCanonical"}], "//", "Expand"}]}]], "Input",
 CellChangeTimes->{{3.598688550004902*^9, 3.598688599684359*^9}, {
  3.598689092592067*^9, 3.598689095560115*^9}, {3.59868923770782*^9, 
  3.598689238322874*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    SuperscriptBox["PX", "2"], " ", "\[Lambda]", " ", 
    RowBox[{"a", "[", "\[Tau]", "]"}], " ", 
    OverscriptBox["\[Phi]0", "\[Bullet]"], " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["\[Delta]\[Phi]", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "0", ",", "0", ",", "1"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"x", ",", "y", ",", "z", ",", "\[Tau]"}], "]"}], "3"]}], 
   RowBox[{"2", " ", 
    SuperscriptBox["cs", "4"], " ", 
    SuperscriptBox["\[CapitalSigma]", "2"]}]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["PX", "2"], " ", 
    RowBox[{"a", "[", "\[Tau]", "]"}], " ", 
    OverscriptBox["\[Phi]0", "\[Bullet]"], " ", 
    RowBox[{
     SuperscriptBox["\[Delta]\[Phi]", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "0", ",", "0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"x", ",", "y", ",", "z", ",", "\[Tau]"}], "]"}], " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["\[Delta]\[Phi]", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "0", ",", "1", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"x", ",", "y", ",", "z", ",", "\[Tau]"}], "]"}], "2"]}], 
   RowBox[{"4", " ", 
    SuperscriptBox["cs", "4"], " ", "\[CapitalSigma]"}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["PX", "2"], " ", 
    RowBox[{"a", "[", "\[Tau]", "]"}], " ", 
    OverscriptBox["\[Phi]0", "\[Bullet]"], " ", 
    RowBox[{
     SuperscriptBox["\[Delta]\[Phi]", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "0", ",", "0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"x", ",", "y", ",", "z", ",", "\[Tau]"}], "]"}], " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["\[Delta]\[Phi]", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "0", ",", "1", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"x", ",", "y", ",", "z", ",", "\[Tau]"}], "]"}], "2"]}], 
   RowBox[{"4", " ", 
    SuperscriptBox["cs", "2"], " ", "\[CapitalSigma]"}]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["PX", "2"], " ", 
    RowBox[{"a", "[", "\[Tau]", "]"}], " ", 
    OverscriptBox["\[Phi]0", "\[Bullet]"], " ", 
    RowBox[{
     SuperscriptBox["\[Delta]\[Phi]", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "0", ",", "0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"x", ",", "y", ",", "z", ",", "\[Tau]"}], "]"}], " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["\[Delta]\[Phi]", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "1", ",", "0", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"x", ",", "y", ",", "z", ",", "\[Tau]"}], "]"}], "2"]}], 
   RowBox[{"4", " ", 
    SuperscriptBox["cs", "4"], " ", "\[CapitalSigma]"}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["PX", "2"], " ", 
    RowBox[{"a", "[", "\[Tau]", "]"}], " ", 
    OverscriptBox["\[Phi]0", "\[Bullet]"], " ", 
    RowBox[{
     SuperscriptBox["\[Delta]\[Phi]", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "0", ",", "0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"x", ",", "y", ",", "z", ",", "\[Tau]"}], "]"}], " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["\[Delta]\[Phi]", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "1", ",", "0", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"x", ",", "y", ",", "z", ",", "\[Tau]"}], "]"}], "2"]}], 
   RowBox[{"4", " ", 
    SuperscriptBox["cs", "2"], " ", "\[CapitalSigma]"}]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["PX", "2"], " ", 
    RowBox[{"a", "[", "\[Tau]", "]"}], " ", 
    OverscriptBox["\[Phi]0", "\[Bullet]"], " ", 
    RowBox[{
     SuperscriptBox["\[Delta]\[Phi]", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "0", ",", "0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"x", ",", "y", ",", "z", ",", "\[Tau]"}], "]"}], " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["\[Delta]\[Phi]", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"1", ",", "0", ",", "0", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"x", ",", "y", ",", "z", ",", "\[Tau]"}], "]"}], "2"]}], 
   RowBox[{"4", " ", 
    SuperscriptBox["cs", "4"], " ", "\[CapitalSigma]"}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["PX", "2"], " ", 
    RowBox[{"a", "[", "\[Tau]", "]"}], " ", 
    OverscriptBox["\[Phi]0", "\[Bullet]"], " ", 
    RowBox[{
     SuperscriptBox["\[Delta]\[Phi]", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "0", ",", "0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"x", ",", "y", ",", "z", ",", "\[Tau]"}], "]"}], " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["\[Delta]\[Phi]", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"1", ",", "0", ",", "0", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"x", ",", "y", ",", "z", ",", "\[Tau]"}], "]"}], "2"]}], 
   RowBox[{"4", " ", 
    SuperscriptBox["cs", "2"], " ", "\[CapitalSigma]"}]]}]], "Output",
 CellChangeTimes->{{3.59868858752658*^9, 3.598688603699202*^9}, {
   3.598688943232111*^9, 3.5986889575347567`*^9}, 3.598689096220524*^9, 
   3.598689193725885*^9, 3.5986892386897917`*^9, 3.598689391641569*^9, 
   3.598689928580791*^9, {3.598690024542768*^9, 3.5986900499651957`*^9}, 
   3.598690375514577*^9, {3.598690497918498*^9, 3.598690515801263*^9}, 
   3.598690677852467*^9, 3.598690903908119*^9, 3.598691067408132*^9, 
   3.598691098120071*^9, 3.598691292405547*^9, {3.59869136741145*^9, 
   3.5986913810355473`*^9}, 3.59869221773728*^9, 3.598703420267308*^9, 
   3.598705432141054*^9, 3.598706996229854*^9, 3.606808972391157*^9, 
   3.606809060795776*^9, 3.606809205127466*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Transform the Lagrangian to \[Zeta]-gauge\
\>", "Subsection",
 CellChangeTimes->{{3.5987047563459597`*^9, 3.59870476202148*^9}, {
  3.598704904360817*^9, 3.598704918802586*^9}, {3.598706437615172*^9, 
  3.5987064424115467`*^9}}],

Cell[TextData[{
 "Use ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Delta]\[Phi]", "=", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       OverscriptBox["\[Phi]", "\[Bullet]"], " ", "\[Zeta]"}], "H"]}]}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 " to transform into \[Zeta]-gauge.\nNote that the gauge transformation \
formula is actually  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Delta]\[Phi]", "=", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       OverscriptBox["\[Phi]", "\[Bullet]"], " ", "\[Zeta]"}], "H"]}]}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 " + ",
 Cell[BoxData[
  FormBox[
   RowBox[{"O", "(", 
    SuperscriptBox["\[Zeta]", "2"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "). The ",
 Cell[BoxData[
  FormBox[
   RowBox[{"O", "(", 
    SuperscriptBox["\[Zeta]", "2"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ") term generates slow roll suppressed local non-Gaussianity. Here we \
consider slow roll leading order thus this term is neglected."
}], "Text",
 CellChangeTimes->{{3.5987049279866533`*^9, 3.598704958114079*^9}, {
  3.598706452708742*^9, 3.59870655365736*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lag3\[Zeta]", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"lag3", "/.", 
       RowBox[{"{", 
        RowBox[{"\[Delta]\[Phi]", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              RowBox[{"\[Zeta]", "[", 
               RowBox[{"#1", ",", "#2", ",", "#3", ",", "#4"}], "]"}], 
              RowBox[{
               RowBox[{"\[Phi]0", "'"}], "[", "#4", "]"}]}], 
             RowBox[{
              RowBox[{"a", "[", "#4", "]"}], "H"}]]}], "&"}], ")"}]}], 
        "}"}]}], "//", "Expand"}], ")"}], "//.", "toCanonical"}], "//", 
   RowBox[{
    RowBox[{"Collect", "[", 
     RowBox[{"#", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Zeta]", "[", 
         RowBox[{"x", ",", "y", ",", "z", ",", "\[Tau]"}], "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Derivative", "[", 
           RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "]"}], "[", "_", 
          "]"}], "[", "__", "]"}]}], "}"}], ",", "Simplify"}], "]"}], 
    "&"}]}]}]], "Input",
 CellChangeTimes->{{3.5986887646502743`*^9, 3.598688821849516*^9}, {
  3.598688853909387*^9, 3.598688870484107*^9}, {3.598689206961466*^9, 
  3.598689233840726*^9}, {3.598689440304654*^9, 3.598689456309195*^9}, {
  3.5986909695845947`*^9, 3.598691021764801*^9}, {3.598691122277817*^9, 
  3.598691129423111*^9}, {3.5986923091728373`*^9, 3.598692380311558*^9}, {
  3.59869244755219*^9, 3.598692448389532*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"2", " ", "\[Lambda]", " ", 
     RowBox[{"a", "[", "\[Tau]", "]"}], " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["\[Zeta]", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "0", ",", "0", ",", "1"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"x", ",", "y", ",", "z", ",", "\[Tau]"}], "]"}], "3"]}], 
    SuperscriptBox["H", "3"]]}], "-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SuperscriptBox["cs", "2"]}], ")"}], " ", "\[CapitalSigma]", " ", 
    RowBox[{"a", "[", "\[Tau]", "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[Zeta]", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "0", ",", "0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"x", ",", "y", ",", "z", ",", "\[Tau]"}], "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["\[Zeta]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"x", ",", "y", ",", "z", ",", "\[Tau]"}], "]"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["\[Zeta]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"x", ",", "y", ",", "z", ",", "\[Tau]"}], "]"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["\[Zeta]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"x", ",", "y", ",", "z", ",", "\[Tau]"}], "]"}], "2"]}], 
     ")"}]}], 
   SuperscriptBox["H", "3"]]}]], "Output",
 CellChangeTimes->{{3.598688867303721*^9, 3.5986888708413*^9}, {
   3.598688945115913*^9, 3.598688968527288*^9}, {3.598689194898384*^9, 
   3.5986892443750772`*^9}, 3.5986893958473186`*^9, {3.598689442696041*^9, 
   3.598689456656611*^9}, 3.5986899301733093`*^9, {3.598689966093172*^9, 
   3.598689977797687*^9}, {3.598690025621108*^9, 3.598690051152791*^9}, 
   3.59869037753161*^9, 3.598690517362414*^9, 3.598690678993833*^9, 
   3.598690905503207*^9, 3.5986910222185593`*^9, 3.598691068335141*^9, {
   3.598691099254581*^9, 3.5986911297952623`*^9}, 3.598691293348413*^9, {
   3.598691368129232*^9, 3.5986913820767717`*^9}, 3.598692218685584*^9, 
   3.59869231056103*^9, {3.598692350139924*^9, 3.5986923806602087`*^9}, 
   3.598692448727407*^9, 3.598703420302464*^9, 3.598705432173912*^9, 
   3.598706996264709*^9, 3.6068089724186277`*^9, 3.6068090609182863`*^9, 
   3.6068092051451406`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
To print the result in a better-looking form\
\>", "Subsection",
 CellChangeTimes->{{3.5986924777372217`*^9, 3.5986924851180553`*^9}, {
  3.59869259347661*^9, 3.5986927020574217`*^9}}],

Cell["\<\
Ref: Eq 3.4 of http://arxiv.org/pdf/0905.3494.pdf . To compare, note that \
here conformal time is used.
This is up to an integration by part the same as in Chen Huang Kachru Shiu \
paper.\
\>", "Text",
 CellChangeTimes->{{3.5986924777372217`*^9, 3.5986924851180553`*^9}, {
  3.59869259347661*^9, 3.598692705690476*^9}, {3.598692810949361*^9, 
  3.5986928290297422`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lag3\[Zeta]", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"a", "[", "t", "]"}], "\[Rule]", "a"}], ",", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[Zeta]", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "0", ",", "0", ",", "1"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"x", ",", "y", ",", "z", ",", "\[Tau]"}], "]"}], "\[Rule]", 
     RowBox[{"\[Zeta]", "'"}]}], ",", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["\[Zeta]", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"x", ",", "y", ",", "z", ",", "\[Tau]"}], "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["\[Zeta]", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1", ",", "0", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"x", ",", "y", ",", "z", ",", "\[Tau]"}], "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["\[Zeta]", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "0", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"x", ",", "y", ",", "z", ",", "\[Tau]"}], "]"}], "2"]}], 
      ")"}], "\[Rule]", "\[CapitalSampi]i\[CapitalSampi]i\[Zeta]"}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.5986924898182907`*^9, 3.5986925440013647`*^9}, {
  3.598692776299521*^9, 3.598692777630232*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["cs", "2"]}], ")"}], " ", "\[CapitalSigma]", " ", 
     "\[CapitalSampi]i\[CapitalSampi]i\[Zeta]", " ", 
     RowBox[{"a", "[", "\[Tau]", "]"}], " ", 
     SuperscriptBox["\[Zeta]", "\[Prime]",
      MultilineFunction->None]}], 
    SuperscriptBox["H", "3"]]}], "-", 
  FractionBox[
   RowBox[{"2", " ", "\[Lambda]", " ", 
    RowBox[{"a", "[", "\[Tau]", "]"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      SuperscriptBox["\[Zeta]", "\[Prime]",
       MultilineFunction->None], ")"}], "3"]}], 
   SuperscriptBox["H", "3"]]}]], "Output",
 CellChangeTimes->{3.598692510530409*^9, 3.59869254452886*^9, 
  3.598692778694401*^9, 3.598703420331665*^9, 3.598705432201097*^9, 
  3.59870699629736*^9, 3.606808972445024*^9, 3.606809060942337*^9, 
  3.6068092051556396`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Fourier transform into Momentum space\
\>", "Subsection",
 CellChangeTimes->{{3.598704979093855*^9, 3.598704987749851*^9}}],

Cell[TextData[{
 "The integration measure is ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["S", "3"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = \[Integral] d\[Tau]",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox["d", "3"], "k1"}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"2", "\[Pi]"}], ")"}], "3"]], 
    FractionBox[
     RowBox[{
      SuperscriptBox["d", "3"], "k2"}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"2", "\[Pi]"}], ")"}], "3"]], 
    FractionBox[
     RowBox[{
      SuperscriptBox["d", "3"], "k3"}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"2", "\[Pi]"}], ")"}], "3"]]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[Delta]", "3"], "(", "\[CapitalSigma]k", ")"}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 " lag3\[Zeta]k"
}], "Text",
 CellChangeTimes->{{3.598706598323201*^9, 3.598706685558691*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fourierTerm", "[", "term_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"cnt", "=", "0"}], ",", "\[Zeta]trans"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Zeta]trans", ":=", 
      RowBox[{"\[Zeta]", "\[RuleDelayed]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"cnt", "++"}], ";", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Zeta]", "[", 
            RowBox[{
             RowBox[{"kx", "[", "cnt", "]"}], ",", 
             RowBox[{"ky", "[", "cnt", "]"}], ",", 
             RowBox[{"kz", "[", "cnt", "]"}], ",", "#4"}], "]"}], "*", 
           SuperscriptBox["E", 
            RowBox[{
             RowBox[{"-", "I"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kx", "[", "cnt", "]"}], "#1"}], "+", 
               RowBox[{
                RowBox[{"ky", "[", "cnt", "]"}], "#2"}], "+", 
               RowBox[{
                RowBox[{"kz", "[", "cnt", "]"}], "#3"}]}], ")"}]}]]}], 
          "&"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"term", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Power", "[", 
             RowBox[{"f_", ",", 
              RowBox[{"n_", "?", "IntegerQ"}]}], "]"}], "/;", 
            RowBox[{"!", 
             RowBox[{"FreeQ", "[", 
              RowBox[{"f", ",", "\[Zeta]"}], "]"}]}]}], "\[RuleDelayed]", 
           RowBox[{"Product", "[", 
            RowBox[{
             RowBox[{"f", "/.", "\[Zeta]trans"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "n"}], "}"}]}], "]"}]}], ",", 
          "\[Zeta]trans"}], "}"}]}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"k", ":", 
            RowBox[{"kx", "|", "ky", "|", "kz"}]}], ")"}], "[", "1", "]"}], 
         "\[RuleDelayed]", 
         RowBox[{"-", 
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{"k", "[", "i", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "2", ",", "cnt"}], "}"}]}], "]"}]}]}], "}"}]}],
       "//", "Simplify"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.598695686699236*^9, 3.598695771899205*^9}, {
  3.598695954186817*^9, 3.5986959543720407`*^9}, {3.598695998939513*^9, 
  3.598696099491331*^9}, {3.598696136514974*^9, 3.59869638209228*^9}, {
  3.598696441050808*^9, 3.598696511783567*^9}, {3.598696592515274*^9, 
  3.598696642654929*^9}, {3.598696686614952*^9, 3.5986967940125103`*^9}, {
  3.598696868956958*^9, 3.59869688482285*^9}, {3.59869697275386*^9, 
  3.598696978745719*^9}, {3.598697133898033*^9, 3.5986971381018057`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lag3\[Zeta]k", "=", 
  RowBox[{
   RowBox[{"fourierTerm", "/@", 
    RowBox[{"Expand", "[", "lag3\[Zeta]", "]"}]}], "//", 
   "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.598695658689992*^9, 3.598695683704399*^9}, {
  3.598696298593207*^9, 3.598696302767943*^9}, {3.598696984124503*^9, 
  3.5986969855987673`*^9}, {3.598697224533946*^9, 3.598697227001601*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   SuperscriptBox["H", "3"]], 
  RowBox[{
   RowBox[{"a", "[", "\[Tau]", "]"}], " ", 
   RowBox[{
    SuperscriptBox["\[Zeta]", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "0", ",", "0", ",", "1"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"kx", "[", "2", "]"}]}], "-", 
      RowBox[{"kx", "[", "3", "]"}]}], ",", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"ky", "[", "2", "]"}]}], "-", 
      RowBox[{"ky", "[", "3", "]"}]}], ",", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"kz", "[", "2", "]"}]}], "-", 
      RowBox[{"kz", "[", "3", "]"}]}], ",", "\[Tau]"}], "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["cs", "2"]}], ")"}], " ", "\[CapitalSigma]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"kx", "[", "2", "]"}], " ", 
         RowBox[{"kx", "[", "3", "]"}]}], "+", 
        RowBox[{
         RowBox[{"ky", "[", "2", "]"}], " ", 
         RowBox[{"ky", "[", "3", "]"}]}], "+", 
        RowBox[{
         RowBox[{"kz", "[", "2", "]"}], " ", 
         RowBox[{"kz", "[", "3", "]"}]}]}], ")"}], " ", 
      RowBox[{"\[Zeta]", "[", 
       RowBox[{
        RowBox[{"kx", "[", "2", "]"}], ",", 
        RowBox[{"ky", "[", "2", "]"}], ",", 
        RowBox[{"kz", "[", "2", "]"}], ",", "\[Tau]"}], "]"}], " ", 
      RowBox[{"\[Zeta]", "[", 
       RowBox[{
        RowBox[{"kx", "[", "3", "]"}], ",", 
        RowBox[{"ky", "[", "3", "]"}], ",", 
        RowBox[{"kz", "[", "3", "]"}], ",", "\[Tau]"}], "]"}]}], "-", 
     RowBox[{"2", " ", "\[Lambda]", " ", 
      RowBox[{
       SuperscriptBox["\[Zeta]", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "0", ",", "0", ",", "1"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{
        RowBox[{"kx", "[", "2", "]"}], ",", 
        RowBox[{"ky", "[", "2", "]"}], ",", 
        RowBox[{"kz", "[", "2", "]"}], ",", "\[Tau]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["\[Zeta]", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "0", ",", "0", ",", "1"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{
        RowBox[{"kx", "[", "3", "]"}], ",", 
        RowBox[{"ky", "[", "3", "]"}], ",", 
        RowBox[{"kz", "[", "3", "]"}], ",", "\[Tau]"}], "]"}]}]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.598695665646367*^9, 3.5986963034022017`*^9, 3.598696386287537*^9, 
   3.598696910652368*^9, {3.5986969819365463`*^9, 3.598696985872012*^9}, 
   3.5986971431045017`*^9, 3.598697227664184*^9, 3.5987034204538927`*^9, 
   3.5987054323051367`*^9, 3.598706996428224*^9, 3.606808972527742*^9, 
   3.606809061057032*^9, 3.6068092052259197`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Interaction Hamiltonian", "Subsection",
 CellChangeTimes->{{3.598704999007002*^9, 3.5987050075337877`*^9}}],

Cell["\<\
Note that this ham3\[Zeta]k=-lag3\[Zeta]k happens to be true only for 3rd \
order.\
\>", "Text",
 CellChangeTimes->{{3.598705012411605*^9, 3.598705038351757*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ham3\[Zeta]k", "=", 
  RowBox[{"-", "lag3\[Zeta]k"}]}]], "Input",
 CellChangeTimes->{{3.598697251767784*^9, 3.598697260902866*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{
   FractionBox["1", 
    SuperscriptBox["H", "3"]], 
   RowBox[{
    RowBox[{"a", "[", "\[Tau]", "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[Zeta]", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "0", ",", "0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"kx", "[", "2", "]"}]}], "-", 
       RowBox[{"kx", "[", "3", "]"}]}], ",", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"ky", "[", "2", "]"}]}], "-", 
       RowBox[{"ky", "[", "3", "]"}]}], ",", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"kz", "[", "2", "]"}]}], "-", 
       RowBox[{"kz", "[", "3", "]"}]}], ",", "\[Tau]"}], "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["cs", "2"]}], ")"}], " ", "\[CapitalSigma]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"kx", "[", "2", "]"}], " ", 
          RowBox[{"kx", "[", "3", "]"}]}], "+", 
         RowBox[{
          RowBox[{"ky", "[", "2", "]"}], " ", 
          RowBox[{"ky", "[", "3", "]"}]}], "+", 
         RowBox[{
          RowBox[{"kz", "[", "2", "]"}], " ", 
          RowBox[{"kz", "[", "3", "]"}]}]}], ")"}], " ", 
       RowBox[{"\[Zeta]", "[", 
        RowBox[{
         RowBox[{"kx", "[", "2", "]"}], ",", 
         RowBox[{"ky", "[", "2", "]"}], ",", 
         RowBox[{"kz", "[", "2", "]"}], ",", "\[Tau]"}], "]"}], " ", 
       RowBox[{"\[Zeta]", "[", 
        RowBox[{
         RowBox[{"kx", "[", "3", "]"}], ",", 
         RowBox[{"ky", "[", "3", "]"}], ",", 
         RowBox[{"kz", "[", "3", "]"}], ",", "\[Tau]"}], "]"}]}], "-", 
      RowBox[{"2", " ", "\[Lambda]", " ", 
       RowBox[{
        SuperscriptBox["\[Zeta]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{
         RowBox[{"kx", "[", "2", "]"}], ",", 
         RowBox[{"ky", "[", "2", "]"}], ",", 
         RowBox[{"kz", "[", "2", "]"}], ",", "\[Tau]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["\[Zeta]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{
         RowBox[{"kx", "[", "3", "]"}], ",", 
         RowBox[{"ky", "[", "3", "]"}], ",", 
         RowBox[{"kz", "[", "3", "]"}], ",", "\[Tau]"}], "]"}]}]}], 
     ")"}]}]}]}]], "Output",
 CellChangeTimes->{3.598697263290366*^9, 3.5987034204822483`*^9, 
  3.5987054323300333`*^9, 3.5987069964324293`*^9, 3.6068089725534*^9, 
  3.606809061061317*^9, 3.606809205238781*^9}]
}, Open  ]],

Cell["Better looking form of ham3\[Zeta]k", "Text",
 CellChangeTimes->{{3.598702886637348*^9, 3.598702891754978*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Collect", "[", 
  RowBox[{
   RowBox[{"ham3\[Zeta]k", "/.", 
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Zeta]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"kx", "[", "2", "]"}]}], "-", 
          RowBox[{"kx", "[", "3", "]"}]}], ",", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"ky", "[", "2", "]"}]}], "-", 
          RowBox[{"ky", "[", "3", "]"}]}], ",", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"kz", "[", "2", "]"}]}], "-", 
          RowBox[{"kz", "[", "3", "]"}]}], ",", "\[Tau]"}], "]"}], " ", 
       "\[Rule]", 
       RowBox[{
        SubscriptBox["\[Zeta]", "k1"], "'"}]}], ",", " ", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Zeta]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{
         RowBox[{"kx", "[", "2", "]"}], ",", 
         RowBox[{"ky", "[", "2", "]"}], ",", 
         RowBox[{"kz", "[", "2", "]"}], ",", "\[Tau]"}], "]"}], "\[Rule]", 
       RowBox[{
        SubscriptBox["\[Zeta]", "k2"], "'"}]}], ",", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Zeta]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{
         RowBox[{"kx", "[", "3", "]"}], ",", 
         RowBox[{"ky", "[", "3", "]"}], ",", 
         RowBox[{"kz", "[", "3", "]"}], ",", "\[Tau]"}], "]"}], "\[Rule]", 
       RowBox[{
        SubscriptBox["\[Zeta]", "k3"], "'"}]}], ",", 
      RowBox[{
       RowBox[{"\[Zeta]", "[", 
        RowBox[{
         RowBox[{"kx", "[", "2", "]"}], ",", 
         RowBox[{"ky", "[", "2", "]"}], ",", 
         RowBox[{"kz", "[", "2", "]"}], ",", "\[Tau]"}], "]"}], "\[Rule]", 
       SubscriptBox["\[Zeta]", "k2"]}], ",", 
      RowBox[{
       RowBox[{"\[Zeta]", "[", 
        RowBox[{
         RowBox[{"kx", "[", "3", "]"}], ",", 
         RowBox[{"ky", "[", "3", "]"}], ",", 
         RowBox[{"kz", "[", "3", "]"}], ",", "\[Tau]"}], "]"}], "\[Rule]", 
       SubscriptBox["\[Zeta]", "k3"]}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", ",", "\[CapitalSigma]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.598702894499626*^9, 3.598702979651575*^9}, {
  3.59870302206907*^9, 3.59870307792826*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["cs", "2"]}], ")"}], " ", "\[CapitalSigma]", " ", 
     RowBox[{"a", "[", "\[Tau]", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"kx", "[", "2", "]"}], " ", 
        RowBox[{"kx", "[", "3", "]"}]}], "+", 
       RowBox[{
        RowBox[{"ky", "[", "2", "]"}], " ", 
        RowBox[{"ky", "[", "3", "]"}]}], "+", 
       RowBox[{
        RowBox[{"kz", "[", "2", "]"}], " ", 
        RowBox[{"kz", "[", "3", "]"}]}]}], ")"}], " ", 
     SubscriptBox["\[Zeta]", "k2"], " ", 
     SubscriptBox["\[Zeta]", "k3"], " ", 
     SuperscriptBox[
      SubscriptBox["\[Zeta]", "k1"], "\[Prime]",
      MultilineFunction->None]}], 
    SuperscriptBox["H", "3"]]}], "+", 
  FractionBox[
   RowBox[{"2", " ", "\[Lambda]", " ", 
    RowBox[{"a", "[", "\[Tau]", "]"}], " ", 
    SuperscriptBox[
     SubscriptBox["\[Zeta]", "k1"], "\[Prime]",
     MultilineFunction->None], " ", 
    SuperscriptBox[
     SubscriptBox["\[Zeta]", "k2"], "\[Prime]",
     MultilineFunction->None], " ", 
    SuperscriptBox[
     SubscriptBox["\[Zeta]", "k3"], "\[Prime]",
     MultilineFunction->None]}], 
   SuperscriptBox["H", "3"]]}]], "Output",
 CellChangeTimes->{{3.5987029110855513`*^9, 3.598702980105968*^9}, 
   3.5987030311278353`*^9, 3.598703078343474*^9, 3.598703420532783*^9, 
   3.598705432356841*^9, 3.598706996466516*^9, 3.6068089725802402`*^9, 
   3.606809061086009*^9, 3.606809205251337*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["In-in formalism", "Section",
 CellChangeTimes->{{3.5986975224819117`*^9, 3.598697525440587*^9}}],

Cell[TextData[{
 "Eq. (156) of http://arxiv.org/pdf/1303.1523.pdf : \n\:27e8Q(0)\:27e9 = 2 Im \
",
 Cell[BoxData[
  RowBox[{
   SubsuperscriptBox["\[Integral]", 
    RowBox[{"-", "\[Infinity]"}], "0"], 
   RowBox[{
    SubscriptBox["\:27e8Q", "int"], 
    RowBox[{"(", "0", ")"}], 
    SubscriptBox["H", "int"], 
    RowBox[{"(", "\[Tau]", ")"}], "\:27e9", 
    RowBox[{"\[DifferentialD]", "\[Tau]"}]}]}]]],
 " = 2 ",
 Cell[BoxData[
  RowBox[{
   SubsuperscriptBox["\[Integral]", 
    RowBox[{"-", "\[Infinity]"}], "0"], 
   RowBox[{
    SubscriptBox["\:27e8Q", "int"], 
    RowBox[{"(", "0", ")"}], 
    RowBox[{"Im", "[", 
     RowBox[{
      SubscriptBox["H", "int"], 
      RowBox[{"(", "\[Tau]", ")"}]}], "]"}], "\:27e9", 
    RowBox[{"\[DifferentialD]", "\[Tau]"}]}]}]]]
}], "Text",
 CellChangeTimes->{{3.5986975302346783`*^9, 3.5986976849956417`*^9}, {
   3.59869859928542*^9, 3.598698638810305*^9}, 3.598706719165865*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"u", "[", 
      RowBox[{"kx_", ",", "ky_", ",", "kz_", ",", "\[Tau]_"}], "]"}], ":=", 
     RowBox[{
      FractionBox["H", 
       SqrtBox[
        RowBox[{"4", "\[Epsilon]", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["kx", "2"], "+", 
             SuperscriptBox["ky", "2"], "+", 
             SuperscriptBox["kz", "2"]}]], ")"}], "3"]}]]], 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"I", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["kx", "2"], "+", 
           SuperscriptBox["ky", "2"], "+", 
           SuperscriptBox["kz", "2"]}]], "\[Tau]", " ", 
         SuperscriptBox["E", 
          RowBox[{
           RowBox[{"-", "I"}], " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["kx", "2"], "+", 
             SuperscriptBox["ky", "2"], "+", 
             SuperscriptBox["kz", "2"]}]], "\[Tau]"}]]}]}], ")"}]}]}], ";"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"u", "[", 
     RowBox[{"kx_", ",", "ky_", ",", "kz_", ",", "\[Tau]_"}], "]"}], ":=", 
    RowBox[{
     FractionBox["H", 
      SqrtBox[
       RowBox[{"4", "\[Epsilon]", " ", "cs", " ", 
        SuperscriptBox[
         RowBox[{"k", "[", 
          RowBox[{"kx", ",", "ky", ",", "kz"}], "]"}], "3"]}]]], 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"I", "  ", 
        RowBox[{"k", "[", 
         RowBox[{"kx", ",", "ky", ",", "kz"}], "]"}], "cs", " ", "\[Tau]"}]}],
       ")"}], " ", 
     SuperscriptBox["E", 
      RowBox[{
       RowBox[{"-", "I"}], "  ", 
       RowBox[{"k", "[", 
        RowBox[{"kx", ",", "ky", ",", "kz"}], "]"}], "cs", " ", 
       "\[Tau]"}]]}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.5986977146418*^9, 3.598697725468603*^9}, {
   3.598697763242288*^9, 3.5986978789050007`*^9}, {3.59869807637745*^9, 
   3.598698118961009*^9}, 3.598698204388259*^9, {3.5986984094166718`*^9, 
   3.598698411053706*^9}, {3.5986985128853083`*^9, 3.598698513841913*^9}, {
   3.598704564923725*^9, 3.598704587756317*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ham3u", "=", 
  RowBox[{
   RowBox[{"ham3\[Zeta]k", "/.", 
    RowBox[{"\[Zeta]", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"u", "[", 
        RowBox[{"#1", ",", "#2", ",", "#3", ",", "#4"}], "]"}], "&"}], 
      ")"}]}]}], "//", "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.598697893162508*^9, 3.598697922261731*^9}, {
  3.598697967854033*^9, 3.598697996375519*^9}, {3.598698156842072*^9, 
  3.598698193281282*^9}, {3.598700589330922*^9, 3.598700629937818*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "cs", " ", "\[Tau]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"k", "[", 
         RowBox[{
          RowBox[{"kx", "[", "2", "]"}], ",", 
          RowBox[{"ky", "[", "2", "]"}], ",", 
          RowBox[{"kz", "[", "2", "]"}]}], "]"}], "+", 
        RowBox[{"k", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"kx", "[", "2", "]"}]}], "-", 
           RowBox[{"kx", "[", "3", "]"}]}], ",", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"ky", "[", "2", "]"}]}], "-", 
           RowBox[{"ky", "[", "3", "]"}]}], ",", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"kz", "[", "2", "]"}]}], "-", 
           RowBox[{"kz", "[", "3", "]"}]}]}], "]"}], "+", 
        RowBox[{"k", "[", 
         RowBox[{
          RowBox[{"kx", "[", "3", "]"}], ",", 
          RowBox[{"ky", "[", "3", "]"}], ",", 
          RowBox[{"kz", "[", "3", "]"}]}], "]"}]}], ")"}]}]], " ", "\[Tau]", 
    " ", 
    RowBox[{"a", "[", "\[Tau]", "]"}], " ", 
    SuperscriptBox[
     RowBox[{"k", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"kx", "[", "2", "]"}]}], "-", 
        RowBox[{"kx", "[", "3", "]"}]}], ",", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"ky", "[", "2", "]"}]}], "-", 
        RowBox[{"ky", "[", "3", "]"}]}], ",", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"kz", "[", "2", "]"}]}], "-", 
        RowBox[{"kz", "[", "3", "]"}]}]}], "]"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", 
       SuperscriptBox["cs", "4"], " ", "\[Lambda]", " ", 
       SuperscriptBox["\[Tau]", "2"], " ", 
       SuperscriptBox[
        RowBox[{"k", "[", 
         RowBox[{
          RowBox[{"kx", "[", "2", "]"}], ",", 
          RowBox[{"ky", "[", "2", "]"}], ",", 
          RowBox[{"kz", "[", "2", "]"}]}], "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"k", "[", 
         RowBox[{
          RowBox[{"kx", "[", "3", "]"}], ",", 
          RowBox[{"ky", "[", "3", "]"}], ",", 
          RowBox[{"kz", "[", "3", "]"}]}], "]"}], "2"]}], "-", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["cs", "2"]}], ")"}], " ", "\[CapitalSigma]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], "+", 
         RowBox[{"cs", " ", "\[Tau]", " ", 
          RowBox[{"k", "[", 
           RowBox[{
            RowBox[{"kx", "[", "3", "]"}], ",", 
            RowBox[{"ky", "[", "3", "]"}], ",", 
            RowBox[{"kz", "[", "3", "]"}]}], "]"}]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"kx", "[", "2", "]"}], " ", 
          RowBox[{"kx", "[", "3", "]"}]}], "+", 
         RowBox[{
          RowBox[{"ky", "[", "2", "]"}], " ", 
          RowBox[{"ky", "[", "3", "]"}]}], "+", 
         RowBox[{
          RowBox[{"kz", "[", "2", "]"}], " ", 
          RowBox[{"kz", "[", "3", "]"}]}]}], ")"}]}], "+", 
      RowBox[{"cs", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["cs", "2"]}], ")"}], " ", "\[CapitalSigma]", " ", 
       "\[Tau]", " ", 
       RowBox[{"k", "[", 
        RowBox[{
         RowBox[{"kx", "[", "2", "]"}], ",", 
         RowBox[{"ky", "[", "2", "]"}], ",", 
         RowBox[{"kz", "[", "2", "]"}]}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], "+", 
         RowBox[{"cs", " ", "\[Tau]", " ", 
          RowBox[{"k", "[", 
           RowBox[{
            RowBox[{"kx", "[", "3", "]"}], ",", 
            RowBox[{"ky", "[", "3", "]"}], ",", 
            RowBox[{"kz", "[", "3", "]"}]}], "]"}]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"kx", "[", "2", "]"}], " ", 
          RowBox[{"kx", "[", "3", "]"}]}], "+", 
         RowBox[{
          RowBox[{"ky", "[", "2", "]"}], " ", 
          RowBox[{"ky", "[", "3", "]"}]}], "+", 
         RowBox[{
          RowBox[{"kz", "[", "2", "]"}], " ", 
          RowBox[{"kz", "[", "3", "]"}]}]}], ")"}]}]}], ")"}]}], ")"}], "/", 
  RowBox[{"(", 
   RowBox[{"8", " ", 
    SuperscriptBox["\[Epsilon]", 
     RowBox[{"3", "/", "2"}]], " ", 
    SqrtBox[
     FractionBox[
      SuperscriptBox[
       RowBox[{"k", "[", 
        RowBox[{
         RowBox[{"kx", "[", "2", "]"}], ",", 
         RowBox[{"ky", "[", "2", "]"}], ",", 
         RowBox[{"kz", "[", "2", "]"}]}], "]"}], "3"], "cs"]], " ", 
    SqrtBox[
     SuperscriptBox[
      RowBox[{"k", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"kx", "[", "2", "]"}]}], "-", 
         RowBox[{"kx", "[", "3", "]"}]}], ",", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"ky", "[", "2", "]"}]}], "-", 
         RowBox[{"ky", "[", "3", "]"}]}], ",", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"kz", "[", "2", "]"}]}], "-", 
         RowBox[{"kz", "[", "3", "]"}]}]}], "]"}], "3"]], " ", 
    SqrtBox[
     SuperscriptBox[
      RowBox[{"k", "[", 
       RowBox[{
        RowBox[{"kx", "[", "3", "]"}], ",", 
        RowBox[{"ky", "[", "3", "]"}], ",", 
        RowBox[{"kz", "[", "3", "]"}]}], "]"}], "3"]]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.598697909179291*^9, 3.59869792532973*^9}, {
   3.598697993227579*^9, 3.5986979994202843`*^9}, 3.598698121580858*^9, {
   3.5986981572288322`*^9, 3.598698206893466*^9}, 3.5986984126163473`*^9, 
   3.598698515415308*^9, {3.598700600489232*^9, 3.598700630379218*^9}, 
   3.5987033390118113`*^9, 3.598703420663239*^9, 3.598705432580659*^9, 
   3.59870699670324*^9, 3.6068089728038273`*^9, 3.606809061550714*^9, 
   3.606809205465466*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Define and use ",
 Cell[BoxData[
  FormBox[
   RowBox[{"k2", "=", 
    SqrtBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"kx", "[", "2", "]"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"ky", "[", "2", "]"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"kz", "[", "2", "]"}], "2"]}]]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", etc."
}], "Subsection",
 CellChangeTimes->{{3.59869818006347*^9, 3.598698184414254*^9}, {
  3.598706745105762*^9, 3.5987067773257303`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"refineRules", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"k", "[", 
       RowBox[{
        RowBox[{"kx", "[", "2", "]"}], ",", 
        RowBox[{"ky", "[", "2", "]"}], ",", 
        RowBox[{"kz", "[", "2", "]"}]}], "]"}], "\[Rule]", "k2"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"k", "[", 
       RowBox[{
        RowBox[{"kx", "[", "3", "]"}], ",", 
        RowBox[{"ky", "[", "3", "]"}], ",", 
        RowBox[{"kz", "[", "3", "]"}]}], "]"}], "\[Rule]", "k3"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"k", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"kx", "[", "2", "]"}]}], "-", 
         RowBox[{"kx", "[", "3", "]"}]}], ",", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"ky", "[", "2", "]"}]}], "-", 
         RowBox[{"ky", "[", "3", "]"}]}], ",", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"kz", "[", "2", "]"}]}], "-", 
         RowBox[{"kz", "[", "3", "]"}]}]}], "]"}], "\[Rule]", "k1"}]}], 
    "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.598699059919136*^9, 3.5986990721285954`*^9}, {
  3.598705060639872*^9, 3.598705069484518*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ham3uRefined", "=", 
  RowBox[{"Collect", "[", 
   RowBox[{
    RowBox[{"ham3u", "/.", "refineRules"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Lambda]", ",", "\[CapitalSigma]"}], "}"}], ",", "Simplify"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.598698196127618*^9, 3.598698261538595*^9}, {
  3.5986990187113667`*^9, 3.5986990221184397`*^9}, {3.5986990699576597`*^9, 
  3.598699076458241*^9}, {3.598703365272331*^9, 3.598703375074689*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "cs", " ", 
      RowBox[{"(", 
       RowBox[{"k1", "+", "k2", "+", "k3"}], ")"}], " ", "\[Tau]"}]], " ", 
    SqrtBox[
     RowBox[{
      SuperscriptBox["cs", "9"], " ", "k1", " ", "k2", " ", "k3"}]], " ", 
    "\[Lambda]", " ", 
    SuperscriptBox["\[Tau]", "3"], " ", 
    RowBox[{"a", "[", "\[Tau]", "]"}]}], 
   RowBox[{"4", " ", 
    SuperscriptBox["\[Epsilon]", 
     RowBox[{"3", "/", "2"}]]}]], "+", 
  FractionBox[
   RowBox[{
    SqrtBox["cs"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SuperscriptBox["cs", "2"]}], ")"}], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "cs", " ", 
      RowBox[{"(", 
       RowBox[{"k1", "+", "k2", "+", "k3"}], ")"}], " ", "\[Tau]"}]], " ", 
    SuperscriptBox["k1", "2"], " ", "\[CapitalSigma]", " ", "\[Tau]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], "+", 
      RowBox[{"cs", " ", "k2", " ", "\[Tau]"}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], "+", 
      RowBox[{"cs", " ", "k3", " ", "\[Tau]"}]}], ")"}], " ", 
    RowBox[{"a", "[", "\[Tau]", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"kx", "[", "2", "]"}], " ", 
       RowBox[{"kx", "[", "3", "]"}]}], "+", 
      RowBox[{
       RowBox[{"ky", "[", "2", "]"}], " ", 
       RowBox[{"ky", "[", "3", "]"}]}], "+", 
      RowBox[{
       RowBox[{"kz", "[", "2", "]"}], " ", 
       RowBox[{"kz", "[", "3", "]"}]}]}], ")"}]}], 
   RowBox[{"8", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"k1", " ", "k2", " ", "k3", " ", "\[Epsilon]"}], ")"}], 
     RowBox[{"3", "/", "2"}]]}]]}]], "Output",
 CellChangeTimes->{
  3.5986982620691137`*^9, 3.598698413758057*^9, 3.598698516548814*^9, 
   3.5986990225853577`*^9, 3.598699078544937*^9, {3.598700637051602*^9, 
   3.59870064048153*^9}, 3.598703375395402*^9, 3.598703420775968*^9, 
   3.59870543271865*^9, 3.5987069968522673`*^9, 3.606808972941379*^9, 
   3.606809061824304*^9, 3.6068092055897512`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Do the complex conjugate, and take imaginary part\
\>", "Subsection",
 CellChangeTimes->{{3.598705104844742*^9, 3.5987051165361567`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ham3uIMC", "=", 
  RowBox[{"Collect", "[", 
   RowBox[{
    RowBox[{"ComplexExpand", "@", 
     RowBox[{"Im", "@", 
      RowBox[{"Conjugate", "@", "ham3uRefined"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Lambda]", ",", "\[CapitalSigma]"}], "}"}], ",", "Simplify"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.5986985876529083`*^9, 3.598698617249055*^9}, {
  3.598698649733405*^9, 3.598698682731851*^9}, {3.598698755263933*^9, 
  3.598698814008717*^9}, {3.59869902814332*^9, 3.59869904392372*^9}, {
  3.59869925057942*^9, 3.598699263836157*^9}, {3.598703779548059*^9, 
  3.5987037880177097`*^9}, {3.598705083890214*^9, 3.59870508543419*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    SuperscriptBox["cs", 
     RowBox[{"9", "/", "2"}]], " ", 
    SqrtBox[
     RowBox[{"k1", " ", "k2", " ", "k3"}]], " ", "\[Lambda]", " ", 
    SuperscriptBox["\[Tau]", "3"], " ", 
    RowBox[{"a", "[", "\[Tau]", "]"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"cs", " ", 
      RowBox[{"(", 
       RowBox[{"k1", "+", "k2", "+", "k3"}], ")"}], " ", "\[Tau]"}], "]"}]}], 
   
   RowBox[{"4", " ", 
    SuperscriptBox["\[Epsilon]", 
     RowBox[{"3", "/", "2"}]]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["cs", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SuperscriptBox["cs", "2"]}], ")"}], " ", 
    SuperscriptBox["k1", "2"], " ", "\[CapitalSigma]", " ", "\[Tau]", " ", 
    RowBox[{"a", "[", "\[Tau]", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"kx", "[", "2", "]"}], " ", 
       RowBox[{"kx", "[", "3", "]"}]}], "+", 
      RowBox[{
       RowBox[{"ky", "[", "2", "]"}], " ", 
       RowBox[{"ky", "[", "3", "]"}]}], "+", 
      RowBox[{
       RowBox[{"kz", "[", "2", "]"}], " ", 
       RowBox[{"kz", "[", "3", "]"}]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"cs", " ", 
       RowBox[{"(", 
        RowBox[{"k2", "+", "k3"}], ")"}], " ", "\[Tau]", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"cs", " ", 
         RowBox[{"(", 
          RowBox[{"k1", "+", "k2", "+", "k3"}], ")"}], " ", "\[Tau]"}], 
        "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{
          SuperscriptBox["cs", "2"], " ", "k2", " ", "k3", " ", 
          SuperscriptBox["\[Tau]", "2"]}]}], ")"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"cs", " ", 
         RowBox[{"(", 
          RowBox[{"k1", "+", "k2", "+", "k3"}], ")"}], " ", "\[Tau]"}], 
        "]"}]}]}], ")"}]}], 
   RowBox[{"8", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"cs", " ", "k1", " ", "k2", " ", "k3", " ", "\[Epsilon]"}], 
      ")"}], 
     RowBox[{"3", "/", "2"}]]}]]}]], "Output",
 CellChangeTimes->{{3.598698665923139*^9, 3.598698690262911*^9}, 
   3.5986987621605*^9, 3.598698816226623*^9, 3.598699046144463*^9, 
   3.5986990808005247`*^9, {3.59869926598938*^9, 3.598699268645472*^9}, 
   3.598700651152596*^9, 3.598703423478092*^9, 3.598703790196024*^9, 
   3.598705433731389*^9, 3.598706997910336*^9, 3.606808973910706*^9, 
   3.606809062844109*^9, 3.606809206592599*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The integrand of in-in formula", "Subsection",
 CellChangeTimes->{{3.598705128446328*^9, 3.598705135951146*^9}}],

Cell["\<\
Note that here we only take one of the possible contractions. Later, we will \
do the permutations.\
\>", "Text",
 CellChangeTimes->{{3.598705142523511*^9, 3.5987051626255503`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"integrand", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"2", 
     RowBox[{"u", "[", 
      RowBox[{
       RowBox[{"kx", "[", "2", "]"}], ",", 
       RowBox[{"ky", "[", "2", "]"}], ",", 
       RowBox[{"kz", "[", "2", "]"}], ",", "0"}], "]"}], 
     RowBox[{"u", "[", 
      RowBox[{
       RowBox[{"kx", "[", "3", "]"}], ",", 
       RowBox[{"ky", "[", "3", "]"}], ",", 
       RowBox[{"kz", "[", "3", "]"}], ",", "0"}], "]"}], 
     RowBox[{"u", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"kx", "[", "2", "]"}]}], "-", 
        RowBox[{"kx", "[", "3", "]"}]}], ",", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"ky", "[", "2", "]"}]}], "-", 
        RowBox[{"ky", "[", "3", "]"}]}], ",", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"kz", "[", "2", "]"}]}], "-", 
        RowBox[{"kz", "[", "3", "]"}]}], ",", "0"}], "]"}], "ham3uIMC"}], "/.", 
    RowBox[{
     RowBox[{"a", "[", "\[Tau]", "]"}], "\[RuleDelayed]", 
     RowBox[{
      RowBox[{"-", "1"}], "/", 
      RowBox[{"(", 
       RowBox[{"\[Tau]", " ", "H"}], ")"}]}]}]}], "/.", 
   "refineRules"}]}]], "Input",
 CellChangeTimes->{{3.598698464650548*^9, 3.598698565704808*^9}, {
   3.598698891810124*^9, 3.598698897527877*^9}, {3.5986989451228247`*^9, 
   3.598698969470333*^9}, {3.5986990819074507`*^9, 3.5986990917124853`*^9}, 
   3.598701074397676*^9, {3.598705087952832*^9, 3.5987050890098343`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["H", "3"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["cs", 
         RowBox[{"9", "/", "2"}]], " ", 
        SqrtBox[
         RowBox[{"k1", " ", "k2", " ", "k3"}]], " ", "\[Lambda]", " ", 
        SuperscriptBox["\[Tau]", "2"], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"cs", " ", 
          RowBox[{"(", 
           RowBox[{"k1", "+", "k2", "+", "k3"}], ")"}], " ", "\[Tau]"}], 
         "]"}]}], 
       RowBox[{"4", " ", "H", " ", 
        SuperscriptBox["\[Epsilon]", 
         RowBox[{"3", "/", "2"}]]}]]}], "-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["cs", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["cs", "2"]}], ")"}], " ", 
       SuperscriptBox["k1", "2"], " ", "\[CapitalSigma]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"kx", "[", "2", "]"}], " ", 
          RowBox[{"kx", "[", "3", "]"}]}], "+", 
         RowBox[{
          RowBox[{"ky", "[", "2", "]"}], " ", 
          RowBox[{"ky", "[", "3", "]"}]}], "+", 
         RowBox[{
          RowBox[{"kz", "[", "2", "]"}], " ", 
          RowBox[{"kz", "[", "3", "]"}]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"cs", " ", 
          RowBox[{"(", 
           RowBox[{"k2", "+", "k3"}], ")"}], " ", "\[Tau]", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"cs", " ", 
            RowBox[{"(", 
             RowBox[{"k1", "+", "k2", "+", "k3"}], ")"}], " ", "\[Tau]"}], 
           "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{
             SuperscriptBox["cs", "2"], " ", "k2", " ", "k3", " ", 
             SuperscriptBox["\[Tau]", "2"]}]}], ")"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"cs", " ", 
            RowBox[{"(", 
             RowBox[{"k1", "+", "k2", "+", "k3"}], ")"}], " ", "\[Tau]"}], 
           "]"}]}]}], ")"}]}], 
      RowBox[{"8", " ", "H", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"cs", " ", "k1", " ", "k2", " ", "k3", " ", "\[Epsilon]"}], 
         ")"}], 
        RowBox[{"3", "/", "2"}]]}]]}], ")"}]}], 
  RowBox[{"4", " ", 
   SqrtBox[
    RowBox[{"cs", " ", 
     SuperscriptBox["k1", "3"], " ", "\[Epsilon]"}]], " ", 
   SqrtBox[
    RowBox[{"cs", " ", 
     SuperscriptBox["k2", "3"], " ", "\[Epsilon]"}]], " ", 
   SqrtBox[
    RowBox[{"cs", " ", 
     SuperscriptBox["k3", "3"], " ", "\[Epsilon]"}]]}]]], "Output",
 CellChangeTimes->{{3.598698497499867*^9, 3.598698518645487*^9}, 
   3.598698566203167*^9, 3.598698898618544*^9, 3.598698969880838*^9, 
   3.59869909217376*^9, 3.598699269491268*^9, 3.5987010754553328`*^9, 
   3.598703423556316*^9, 3.598703814906283*^9, 3.5987054337952337`*^9, 
   3.598706997974731*^9, 3.6068089739840393`*^9, 3.606809062911282*^9, 
   3.6068092067713118`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Perform the integration", "Subsection",
 CellChangeTimes->{{3.598707143018902*^9, 3.5987071469039793`*^9}}],

Cell["\<\
Technically, it is easier to first do the indefinite integral (variable \
indef), then take limit.\
\>", "Text",
 CellChangeTimes->{{3.598705172151024*^9, 3.598705217320174*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"indef", "=", 
  RowBox[{"Collect", "[", 
   RowBox[{
    RowBox[{"Integrate", "[", 
     RowBox[{"integrand", ",", "\[Tau]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"_Sin", ",", "_Cos"}], "}"}], ",", "Simplify"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.598698873689857*^9, 3.5986989353692904`*^9}, {
  3.598703187450732*^9, 3.5987031956459846`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"cs", " ", 
    SuperscriptBox["H", "2"], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"cs", " ", 
      RowBox[{"(", 
       RowBox[{"k1", "+", "k2", "+", "k3"}], ")"}], " ", "\[Tau]"}], "]"}], 
    " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"cs", " ", "k1", " ", "k2", " ", "k3"}]], " ", "\[Lambda]", 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{
           SuperscriptBox["cs", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"k1", "+", "k2", "+", "k3"}], ")"}], "2"], " ", 
           SuperscriptBox["\[Tau]", "2"]}]}], ")"}]}], 
       SuperscriptBox["\[Epsilon]", 
        RowBox[{"3", "/", "2"}]]], "+", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["cs", "2"]}], ")"}], " ", 
        SuperscriptBox["k1", "2"], " ", "\[CapitalSigma]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           SuperscriptBox["k3", "2"]}], "+", 
          RowBox[{
           SuperscriptBox["cs", "2"], " ", 
           SuperscriptBox["k2", "3"], " ", "k3", " ", 
           SuperscriptBox["\[Tau]", "2"]}], "+", 
          RowBox[{
           SuperscriptBox["k1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{
              SuperscriptBox["cs", "2"], " ", "k2", " ", "k3", " ", 
              SuperscriptBox["\[Tau]", "2"]}]}], ")"}]}], "+", 
          RowBox[{"k2", " ", "k3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{
              SuperscriptBox["cs", "2"], " ", 
              SuperscriptBox["k3", "2"], " ", 
              SuperscriptBox["\[Tau]", "2"]}]}], ")"}]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["k2", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{
              SuperscriptBox["cs", "2"], " ", 
              SuperscriptBox["k3", "2"], " ", 
              SuperscriptBox["\[Tau]", "2"]}]}], ")"}]}], "+", 
          RowBox[{"k1", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "3"}], " ", "k3"}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["cs", "2"], " ", 
              SuperscriptBox["k2", "2"], " ", "k3", " ", 
              SuperscriptBox["\[Tau]", "2"]}], "+", 
             RowBox[{"k2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", 
                RowBox[{"2", " ", 
                 SuperscriptBox["cs", "2"], " ", 
                 SuperscriptBox["k3", "2"], " ", 
                 SuperscriptBox["\[Tau]", "2"]}]}], ")"}]}]}], ")"}]}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"kx", "[", "2", "]"}], " ", 
           RowBox[{"kx", "[", "3", "]"}]}], "+", 
          RowBox[{
           RowBox[{"ky", "[", "2", "]"}], " ", 
           RowBox[{"ky", "[", "3", "]"}]}], "+", 
          RowBox[{
           RowBox[{"kz", "[", "2", "]"}], " ", 
           RowBox[{"kz", "[", "3", "]"}]}]}], ")"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"cs", " ", "k1", " ", "k2", " ", "k3", " ", "\[Epsilon]"}], 
         ")"}], 
        RowBox[{"3", "/", "2"}]]]}], ")"}]}], 
   RowBox[{"32", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"k1", "+", "k2", "+", "k3"}], ")"}], "3"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"cs", " ", "k1", " ", "k2", " ", "k3", " ", "\[Epsilon]"}], 
      ")"}], 
     RowBox[{"3", "/", "2"}]]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["cs", "2"], " ", 
    SuperscriptBox["H", "2"], " ", "\[Tau]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "4"}], " ", 
       SqrtBox[
        FractionBox[
         RowBox[{"cs", " ", "k1", " ", "k2", " ", "k3"}], 
         SuperscriptBox["\[Epsilon]", "3"]]], " ", "\[Lambda]"}], "+", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SuperscriptBox["cs", "2"]}], ")"}], " ", 
        SuperscriptBox["k1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["k2", "2"], "+", 
          RowBox[{"4", " ", "k2", " ", "k3"}], "+", 
          SuperscriptBox["k3", "2"], "+", 
          RowBox[{"k1", " ", 
           RowBox[{"(", 
            RowBox[{"k2", "+", "k3"}], ")"}]}]}], ")"}], " ", 
        "\[CapitalSigma]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"kx", "[", "2", "]"}], " ", 
           RowBox[{"kx", "[", "3", "]"}]}], "+", 
          RowBox[{
           RowBox[{"ky", "[", "2", "]"}], " ", 
           RowBox[{"ky", "[", "3", "]"}]}], "+", 
          RowBox[{
           RowBox[{"kz", "[", "2", "]"}], " ", 
           RowBox[{"kz", "[", "3", "]"}]}]}], ")"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"cs", " ", "k1", " ", "k2", " ", "k3", " ", "\[Epsilon]"}], 
         ")"}], 
        RowBox[{"3", "/", "2"}]]]}], ")"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"cs", " ", 
      RowBox[{"(", 
       RowBox[{"k1", "+", "k2", "+", "k3"}], ")"}], " ", "\[Tau]"}], "]"}]}], 
   
   RowBox[{"32", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"k1", "+", "k2", "+", "k3"}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"cs", " ", "k1", " ", "k2", " ", "k3", " ", "\[Epsilon]"}], 
      ")"}], 
     RowBox[{"3", "/", "2"}]]}]]}]], "Output",
 CellChangeTimes->{3.59869893657998*^9, 3.598698972431838*^9, 
  3.598699096371399*^9, 3.598699272634968*^9, 3.598701078637437*^9, 
  3.598703197559444*^9, 3.5987034254378347`*^9, 3.598703830190074*^9, 
  3.5987054410663633`*^9, 3.5987070052743597`*^9, 3.606808981230256*^9, 
  3.606809070205769*^9, 3.6068092140848007`*^9}]
}, Open  ]],

Cell["\<\
Note that the integration at infinity is suppressed by i\[Epsilon] term \
(implicitly in the sin and cos functions). Thus only the \[Tau]->0 part is \
relevant.\
\>", "Text",
 CellChangeTimes->{{3.598703230325618*^9, 3.598703244232602*^9}, {
  3.59870522838696*^9, 3.598705238310055*^9}, {3.598706828117441*^9, 
  3.598706837543601*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"int0", "=", 
  RowBox[{"indef", "/.", 
   RowBox[{"\[Tau]", "\[Rule]", "0"}]}]}]], "Input",
 CellChangeTimes->{{3.598703112725625*^9, 3.598703124588715*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"cs", " ", 
   SuperscriptBox["H", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"4", " ", 
        SqrtBox[
         RowBox[{"cs", " ", "k1", " ", "k2", " ", "k3"}]], " ", "\[Lambda]"}], 
       SuperscriptBox["\[Epsilon]", 
        RowBox[{"3", "/", "2"}]]]}], "+", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["cs", "2"]}], ")"}], " ", 
       SuperscriptBox["k1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["k1", "2"]}], "-", 
         RowBox[{"2", " ", 
          SuperscriptBox["k2", "2"]}], "+", 
         RowBox[{"k1", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "3"}], " ", "k2"}], "-", 
            RowBox[{"3", " ", "k3"}]}], ")"}]}], "-", 
         RowBox[{"6", " ", "k2", " ", "k3"}], "-", 
         RowBox[{"2", " ", 
          SuperscriptBox["k3", "2"]}]}], ")"}], " ", "\[CapitalSigma]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"kx", "[", "2", "]"}], " ", 
          RowBox[{"kx", "[", "3", "]"}]}], "+", 
         RowBox[{
          RowBox[{"ky", "[", "2", "]"}], " ", 
          RowBox[{"ky", "[", "3", "]"}]}], "+", 
         RowBox[{
          RowBox[{"kz", "[", "2", "]"}], " ", 
          RowBox[{"kz", "[", "3", "]"}]}]}], ")"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"cs", " ", "k1", " ", "k2", " ", "k3", " ", "\[Epsilon]"}], 
        ")"}], 
       RowBox[{"3", "/", "2"}]]]}], ")"}]}], 
  RowBox[{"32", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"k1", "+", "k2", "+", "k3"}], ")"}], "3"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"cs", " ", "k1", " ", "k2", " ", "k3", " ", "\[Epsilon]"}], 
     ")"}], 
    RowBox[{"3", "/", "2"}]]}]]], "Output",
 CellChangeTimes->{3.598703125680909*^9, 3.5987032194868793`*^9, 
  3.598703425501511*^9, 3.598703837178578*^9, 3.598705441127445*^9, 
  3.598707005348576*^9, 3.606808981288097*^9, 3.6068090702973757`*^9, 
  3.60680921415697*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"threePtRaw", "=", 
  RowBox[{"Collect", "[", 
   RowBox[{"int0", ",", 
    RowBox[{"{", 
     RowBox[{"\[Lambda]", ",", "\[CapitalSigma]"}], "}"}], ",", "Simplify"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.5986998720448236`*^9, 3.598699898288967*^9}, {
  3.5987031713926086`*^9, 3.598703171820223*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["H", "2"], " ", "\[Lambda]"}], 
    RowBox[{"8", " ", "k1", " ", "k2", " ", "k3", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"k1", "+", "k2", "+", "k3"}], ")"}], "3"], " ", 
     SuperscriptBox["\[Epsilon]", "3"]}]]}], "-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SuperscriptBox["cs", "2"]}], ")"}], " ", 
    SuperscriptBox["H", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["k1", "2"], "+", 
      RowBox[{"3", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{"k2", "+", "k3"}], ")"}]}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["k2", "2"], "+", 
         RowBox[{"3", " ", "k2", " ", "k3"}], "+", 
         SuperscriptBox["k3", "2"]}], ")"}]}]}], ")"}], " ", 
    "\[CapitalSigma]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"kx", "[", "2", "]"}], " ", 
       RowBox[{"kx", "[", "3", "]"}]}], "+", 
      RowBox[{
       RowBox[{"ky", "[", "2", "]"}], " ", 
       RowBox[{"ky", "[", "3", "]"}]}], "+", 
      RowBox[{
       RowBox[{"kz", "[", "2", "]"}], " ", 
       RowBox[{"kz", "[", "3", "]"}]}]}], ")"}]}], 
   RowBox[{"32", " ", 
    SuperscriptBox["cs", "2"], " ", "k1", " ", 
    SuperscriptBox["k2", "3"], " ", 
    SuperscriptBox["k3", "3"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"k1", "+", "k2", "+", "k3"}], ")"}], "3"], " ", 
    SuperscriptBox["\[Epsilon]", "3"]}]]}]], "Output",
 CellChangeTimes->{{3.598699872357361*^9, 3.5986999011567307`*^9}, 
   3.598701081952085*^9, 3.598703172477076*^9, 3.5987032227444344`*^9, 
   3.598703425551024*^9, 3.598703847564876*^9, 3.598705441182041*^9, 
   3.598707005414513*^9, 3.606808981359171*^9, 3.606809070376642*^9, 
   3.606809214222074*^9}]
}, Open  ]],

Cell[TextData[{
 "Note that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"kx", "[", "2", "]"}], 
     RowBox[{"kx", "[", "3", "]"}]}], "=", 
    RowBox[{
     FractionBox["1", "2"], 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"kx", "[", "1", "]"}], "2"], "-", 
       SuperscriptBox[
        RowBox[{"kx", "[", "2", "]"}], "2"], "-", 
       SuperscriptBox[
        RowBox[{"kx", "[", "3", "]"}], "2"]}], ")"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", and similarily for ky and kz.\n",
 "threePtSingleContract is the three point function before doing momentum \
permutations"
}], "Text",
 CellChangeTimes->{{3.598699710507341*^9, 3.5986997615378838`*^9}, {
  3.59869985313107*^9, 3.598699853344397*^9}, {3.598706871221493*^9, 
  3.598706889767727*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"threePtSingleContract", "=", 
  RowBox[{"Collect", "[", 
   RowBox[{
    RowBox[{"threePtRaw", "/.", 
     RowBox[{"{", " ", 
      FormBox[
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"kx", "[", "2", "]"}], " ", 
          RowBox[{"kx", "[", "3", "]"}]}], "+", 
         RowBox[{
          RowBox[{"ky", "[", "2", "]"}], " ", 
          RowBox[{"ky", "[", "3", "]"}]}], "+", 
         RowBox[{
          RowBox[{"kz", "[", "2", "]"}], " ", 
          RowBox[{"kz", "[", "3", "]"}]}]}], "\[Rule]", 
        RowBox[{
         FractionBox["1", "2"], 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["k1", "2"], "-", 
           SuperscriptBox["k2", "2"], "-", 
           SuperscriptBox["k3", "2"]}], ")"}]}]}],
       TraditionalForm], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Lambda]", ",", "\[CapitalSigma]"}], "}"}], ",", "Simplify"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.598698980385181*^9, 3.5986990016982718`*^9}, {
  3.5986991177564774`*^9, 3.598699122930529*^9}, {3.598699679629587*^9, 
  3.5986996914032516`*^9}, {3.598699765732544*^9, 3.598699899993597*^9}, {
  3.598700723273303*^9, 3.598700734084813*^9}, {3.598702101102661*^9, 
  3.598702108897286*^9}, {3.598702372480403*^9, 3.598702387803224*^9}, {
  3.598702657274543*^9, 3.598702660793386*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["H", "2"], " ", "\[Lambda]"}], 
    RowBox[{"8", " ", "k1", " ", "k2", " ", "k3", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"k1", "+", "k2", "+", "k3"}], ")"}], "3"], " ", 
     SuperscriptBox["\[Epsilon]", "3"]}]]}], "-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SuperscriptBox["cs", "2"]}], ")"}], " ", 
    SuperscriptBox["H", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["k1", "2"], "-", 
      SuperscriptBox["k2", "2"], "-", 
      SuperscriptBox["k3", "2"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["k1", "2"], "+", 
      RowBox[{"3", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{"k2", "+", "k3"}], ")"}]}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["k2", "2"], "+", 
         RowBox[{"3", " ", "k2", " ", "k3"}], "+", 
         SuperscriptBox["k3", "2"]}], ")"}]}]}], ")"}], " ", 
    "\[CapitalSigma]"}], 
   RowBox[{"64", " ", 
    SuperscriptBox["cs", "2"], " ", "k1", " ", 
    SuperscriptBox["k2", "3"], " ", 
    SuperscriptBox["k3", "3"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"k1", "+", "k2", "+", "k3"}], ")"}], "3"], " ", 
    SuperscriptBox["\[Epsilon]", "3"]}]]}]], "Output",
 CellChangeTimes->{{3.598698983253235*^9, 3.5986990020680733`*^9}, {
   3.5986991065436068`*^9, 3.5986991238987617`*^9}, 3.598699276008555*^9, 
   3.598699691733679*^9, 3.5986998072580833`*^9, {3.598699855230617*^9, 
   3.5986999021689863`*^9}, 3.5987007362688723`*^9, 3.598701083198243*^9, 
   3.598702109606978*^9, 3.598702392320717*^9, 3.59870253052326*^9, 
   3.598702669822653*^9, 3.5987034255893717`*^9, 3.59870420356453*^9, 
   3.598705441217877*^9, 3.598707005462142*^9, 3.606808981395814*^9, 
   3.606809070419717*^9, 3.606809214282901*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Now consider all 6 possible contractions\
\>", "Subsection",
 CellChangeTimes->{{3.598705328247473*^9, 3.598705337022621*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"perms", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"k1", "\[Rule]", 
       RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
      ",", 
      RowBox[{"k2", "\[Rule]", 
       RowBox[{"#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
      ",", 
      RowBox[{"k3", "\[Rule]", 
       RowBox[{
       "#", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}]}], "}"}],
     "&"}], "/@", 
   RowBox[{"Permutations", "[", 
    RowBox[{"{", 
     RowBox[{"k1", ",", "k2", ",", "k3"}], "}"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.598700753397809*^9, 3.59870081659385*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"k1", "\[Rule]", "k1"}], ",", 
     RowBox[{"k2", "\[Rule]", "k2"}], ",", 
     RowBox[{"k3", "\[Rule]", "k3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"k1", "\[Rule]", "k1"}], ",", 
     RowBox[{"k2", "\[Rule]", "k3"}], ",", 
     RowBox[{"k3", "\[Rule]", "k2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"k1", "\[Rule]", "k2"}], ",", 
     RowBox[{"k2", "\[Rule]", "k1"}], ",", 
     RowBox[{"k3", "\[Rule]", "k3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"k1", "\[Rule]", "k2"}], ",", 
     RowBox[{"k2", "\[Rule]", "k3"}], ",", 
     RowBox[{"k3", "\[Rule]", "k1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"k1", "\[Rule]", "k3"}], ",", 
     RowBox[{"k2", "\[Rule]", "k1"}], ",", 
     RowBox[{"k3", "\[Rule]", "k2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"k1", "\[Rule]", "k3"}], ",", 
     RowBox[{"k2", "\[Rule]", "k2"}], ",", 
     RowBox[{"k3", "\[Rule]", "k1"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.5987007624873943`*^9, 3.5987008171221333`*^9, 
  3.598701086425995*^9, 3.598702397255131*^9, 3.598702532318111*^9, 
  3.598702671387826*^9, 3.59870342561574*^9, 3.598705441246484*^9, 
  3.598707005494236*^9, 3.606808981420905*^9, 3.606809070467799*^9, 
  3.606809214324018*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Three point function, after permutations (defined as: \:27e8\[Zeta]\[Zeta]\
\[Zeta]\:27e9 = (2\[Pi])\.b3 \[Delta]\.b3(\[CapitalSigma]k) threePt)\
\>", "Subsection",
 CellChangeTimes->{{3.598699980474868*^9, 3.598700025976985*^9}, {
  3.598705355970353*^9, 3.598705386222155*^9}, {3.598706909667015*^9, 
  3.598706915230791*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"threePt", "=", 
  RowBox[{"Collect", "[", 
   RowBox[{
    RowBox[{"Total", "[", 
     RowBox[{"threePtSingleContract", "/.", "perms"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Lambda]", ",", "\[CapitalSigma]"}], "}"}], ",", "Simplify"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.598700742238649*^9, 3.598700746828684*^9}, {
  3.598700822057452*^9, 3.598700871800157*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"3", " ", 
     SuperscriptBox["H", "2"], " ", "\[Lambda]"}], 
    RowBox[{"4", " ", "k1", " ", "k2", " ", "k3", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"k1", "+", "k2", "+", "k3"}], ")"}], "3"], " ", 
     SuperscriptBox["\[Epsilon]", "3"]}]]}], "-", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"32", " ", 
     SuperscriptBox["cs", "2"], " ", 
     SuperscriptBox["k1", "3"], " ", 
     SuperscriptBox["k2", "3"], " ", 
     SuperscriptBox["k3", "3"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"k1", "+", "k2", "+", "k3"}], ")"}], "3"], " ", 
     SuperscriptBox["\[Epsilon]", "3"]}]], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SuperscriptBox["cs", "2"]}], ")"}], " ", 
    SuperscriptBox["H", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["k1", "6"], "+", 
      RowBox[{"3", " ", 
       SuperscriptBox["k1", "5"], " ", 
       RowBox[{"(", 
        RowBox[{"k2", "+", "k3"}], ")"}]}], "-", 
      RowBox[{
       SuperscriptBox["k1", "4"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["k2", "2"], "-", 
         RowBox[{"6", " ", "k2", " ", "k3"}], "+", 
         SuperscriptBox["k3", "2"]}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["k2", "2"], "-", 
          SuperscriptBox["k3", "2"]}], ")"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["k2", "2"], "+", 
         RowBox[{"3", " ", "k2", " ", "k3"}], "+", 
         SuperscriptBox["k3", "2"]}], ")"}]}], "+", 
      RowBox[{"3", " ", "k1", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"k2", "-", "k3"}], ")"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["k2", "3"], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["k2", "2"], " ", "k3"}], "+", 
         RowBox[{"4", " ", "k2", " ", 
          SuperscriptBox["k3", "2"]}], "+", 
         SuperscriptBox["k3", "3"]}], ")"}]}], "-", 
      RowBox[{"3", " ", 
       SuperscriptBox["k1", "3"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox["k2", "3"]}], "+", 
         RowBox[{"3", " ", 
          SuperscriptBox["k2", "2"], " ", "k3"}], "+", 
         RowBox[{"3", " ", "k2", " ", 
          SuperscriptBox["k3", "2"]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["k3", "3"]}]}], ")"}]}], "-", 
      RowBox[{
       SuperscriptBox["k1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["k2", "4"], "+", 
         RowBox[{"9", " ", 
          SuperscriptBox["k2", "3"], " ", "k3"}], "+", 
         RowBox[{"12", " ", 
          SuperscriptBox["k2", "2"], " ", 
          SuperscriptBox["k3", "2"]}], "+", 
         RowBox[{"9", " ", "k2", " ", 
          SuperscriptBox["k3", "3"]}], "+", 
         SuperscriptBox["k3", "4"]}], ")"}]}]}], ")"}], " ", 
    "\[CapitalSigma]"}]}]}]], "Output",
 CellChangeTimes->{{3.5987008258599443`*^9, 3.5987008720696297`*^9}, 
   3.598701087368677*^9, 3.5987023987759666`*^9, 3.598702533374817*^9, 
   3.598702672473599*^9, 3.598703425676627*^9, 3.5987054413062897`*^9, 
   3.598707005563945*^9, 3.606808981481769*^9, 3.606809070537919*^9, 
   3.6068092144029512`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The shape function", "Subsection",
 CellChangeTimes->{{3.598705528818201*^9, 3.598705531521571*^9}}],

Cell["\<\
convention is same as Eq. (232) of http://arxiv.org/pdf/1303.1523.pdf\
\>", "Text",
 CellChangeTimes->{{3.598701161634296*^9, 3.598701169874806*^9}, {
  3.59870553643025*^9, 3.5987055430836067`*^9}}],

Cell[TextData[{
 "Note that the power spectrum squared is ",
 Cell[BoxData[
  FractionBox[
   RowBox[{"4", " ", 
    SuperscriptBox["cs", "2"], 
    SuperscriptBox["\[Epsilon]", "2"]}], 
   SuperscriptBox["H", "4"]]], "Input",
  CellChangeTimes->{{3.5987000997246923`*^9, 3.5987001468802433`*^9}, {
   3.598700280726364*^9, 3.5987003219869337`*^9}}],
 "=",
 Cell[BoxData[
  FractionBox[
   RowBox[{"4", " ", 
    SuperscriptBox["\[Epsilon]", "3"]}], 
   RowBox[{
    SuperscriptBox["H", "2"], "\[CapitalSigma]"}]]], "Input",
  CellChangeTimes->{{3.5987000997246923`*^9, 3.5987001468802433`*^9}, {
   3.598700280726364*^9, 3.5987003219869337`*^9}}]
}], "Text",
 CellChangeTimes->{{3.598700365849156*^9, 3.598700397860107*^9}, {
  3.598702400731317*^9, 3.598702401922719*^9}, {3.598706929930575*^9, 
  3.598706932336986*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"F", "=", 
  RowBox[{"Collect", "[", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"4", " ", 
       SuperscriptBox["\[Epsilon]", "3"]}], 
      RowBox[{
       SuperscriptBox["H", "2"], "\[CapitalSigma]"}]], "threePt", " ", 
     SuperscriptBox["k1", "2"], 
     SuperscriptBox["k2", "2"], 
     SuperscriptBox["k3", "2"]}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Lambda]", ",", "\[CapitalSigma]"}], "}"}], ",", "Simplify"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.5987000997246923`*^9, 3.5987001468802433`*^9}, {
   3.598700280726364*^9, 3.5987003219869337`*^9}, 3.598700404307458*^9, {
   3.598700434866124*^9, 3.598700440109169*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"8", " ", 
      SuperscriptBox["cs", "2"], " ", "k1", " ", "k2", " ", "k3", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"k1", "+", "k2", "+", "k3"}], ")"}], "3"]}]], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["cs", "2"]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["k1", "6"], "+", 
       RowBox[{"3", " ", 
        SuperscriptBox["k1", "5"], " ", 
        RowBox[{"(", 
         RowBox[{"k2", "+", "k3"}], ")"}]}], "-", 
       RowBox[{
        SuperscriptBox["k1", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["k2", "2"], "-", 
          RowBox[{"6", " ", "k2", " ", "k3"}], "+", 
          SuperscriptBox["k3", "2"]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["k2", "2"], "-", 
           SuperscriptBox["k3", "2"]}], ")"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["k2", "2"], "+", 
          RowBox[{"3", " ", "k2", " ", "k3"}], "+", 
          SuperscriptBox["k3", "2"]}], ")"}]}], "+", 
       RowBox[{"3", " ", "k1", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"k2", "-", "k3"}], ")"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["k2", "3"], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["k2", "2"], " ", "k3"}], "+", 
          RowBox[{"4", " ", "k2", " ", 
           SuperscriptBox["k3", "2"]}], "+", 
          SuperscriptBox["k3", "3"]}], ")"}]}], "-", 
       RowBox[{"3", " ", 
        SuperscriptBox["k1", "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           SuperscriptBox["k2", "3"]}], "+", 
          RowBox[{"3", " ", 
           SuperscriptBox["k2", "2"], " ", "k3"}], "+", 
          RowBox[{"3", " ", "k2", " ", 
           SuperscriptBox["k3", "2"]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["k3", "3"]}]}], ")"}]}], "-", 
       RowBox[{
        SuperscriptBox["k1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["k2", "4"], "+", 
          RowBox[{"9", " ", 
           SuperscriptBox["k2", "3"], " ", "k3"}], "+", 
          RowBox[{"12", " ", 
           SuperscriptBox["k2", "2"], " ", 
           SuperscriptBox["k3", "2"]}], "+", 
          RowBox[{"9", " ", "k2", " ", 
           SuperscriptBox["k3", "3"]}], "+", 
          SuperscriptBox["k3", "4"]}], ")"}]}]}], ")"}]}]}]}], "-", 
  FractionBox[
   RowBox[{"3", " ", "k1", " ", "k2", " ", "k3", " ", "\[Lambda]"}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"k1", "+", "k2", "+", "k3"}], ")"}], "3"], " ", 
    "\[CapitalSigma]"}]]}]], "Output",
 CellChangeTimes->{{3.598700133826373*^9, 3.598700147217621*^9}, 
   3.598700298007022*^9, 3.598700405071905*^9, 3.598700440436187*^9, 
   3.598700876235732*^9, 3.598701089901888*^9, 3.598702417580414*^9, 
   3.5987025355095377`*^9, 3.598702674986974*^9, 3.598703425713752*^9, 
   3.598705441426449*^9, 3.598707005595752*^9, 3.606808981506341*^9, 
   3.6068090705738697`*^9, 3.606809214431123*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"F", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"k1", "|", "k2", "|", "k3"}], "\[Rule]", "k"}], "}"}]}]], "Input",\

 CellChangeTimes->{{3.6068092372755404`*^9, 3.60680924773905*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"17", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SuperscriptBox["cs", "2"]}], ")"}]}], 
   RowBox[{"72", " ", 
    SuperscriptBox["cs", "2"]}]], "-", 
  FractionBox["\[Lambda]", 
   RowBox[{"9", " ", "\[CapitalSigma]"}]]}]], "Output",
 CellChangeTimes->{3.606809248217628*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot of the shapes", "Section",
 CellChangeTimes->{{3.598705733688848*^9, 3.5987057371127357`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"triangleMask", "[", "f_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"k2", "+", "k3"}], ">", "1"}], ",", "f", ",", "0"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.598705741758623*^9, 3.598705815793345*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"triangleMask", "[", 
     RowBox[{"-", "F"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"k1", "\[Rule]", "1"}], ",", 
      RowBox[{"\[Lambda]", "\[Rule]", "0"}], ",", 
      RowBox[{"cs", "\[Rule]", "0.1"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"k2", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k3", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.598705644178388*^9, 3.59870572534142*^9}, {
  3.59870579001291*^9, 3.598705801011566*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJyNnXd8ztcb9yNiU0qIESQkggzZtty0JUEVRWsUtVfsVUVbba0qmlpVe5ca
LQ3air1rb1GzNhFVqqXN8/u11/v6/p7rft2v5+kfzet+38e5z/mcPa7rBHbq
17yrt5eXV2geL6/s//m78M1VG8eHDarDXy/5r1dEnS+Ck75NsPzrW+eygpJ2
uPGg731jNiYfdOOHd4esD0o67sYnRuz+KTn9tBuvP7PTjdTkdDee7Z//X3bj
HTYcnhSUdNWNb+kxt0RSyi9uvFTpPsuS02+48XeO1YhJCbrtxs98nGdbavJd
Nx5X42zj9NT7bvyzjGXnsrIeuHE+o6vV2XJ0thydLUdny9HZcnS2HJ0tR2fL
0dlydLYcnS1HZ8vR2XJ0hm89dfdhv+B8LnRGP6uz5Xy2HJ0tR2fL0dlydLYc
nS1HZ8vR2XJ0thydLUdny9EZXu9K28ySnYq50Bkek7lr0MhsJVVndLI6W86/
t5zPlqOz5ehsOTpbjs6Wo7Pl6Gw5OluOzpajM3xP/VUXL6SUcqEzvPGM6wVP
7Q1UneGhsd4/lV9eTnVGD6uz5ehsOfFazmfL0dlydLYcnS1HZ8vR2XJ0thyd
4bf6zt4V2qCsC53h63zX516wN0h1hs8rEt/rfKcQ1RmeZ7p36rK0ENWZfFud
LUdny9HZcn7Pcj5bjs6Wo7Pl6Gw5OluOznC/iR+XO/w4wIXO8CNLb7bwOVFB
dYbHLj26v+R7lVVn+Ja6i7uVdIWpzvDvywUdLtowTHUmf1Zny9HZcnS2HJ0t
Jx2W89lydLYcnS1HZ/jg9/PF7zwW6EJn+LikhHrhVSqqzvCuk/uMzjUtTHXW
ceNy5uHTr1RRneEBKzuNT64ZqTrD31tX/0DLCpGqM/mwOluOzpajs+XobDk6
W076LOez5egMv/Hb/A/61ynnQmf4gAsVous8rag6w+93uNd22uVw1Rl+afHI
VlXnR6rO2m+tqzn064VRqjP8ccT0xxvyRKvO8B4RkbPu/xKlOpNeq7Pl6Gw5
OluOzpajs+XobDnphqMnn/nb5q7vtqAalVRneOS2+9dCP4hQneEFfqpSeV9E
lOoM/zHPp2s7vx+tOsNnn+/qOlM/RnWGR5+Y2PWPyTGqMzy8TNzkGZ1iVGfS
ZXW2HJ0tR2fL0dly7dcMR2f4MGnv6AynfpIfeJToyWf+vvVCieMj3opSneHr
u13+ZvLdaNUZ7r961LGUZzGqMzzPrtRJH30RqzrDV/3ePOCtw7Gqs8aT6RpZ
ZGGs6szvW50tR2fL0dlydLYcneH+Mh6hM5z+E53hd6W9ozOc+kk+4ejJZ/6+
nXfjovbxsaozfEOPJvNLl4xTneE9Fpe5undenOoMf2nSuDGjDsSpzvBJ88cu
Kb0oTnXmd6zOlqOz5ehsOTrDmS+hM5zxHZ3hjEfoDKf/RGetj9Le0RlO/ST/
8G9FTz7z99Szu+k/XHV0hr+Rq2eLSW3iVWedp3QZt3fxx/GqM3yz/6nkDt3j
VWfiszpbjs6WozOc+Tw6w5l/ojOc+RI6w9fI+I7O8EMyHqEznP4TneG0d3SG
Uz/RBY6efNb4nwWv8D7q6AyP3Blx70K2qqozPDRjmN+AXx2d+XdWZ8vRGc56
E511viPrI3SGL5L5PDrDd8n8E53hzJfQGc74js5wxiN0hq+W/hOd4bR3dNZ5
sdRP9IKjJ5/5GxiQMitnXUdneOPt68+efrmq6sz3Vmc4+yHoDGf9js5w1pvo
DGd9hM7wzTKfR2c48090hjNfQmd4hIzv6AxnPEJnOP0nOmt6pL2js+ZL6ic6
wtGTz/y9lvWf/zpUdXWelvB5cnpGwvXNOX+qkLRIdc55uX/OpJR7CVeyhv+0
MfkH5YSHx/b/o0/L/YVdK0IXvROUdCehR7NhJfqm73GLB37p90qfrKpawtVw
2Il7WVk3E/q/2LqCl9dRDU888AY5a/mcTyntIh54xq7J9fckl3fd2+HTMT31
ekLYiCcJSSknNR7ihxcYWmp9dLsA1+QX4k+kJl9LuHX189YpQec0PPHAr0Zn
RPw1INAV2aZ7/ZSgKwlLGkUNSk/9WcMTD/xTn5O+e4uWc/GZf0d4PvPXN/7d
xKeNyrn4PeIjPPHAiZ/8kF7CEw+c9KMXehCeeOCFRB/KiXIgPPHAW0i5UA8o
H8ITDzxTyp144I+kHKl/1C/iIX449Y3P/P2m26WU/W9W1XhsfaY/8VTPLacd
eQpv92lJh6d9cuL58sqdzwdufKbpJp5zMccLnCmfS9uRbXe0d8sJb/c5Safu
35xeNWtajhe13dl2Sj9jOeE97fsRPl/I9ujvyhXR9BP+5/49Pu7+3FfLi/Ah
Leetb9CvrLZrwl8ZWT10XHSAtmvbP9BPWk54T/tphJ998WKembOLqQ6EH/Hm
mNlx2Yprv0r48AftM9qPCNR80W76LMres9CNYM0X4ev8tiJvu6Rg7Wdsv0T/
bznhPe1fEf6to8Uy+kWXUH0If3HVjfJTqpTU8ULT2Sf/8EEDymt+6Sd2Lvd5
vmFaiOpP+GLNcuUPLV5J8wW/m8vn7z3VK2t/aPtPxjvLCe9pH4nwd1Y+/6P9
HyVVN8L3n7zkg45TS+n4SPjwdyN/vHUgSHWgvwx/cuxCiaUVtbwIn/9e5vYu
S0M1v/A1dUuumng7XPML334zIn+5aRHan9v+n3Hfcj572ufh+zz3d/zyy2+l
VE/CH7g782mpEH+dJxD+xFmvvc3nO/WKfzfzQN69GytV0vIl/JP+K1q/0Cxc
dYB3/it1xukqkaoDfNPYjQs7ZotSHeANWmQGT6gSpeOUHdcoJ8sJ72l/hvDk
l98jPProvoyEb16jdtcbT4NVN/RIER2oD3yf+Pm1Nu1eiVB94AOHXgue+yhS
9YF3f2ngnk4B0aoPvK+fX/r330erPvBtxwtmXjwSreOyHcdpn5YT3tN+C+Gp
/+hJ+AfSXtCT8Ad6Nh4bmB6seqJHJWkXpBv+sujDZ+K5tGRAt/RmUaobPDMg
vN/qndGqG/xg3pUFfb+JUd3gI3NVCRxdIVZ1g/9x/osbzcJjdT5g5zP0y5YT
3tO+CuHPSX+IzoSn/0Rn1aFxYKGbLwerzuR7j/ST6Al/IO0LPeHUK/JJ/OgJ
Jzx6Eo6/f1xoWH/302jVH743eFH3H0NiNTzfwykXnc/WGBxb+06slgu8y4oj
w/Ynxmm5wHOtr17kYVKczgPtvJFx2nLCe9qfITzjLOVIeMZlypHwWw56lzlf
JUjLkfwx/lJecPp5ygtOv0d5wWnvlAuc+owuOp6InqSPvwuCx597VilO9YeH
TDsz7uixOA3P95WEUy58n+bqludyULyWCzz6Scjm5SHxOt+283PmeZYT3tM+
D+GZp1GOhGdeRzkS/kaRyQvCJpXTciQ88yXKi/wxr6C84Ktk/KW84IxHlBec
fpjygtPPUF5w6jk6wtGZ/PB374+v5mrdJ17LBT6nV4WAkVuc8Hw/Vzjlxfen
gmt2rrfPiYe/p2Z7V/vT11mn2HUT6wHLCe9pf4nw02WeT/nCL8q8mvIlvczD
KUc481jKEc48kHKEbzPzJTjzB8oRvlXGTcoRzrhAOcLplyhHeJS0C+of+Q3+
pWahWg+d8iI85cJnwg95bU3CgPCqWl58P1g46zi+Hz//w2yLyjn7J7pebHDs
P42/qoty5Pvssf+u7yhH4mM9yLrRrn+JV/dpJH7SQTykh8+EX+PvfbFWayed
fA8nPZ7ufVFfpu93Rfxcv7TqSX9AP0B46tFr3dIfdVwbpOWl50vSn1Ne1K8y
OZdXLb87ROOB1yhaMOTNm868jnG7rozXuu8v9fF4YszFvucrafy6n3O3i+v9
v8I0fnjzgCKP3+4XofVQ5+Eyj2LeQL1edXj59+OjQ/V34RG7nv4yKXcV/V34
hId/b3phTaT+LvxqypC6d0OddsE8t6nMb5nn8f2XCX9mfnEnVNMDf/RX/HDv
wEhND3zU2zWnJM6N0vTAC7+bVPnR6GhND/yPj1IH1D0Vre2X3z8i6w7CwWeZ
9KDfl7cmP3T5O+d38F+7b4h9saFzfgd/veb6WeX/dM5J4d8/rhFcs2qs9jP8
Dus+0gmnXEgnHH2IFz5H0slnHedXN243YJ4z7vM9nHzxfdNN1Xs8nh6r+dL1
aJ6UQVOCnfMyeI8cByaubRGn/SrxDZZ1OvmFH5P6TH7h1DfyC39Pyp38wn8T
/UkHnPTzmfb6Seqqi0fHO/0t38PJL99/XTiw1+Iczv4zPEfE3xcLRMZrfvl3
tHfyC78u7ZT8wmlH5BfuK/WZ/MKpV+QXvlTKhfTpPUFJP5/p5+qNa7ns2lxn
HOF7OPnl+9Ah98q9d9AZ9wnPeER/yr/7VPpV+k04/Se6wekP0Q1OP4ZucNvP
wGnv6Aan3aGbjgNSb9ENTvmSfzg68Bk9UuvNHvx7RWf84nv4iLqDUlOTHyS0
+6Ru1qbkVQlH2hUp/+or2V3bzp6ak5x+J2FPjvrLUoL2JyxIfb61jZ+vq1NQ
rkJJKbcS5vfe1icl6FhCZtMin65p4efy6V/tw6CkGwltT741Nj31VMLBsYOy
Dd5YwrXsh55PsrKuJfjVfjY/KOl8ws+ry06KaVTKlZjry57pqVcSTiydtTk5
/WLChwtvVEr09Xfxme/h/HviOybx8Hv8Pr9L+kgv6SQ/5I98kX/0uCc68Jm/
5XM09K3X3tHt/NGZUZWSUnT+0Phmvv5BSRmqJzwjuva1rKy7CU1i8w3y8tqm
nHTknbtiUlLKLuVTR/dtlZ56W/W38RC+cdNOud4sXVjLZUzfa1vTUw9p+OgD
8/enJt/U8rLxE37NlLgTC48X1XL8q+yUP1KTT2j4k0WP1UoJuq7la+MnfOKS
Uw+7LSiu5b55fFgRL6+zGn7o297rktOvan2w8RN+/qdRk8/MLqn1ZMjD/WFJ
KRc0fPHVMeWTUi5r/bHxE/50RsC6jH2ltF7x7whPOH7Hxs/fNZlLWncKd+oh
v0N40k2+bfyEvyDpQUfyTXh0pBxs/IRfJvpQrpQD4SlX6oWNn/CUF/WMekF4
6hn11MZP+HlSf6jf1FMbD5x6Szuh3RCedkU7gxOOv5Nrrd8c+ZrTHuEhUd3P
Hnq9qovPfA/ns52HM28nXTPnvzfQ9+Zfmm7Wf5d3Bbd9uCev9pOMMx0j83wQ
NuMFF7qwLjx+cO62dn8V0n4bvTudzP/tD5ULaftlXDqcsPW1RiMLuygn5v+f
XE/tfXlfER0XKP+TL9wffbpiEW2/jGMt0j97acU1Xxf1Rvd7/q417fFPRXXc
oT4Wmjt89Ij2RbX9Mu7dDL/U89lHxVzUY9YFR/4udfVcPj8d12gf6TMW+E0+
XEzbL+Ok7/wiV5e87eeiXTH/7x3yfH33sX46btJeG899fLXCCD9tv7ovLZz2
xXz+yJPSmZdr+em4zO/zu6SP9J6UdNK+9L5Ap3jfslWK6biPHuiAXuiHbrQv
5rHp3U9fGtbOV+cVOk5KuVB+lCflSPtSu5YDmT1Dd76o8xbqy2mpJ9Qn6hf1
inan92pC3olP/DG/zouov9Rb6j/tplf4uN4N/9NeaA98X17aBe2Ude6lvGkb
2nvd03+v564SD+F0/DywrkTT/xlPCX/7WdlKO9s47VfvFabtyNjW1Flf8+8I
T3rsuMy/h5POMp8uqZQSdF/H04sZbb+qeslP56XwrAr/6oZelM9bvU8vKzjX
X+fz8DZSXpQT9eKN/i+nXs8eoOsg+CmpJ9QP6mN6v7B271cN1PUpnPpJvaQd
vLS7xDdxvwfqOQ6cdkF7oP1dDc6cOyOxnJ5rwGmPtDvafaeDNz8fE15O9/Ph
9AO0L/qbkOOtQt5eGqj7zPCm0v/QjujnFnwXl23n1wG6/wkfLf0e7YX+9ecl
nWueGFJG99/g9Le0C/rv9zc2z1l0YEm9vwS3/Tn1YkbZkPdKXot38VnHgSt5
MmIKVVXO33fmeq08FO5w6u94r851y9Vy6jnft6szbWbPmg5nfr45Nf+kdknO
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
e+/k13LyBf9J/BKQL/imHRdrXPSN0XzBV2dtKHwyKVbzBS8aGTfl55cc/e39
bXSGN+q0uFehc2VcpAf+m9jvkx744q3Te3zS0UkPfP2TPeV+GuOkR/fnum/O
XX6gkx72B8bUymjgfSKXrsfhRT9ZcNX7aTEX6YQveTX+uy3jA1z0G/AvunjX
vR4d7KK/hVeuXLBD5sBKLsYveOLAtIQfGoa7mA/Aa17Ovqti+0jVAd5d7OvR
AR77/uB+V6IdHeALnm1xDW7m6ADfPqrPqc1147TdwctdDJ+Q5hOv9RD+UujA
AmO/dOoVf229amPuWaHbl+WWXO+Xvsytv71g7IvRrcai411+SP7Sbdz/3pwT
oduQvzc/D08a41af23tY13ub9KPbyyb96PahST+67TLpR7e8Jv3oNVr2vaxu
9h4autXa0KD1hdQtbrr9bOyg0W1Uo5UJnwdtdtOtjDkHRLe0q/krNEzZ4Kbb
Mg/r5eEm/eiWaNKPbpEm/eh2zKQffR53WH0vKOmAmz723h368Nfq083YcaNP
/O8FT6Sn7nbTJ6e574c+p2U/0upTxsN6OdOkH322mfSjz1STfnTYWPy3Kemp
x9x0sPcGyf+4tElJSSlH3XToZ+zE0WHNvoY5+6YfdtNhtLmviA5NfEe+k5Ty
k5sOBz2sizeY9KPDHJN+dPjIpB8dBn3w2VdBSe7rXHvvER1eCqncOSXolJsO
ocbeHB34a3V4Zu5bosO1gW1PJ6e77w+M87DO7W/Sjw5vmvST3yp3InYmp593
y6+9n0l+s6bsHZmees4tvzeNHTr5PBLXMT4p5axbfjeae6Hkd3760wepyWfc
8vuSh/VpmEk/5ftc0vnB8B0xSYHldRy52/ynC6nJl9zya++Rkt8fnnaZEZR0
0S2/i40dOvn9ZN5fr6UE/eyW30Hm/ir54q/N1y1J5/5FSY0aBgXoOHuU+zj9
Ry32Hhes4+wmSef0qbNGPn1USfN7QuKz+W1g7rtqfiOznU1NvuKWX2tvTn6X
fHhoQ3K6+7q4vayb0s36TtfHoyMWfTE6RPNVX9LT7pWRpwacCtV8fS/pGTqt
XuuejapovqJSso8PSnJffy0192/JV4nrR7qkp15zy5e1Eyf9P8q6podZf0XK
7+7y/u5Ck1Bn/cXfiB7Tv+sY7qy/isvvNm/5avXETVGa/in1j/smpbivj7Kb
e7+kf5jEZ9NZUtYdv5j10WSJv38jr1XbVznrI2+Jf2+OSvm/K+Osj/jb7FbX
uaGJzjr3/p8LFian33JL59vmXjHpPP1q8uigpFtu6Rwu64ULZv1yT+K/vaRc
gejSzvqlo8Tv071lwIIOzvrlpMT/fvyn37Xo4qw3G63tF5ES5L7u2GruLZOe
07JeOGjWHQ0lnp9+uxVY4y8nPWkST8/ukU0aBzvz22jvWvmSUu4k5Dp18VIH
P2ee/1XnOj+kJruvOzhnLPpK88hVh0rpfDvWw7pjhcTj+uX+jtutnfm2v5wj
T8vatiB5hJOeqRJ/24WjRsT3dNKTs3iBxPTUBwmtvnhvYvu4XLq+yOh1Ligl
6EHCH/fanv5wUICmZ6qH+b+PxNP84Kplt2o76Rku54YTuyZ/E93dSc99ib9i
xqSqzzs46+UKZv7MerOwmTcyv4008yj4fDOfYb7Xx8xD4IMNJ56vZH5y6cCm
u1u+LaHrkUkyT5h+6sj8Vj5ldF08XOYt/rG/tpn9ZYDyJTLfOH5vQcj6kkFO
P2DGfdJTUeYJWUP+9QcFjxT+gviJ0n0ea09Bu5BxtkOzT3entXD2G98x90IZ
Zyed/uKzoCT3fU5r10A/3/Fer8Opydfd+DumX6Jftf4KPHHi2bKgetv01JsJ
lRNzhnX72l/Xs2ekvcc9WhubPzJA662/lI+Nn/tOr4q/LMtfF048I/KcGRyU
dC9h4xtpiZdPltDw6kdL/GVZ/qtw2tcuD/X5E7N+hH9k1n20C+v/ivD2/JTw
8IL/+LO6mUC9HWDWZfBmZn1E/NbPFeE9nT92NOsdeH/Dicf6uSK8Pb+7Z+5P
5pX7acSj/jDKZC9/9Xlh7U+Oybqp4uiwwG5LiyvPkvVRp2cddux7KVDbKfHU
CJgy+/Gz0s48yqxT4Nb/lebXA+ccrbf43+B3CZ/n/NDZhQeX03wVkvq+KFer
vQNaBilPlPVFg8XPO78aWEHzlSTro+3JMw7Hryin/EdZBx082Pz4iAsVtB/w
Cvi/1xdw6xeL34XfPLk77Haic77zi8zzN4mfFvg94buEk9+nsq45H/3WxOsP
KijvKOuRis/u3ll0sJKm/7Ksd1ZNrTRlevGKyofLuubVQe9O+jgtVMejJWa9
oPNnsx6hHOGZu+oUrpZYTtMPT5P063gq83mfRuGp88ZV1HL5SfrbQbPXLPup
v3PO5TP133XHkpMFBxS4Eqr53cC9kkFDvm8eG6bcX9ZZkZ/l2LJuZoTmd47k
q3pozqb+p8KUx8p6J2jz/CNhf1fR/py/5JdxPMnDOeB9sw4ivPWvRXhP51yE
967f+9rLq0o482Hs9/veuT/pfHnlJeXe7kcnZj3/s1Al1X+BhL8vfn7gK4T/
Lhydx0u5LJu/evvOPs652DZZB2XvvmLPmkaRTruTcfCjZzN9KjR3+FlZT+36
8o9PxjZzzsvelHyv8N3Tb/DwSOWZolujp6uyVT4Rpfur1q4Qbu0K0dOupwjv
6byM8Gniv0vXI8LrbM5/cWWBYGdePbFHmaSUqwkVOx//IE98Ja3Py2S9NnBP
cNvKYRGqcwR+t8SfEjza+O9C50USz5j0wXf8tjnna2myXvvrt01enas552vF
RB//Ll+tiIlweEPRJ8c7aQX2eznnbhNlfnLjTMzghJrRyk9L/vyKhO2L/s+6
gHmCd7U5dVOCnHUcvKRZ96GzXffpPMScx1FehO9QLOPAe/tL6zwZvlv8VxA+
MaHqquT0XxIulN5yadbY8ho+zfhvJ/xUWa+t/e1ajxWNnfVmQ4nnceyqbNUG
Rmg5+kh+V0W8PbNYUpSW1yRJz33xcwWfavyJUV5eEs/HBxb9frOLcw7oL7p1
fFRm2/qdMVpeg2V+mGfAgXUrUx2+Qtr3zuu/tsrW0TkfvCX1sNz0wx9PSXXK
N1bW0e+v+6VZyWWxOr+y/sc8ccrLU3h7nrjR3M/fJPfziYfwxeY8uTFobzEt
F8J/P/TVnY/8K2h75z7/3eKvTKn7SpBy7qMeqDB0xYWYEI1n2aMc1VKCbia0
/bzE+KXDKml98JffvSPrd8JnyLo417iacUk7w5z1oMSzLNW/519lo7RfPS12
CvNav+K/6g2Hx0o6j+0cW2jeGWe930nm8z0SIhcOe+zUkzuS393i3wyeYfyh
Ec82mbffb9/9SZdQ5zyxvcQ/aGbqlylrHD5C/l3bPZVfi3vinC8fl/THxb/k
HfLQ4Tllv+Jm8O9f7xvkrB/rS7v4YFn+0vXuO/UtRdrR46IburVZGafz/DRJ
J/UB/v+7ToFz7jlD/KdR7upPbHP2Txtcdc7jWKeslHkdPFb2DZ6PftB08Lxg
jQf7jtuJfT6JreWc33EfeP6+y7sTCodqPfFZcXJXavLthHduh93JHBuu9WqE
OS8mfGPZ34gJmdqt8aQqWq9ySjwhb9Yf0rmHs++RIul5lP55/9dPO/swZSRf
baQcqSf8nSf+2fjc2Phtoz78KOWSlPTdoWuLHX5W1n1F1lxol++0E88yWcdV
FH9u8JXGzxv1J1Lqf+GBOx6fuOLwLtJO8y25GZGa4JxrL5H2lbasSqF9V5z6
lint8fH4BzuD+sY757bGXh5u/cJR7vB9dW4MnVkwWPs9tc8Vf26EZ336Z93o
Rrl9KipnH2lTts+vnV5ZUesJ9777yDxTz+Nkvyh1+8Xxx32dfqZTu8XN0lPv
JlzoXajPi4+raP05a87lCb9S9qNeubKxyZ0+zj5eF4nncKXCIUfLO/tCmZKe
HTIuUH9GSr6CuncunNTeKUcfWV9vEX9x8NyGU0/4O6HxkB8fJjk8XtpX7ynT
zl/v7txnmCzl9cemBjV8Jjl8h7SvUjEVumzd48QzXNJ58MWq4duWOHya6F/8
q7/zjF3r1B9vaUcXWgzu22iGc37dWfShPui+nPE7R78Ef7va89o+2Ut53H8g
/NktS7MlpWQkvL+7Rci6ms49gU5y/7+W+JeDdxFeW7jut0g8ZyYWOpfvo0rK
H8g+XtSq7Pf+nu30S42wW/LtWb1Mr3Dl78p+YI2PK90v1c+pb1tFp69kXk19
izf7n4TPJfuN/UtELVzUw6lvOyQeX5kHUt+aSHqa9xz64ZlRTn07J/lqWalA
Fd9eTn17G/+y4tcO3tVwHY+MPQj14ZTEPyauyY+zNzr15KHo9uniK0vzrPuf
+iDxH8g2YfG6fNm1/sCX1wgL3d2kqv4u9yLO7Rk1aULeqhqPp/vz7J8MCZt1
5PejpTU97EvsuvBXZs7jgfq77Evs3z9586VTQaoD91o3ih850sP+wMzQM4HL
+zrrdPiNZj9dePSskv4u6+saH2ZLWh7trIvhe2ZsHfLxoHBn3ojf6cLn//xs
uDPvZV2Z1KfBtCGJzvoR/qtZJ8KntFrx6a8+zroPHlCr7eqNZ5z1HbzmS9O+
Px7mzKNYZxX92PtCxYmVNT3wPuH13x+7y1lPwQeYdRP87sQl1eZkOfc24QlJ
67zPzHHWO/DeZxsfu3XCaResUyacTiwZsrucpof1yKHH1fYP/shZF8AfmPk/
3HfRvTdfn+nM5+HdAx9eaFrImV/B865NObUtNlbbu75/6922X9vL5TSd8EO9
Wgf4ZFbUdDKvDmp2sFFkOec+HnyPzDNJJ7zu7K51Q08580O4z7l1Q8KqOuM1
/Gjm9XtZzeK0H2P+Fj1/TuHno8pp+uGvDvv0i82tnHWZvh/0ZcGzFaOcesV8
b+ucSXOnbnX6E30/SPy26TpXvv/uq52b6xZ1xgt9D2LB+Ja/hcc7/bCMv9vy
3Om9I0eIplPfS9xX8uNX05x5IPyVwA3DehysoumBrxJ/a7pek3nIg6e1r61d
7fRXhG/Q/fyxAp866SR8q0CvR2sPOPEQ/tKDyHbzL8fr+ML9tybiV418wY+f
PLuxWn1nHIHniUoPT3vDGS/UP1uX5U8mDXP2JeA+4g+N9MO9o4o0zv29k376
7RuvdLhZtHJVrYcu2V/1+8dvWB7nPFT2G1uVWJ3ywSNnX6uI7NeNEv9jeu9U
+EXhjFNpsh9Vf2+LcTN8/HW8Y18Ff+yM46wLJv/jl8xHOfP2Uxnt/8g117HL
4/xu+L6BxVNic2h+A8x9M91HNffKKMdW5j6V3s83HJ3vy756w3/8GPtoffCW
e00FxL+TnusJbyqccjwg41EF2Scn/rayv53o9drXH3UvquVy1dyHIZ7jEs9I
iYdy+c6cl1EuHc1+qdqJyL7i0Hv/9YefT8vL+59Q7vcc2Dd7X8qRenvK3LuA
2/sV1P/l5t4C3N5nIJ7bsq/S6R9/Yvn0d7PLfs6ytKuzln9dStsd9w1K/eOP
PY+2uxOy7h4m/sTgp4QvFU675hx/rKx/iX+5rJua13jSr/ft4lpvWZ/adTTr
0y8kHurzNqmndp7M/PZfv76/J1Cf+fvGmnJflUqsqvX/vISvXq9e802NHZ5b
5pPV3/n0zeb/w+9JOxpba86VnK858y7Ov8aIfxjqJ/cDH574r58lL63P3Jf7
TPw4UW+ZF+04/1+/Tz7KuVd28cUnCb9P9NN6y/xnlvibgnMv6xD+D6Xc2Tfu
+Y+fn1xajvqOuvgLorywpw5K/zc9ul6QdfEe8StFOeo7RCf/zS+cfYluy13v
V/vmRdWT+aqP64drBxs6euIfIkH6AXSYJ+cdq3eXzWjwWhnN7wDZt4+V82va
KX47Wkp+9d6L7Bt3KbBvyocvOfeO2K8utG7GB2kBQdqu2bcPF39H8I7mPVM4
+6vbzH4v5+YHh5ZJ6tKrhOqP/5B50o7QjXV3vQcT/LseKKa6YVeee2TQ5paN
nPrJ+WzCodDpfV0FlW+Q+7Q9m/7XH86f2h5myfnvh2/7/N1uSz4NT32ecOG3
ChfKOH481O/X/Atf1ihYTMvrsNTzd8W/DTxNeHvhtAv8jux/93TZ2wv8lH8r
55JlH5Ut+8m1AOWsOzI31e1Y9kEpbUf4QWkv/k/gY2U98o2sR+C0r1xyX4J6
hV+WmWGbEvs3cO5RUH9qmXsRMbIvfWFRyqCRvzic+2Pd89972HVrWS3fHMYP
DJx7XCeF0+7YN37e949J46+UVM49q059K878+nsnPPPDl1/dOGrO3DLaTtkn
/Fb8wMC511RZ9pHs/Yem5v4D+0VJT0ovKDDAOacOMH5a9LzSA+dvsvhv4TP7
P/h1oR4yb2z2Vs9cD7M59byjtItqfplnKrzgcPaLnp8O9t8Q6Pyu9W+g9Vz2
qVpO/bPPtDoO537U/IV/n58U7XCdl97/fIXrZYfjDyHzUfXo6U0c3kTmY0EL
fU5c/Z98cR8sYETnjPXnHc7+28GgfMvfq+6kv6Hx0wJvYjj1mfV4uTkn1j+L
8XfuT8o5by/xm0H5ovPTFydsPtu8qKaHct/9jv+tS8WdfI2T+/azZ64M8pnk
hK8s90bqZN/4pOqSFzWdjIPJ0g/Q33Kf9mizJc+eVnPsazgPbSZ+P/R8RPJR
u8WMnn/cDdB2xDh1RtoR6WHc6X5xSYe6t536Zv1jwEca/xh6j8tw7tNYexP2
WSynP7Wc+yWWs/9iOeVqOeVqOefxljMPsJx5gOWszy1nHWs59clydLN2Jehm
ObpZjm6Wo5vl6GY5ulmObpajm+XoZjm6WY5ulqOPtR9BH8vRx3L0sRx9LEcf
y9HHcvSxHH0sRx/L0cdy5oVw7NrQx9qPoI/l6GM5+liOPpajj+XoYzn6WI4+
lqOP5ehjOe1L7UhkHKdfg7Ovgp5w7AHR09qboKfl6Gk5elqOnpajp+XoaTl6
Wo6elqOn5bQ7eJjs76EnnP009IQfk/0o9IRjR4me1m4FPS1HT8vR03L0tFz3
3w1HT8vR03L0tBw91e+RrBPV/hl/7LKvi87wJrJfis7wCbI/ic5q9yb7e+gM
TxK7VHS299ng1l4G/W14uA1PudjwcBue8rLh4TY85WjDw214yteGh9vwlLsN
D7fhqQ82PPUBzr4B9QE+Xs4X1P+bcPbzqQ+67yX75NQH+EuyL019gLOvS32A
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
rv7JZRxnfvKV+OEhnfAXxZ6R9MDxn6/+34WPFX/ypAeOP3bSA/9W/KIz/2Q8
xf/SLTM/2S7zE33Hk/dGxN5ziZmf3JX5CfkifE+xx4w08xPsMaknhMdecrKZ
h2AviT6E5x0B6qG+RyT2jPfMPAR7RvTU+Yz44UdPuK/4sUdP9bsg/uSZJ9OP
3RY/XegJx94W3eDYw6KP2lmKXSo66DiLfajkC449Ju0Uvl3sIkkn/Qb2wqRT
7xGL/S/p1HvoYp9LOuEusZMlnXDsVUknHPtQ0gnHHpP+B45dJPsecOy+Gcfp
3/qJnTXjOBx7anTQ/lnso9XvmHDsndEBjj2y+oESjl0wOsCxz0UHOPaw6q9E
OPan6ADH3hMd9Hzwvb718odW1fMX9rtaiB0i+zb089gzsv6FY88Ybdbd2EVi
P6nvEYkdJXaYaick9lClDD8uHDtP2pHae8r4C28h9p7Yodl9P/bN4Odi/rVH
w87N7ZxL2jv7UdjNjTAcOzjOK9UvkdjrYV8Hx84Ou0G7z7PUA8feD95f7JJO
GY69EvaKdl8Fe0i7fxJhyhG7SOwViaed2C1irwhfLHaLb8tnt/tXst6BY6eJ
XahdX2NfqusLsQ89bjh2o9i1qp232Ldijwp3iV0qdrN2fljfA8c+Fo6dbGHD
sZPFXtfOo7Bv1PsMYueIfaNysXPEvhGOnaO+Qyz1Fjs++gGdp4ndH/uc1Ns0
sRPk3Jn6WVrsCk+aejVD6hXnGpT7PrGbYz+T+oNdHvZalDt2f36mvW+X9k6/
CseOknN26gl2l/TP8P1ip8l5vb5bInadnO+rnw+xA81ryhE7x9PmXjf2We+Y
fgC/UtxPQM+3xC6MeYi+JyD+yrBDQ2fs0bIbjj0adm66ryv2bmPNfTbs7A6b
9oJfU+z60AH7Pu7PaDsSf63YE+r6VOyG0gzvJhw7NLXHFbszfw8cuy/qOfZf
nDPCsf/inoP6eRI7L/VfIO0496s9djQZUVjfySU89pisgwjfSuwosc8kPHaa
2GfCsdPE/gqOHRb2V3DssNhXp52+InZ89rzyZTmvxG4QvkrsB5kPUK/qiL0h
9op6/iJ2ix3NPQTsZCeZ9Rd2stjlqr8osc9lPwpeUOxzB5jzymg5rxxieA3h
2HnSfrH3DDPnj3nl/BH7UvX3I3amzN+ot3+KXSp2rTq/FftW9oeph/b9evi0
LZ0bH/Gr6sLeD459XxMPHHtgtV8Xu2D2LeHYRfqY9o7dHPeF9H612NlxTkR5
vW7eYadcsOPbY9rpUGmn2EPqfoXYRXLu7/il+NcuknEHjh0f50Fw7CVpV6rD
hLo1s60qovfT+J73szqY+sk7g5wXkK8S8j4j7Yj4sYu8I/stdh74puwL2XNb
dLOc9zYsnyPju5038g6T5bxHYvmPMk+znPNNy8/L/pU9n70g/ZvlvG9kOe+g
WM46xXLWKZZXlfer7Dks70tZzrtKlvPOkOW8y2I575dYvkn2A+38ubTcQ7Cc
95ws530jy3nvx3LeiXHjcm/BzsN5T8ty3pGynHeVLOedIct5j8dyH+43mPn5
TWkv8L3yfk2itBd7rtdQ2oPlvHOj533y3g3vxMDbynsx46Qd2fl/rLQjy1Ok
PVjOOzr6fp28p6Pv0AgfJO/R8L4LnHde9kr7sudBJ6R9Wf6C1H97jsA9STc7
OPGbCa8g7yb09nCeOE/ya+NfIe0Ffl7evxgm9ZZ+vrS8c4EfQ7f7MDKvsP0b
fldt/8O8gnp+S/zo4geZ+rZO/CEzbyE8/lGTPNyTVH+7Es9b4nfX3+wD35N9
YNbv6vdL/KmO8LA/jP8Owp8X/5lnPewbx3vYN8Z/vW1H+PmF4+8XP63wCuKv
Ff+b+k64+OHMkn7Gti/8AsPxD4y/Vzh+X1Olntj2gv9ffe9F/AAXxP8277TI
fR78/6qfJzmHxQ+srhfEH+zvkn711y7vCKzHnzPrBblPgh9qPeeS83r8CMNv
iD9h/MOqnyrxE4ufUDj+QnlPgnlCe3lXoqH0q/ourrzLwHsG8DXyrgH+/XU+
L37+W/NOIn7X5L4Hfs/h+D/Hjzb8A/GnjR9kPccRf8jq3xb/SeLnFr+lcPyX
npTftf3/dx7uGfpLv2D3K/CfQjw9xI8K7Yj+oY74w8EfkN4fEL9A+AchfvyE
0O/Yfol4LWf+YTn9qZv9guTXcvJjOe3QcvSynHxaTj9uOe3Ecj0/9qCD7Z/V
ntxwdLBc7X6t/QLvNhquflk9vNdpOfm1nPx6Sr8dX0i/5boPZTjpt5x0Wk46
Pf2und/yu5bzu57C23Gf8J64nTdSD+z4iI6W6zuPhpM+y0mH5aTDctJpOTrD
Z4odKDrDj4q9JPUBjt0f9R/eSuzU9D0g4dfE3god7PiLDpajg+XoYDk6uN27
43xCeMVb1Z8mjwlTPz/wQYV+9Y+LdPxewnevLvvDzHnOuxvwdpNGtvaa7byv
Ab+yL7X3ybAY9Qtk+23yZbm+82i4+uMV/mPJyKm/3nP8zcJ7Fe1bfH4p510J
fcfy7z+Xv3gnRv1T2XkF8cBTG/556kKDWPUjZPs3Ptv+gfCWo4vlxGPbNeHc
7JskfsuJ33Lybzm/a/sBftdy/r3lpMdy0mM56bGc9Nh+hvRYTnosJ17LSafl
pNPyoR7WQfp+sen3SKflpNNy0mm53s82XPsdw5d4OHcj/fDPZX9S7ZbZn++R
p83Gb5z3W93W77xHbDj5spx8WU6+LCcdlqt9jvAcT06+9vGZCtre4VU+Xdl+
WOlQx4+r8Lx/v5rWJSZC+yV4hVHBf84qEKn5tf0k3PY/TTzsGxDe9ieEt3yG
h30A4rHraOKxnPB2fT3Dw7p7qFkHtZZ1EOHRqbbs5y8x65rt5j0FfZ8n6/XP
RrT8n3dPuFew+898oZ3LOn6JPfjPh2dfV+ZEs/ed+PXcsPmpXoP6Of6u3ew7
JB3wXHKPkfbC7/jKPW3i9TSP9TRvtL+LjuqPVtabej9Dwu+T+xjqz9n0J/wu
vEaVkq3qr3XSqe/evzgj+WSbSqqnm52IsXdIlvUp8cCvlFsUk9HRebfFbX/P
w/1/Ptv2ou+ySf6YVxAeHi/7//yuznNl3qXn68IHyjykn4f9JfWDin2f9A/6
DpqE3yT39/hdfS9R5nX6fpbwcOlPSI/ep5L5D/nhd5mHwAnPPIRwcOYVtBeb
L9JP/Toh/TPpV38RMv8k/XD6PdIPf0vmafounnDmRfr+I/d05D4V9Qq+wfiT
hxeU+zy0H9v/qL0i93hNO4W3lPmzvoclPET6bX1vTjjzTD7zu7+d3fHC+TlO
OuHhP1fwr77ZeRfD3pcgPepXQebtfFa/6dK/qR8W7LOkvqEz8dn+x9qnqB8K
Y/eh70Twnrb0k+SH+tXavG8Fp38mHjj9ahGzb7ZM+jHype8cSn3Qd9Dkd6pL
f7XR7I/x7qS+syCc+qP3/4RTXnrPQ9JL/8nvwkdLf8jvql8L6d/amn0t+jGt
38Kpt/qeIOOX1BPKj/IqLOd3hPe0Tie9kXKufdzDvtZGD/ta/Hs7T0Afredy
Xky7s/U5v4f9MfUrK/+uz6F1BcrMKqL1h3xVl/kAv6ftWH5X33GWdDLPJP3o
ES86qF8S4w9Wz1dEn1gZL9BN25Hor36hzfnp/wGTSqBL
   "], {{
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
0n0/1LPcq+Mt4Rual3vS2l4q/FddV6JX17xOWG9rCG6gc1lah3vAI0RfSXC2
xjwUHqb7Pi98L+ELhb8ifG/hi4T/XljfOFlwruj7wPNFf0f44cK/Ef628MOQ
7ex14d2Efyv8t8K68YmCSwrron2QC9HybSX1/VnH24p+tOBPatsI7y44T899
nvrsJDhczz4srYFto+XVMrr207rl7GF1y1bw1USfqLaqxlhX72jz0nrOysiI
0nK/ifBVNN6ZGu93Hf+ovu2EH4GtUJoPr6s+V6Obqp3N/tW5EwXHC25RWh9Y
pbKOjq7+gug/qLVVn8MFh+i6wbnX39fqM4Q1r/4f61lvRLYnHWkIPKzBOtUg
4Q3CzwiWY2fo+J/CsmkAdov6XM1/wT4qLL8uEPxKx1ciFwT/DOYPB4gedP/N
1Oc75LvO9Rf8gDUZrAf0QA+uWx4dWrd8ZPwDwJOuhc41Sv2/U/8WwTJ2B+ED
de6owjrGpuwp0buobalzS9XveNHfZO4z63DobzeI/q3w5oJtdc1pom0d/Ew8
2/nYjHqPXZg/wQM1XpnmsFNlO44xHyute58g+LWua5Z5He9aeA2vnPZLq8z8
c7fC67kxelzleblBcN/C63Zd0f/Wc/QQfof6dy68tpuhq6rv3morZeYPjeHT
2F/oUupzoq57UseNMuv8myN/Re8t+qHoNKJvLLhh8BibFd7fK8Cr1W9IZXtl
eul3xrtrrfu+kuaHeXpB7TjhGwguLE3nfOvcMmldtSsry5DHBQ8LiSb4ebBc
m4COgT4mfBPkam5Z1Ub9ni0t08YL3pl5TpnPUzAM1WdzwZdKyzTGmS5aX7UK
PUPnvhZsKvh66bXGHPbX+RPVlkVHr9x3SmkeCi/dR88wUNdcL/oH2Mv6Pz1F
31BwRLBtvja8SGPMye0vwD67XPAt+BqyXPg/wjfWWBtpjDMFr63831/WfZZJ
74h3tb7aWvAr9Er121Jjr9PgNbJ+5ne/P7pd4pNPo1dlxtfTtesgc3XNeqJ/
Jdpq8Fp4F/MpOKO0bddPcILOfVHzWiwK6zAbsI+Dx2wmOLuybXqi+rfQmF9m
Xh9n5F4zzFsf9ftHcNNgfwp+lT2RTaXXzinoXKVtYfA19X/e1vw1ifafoEMe
hrxVO0njzq3sJ4GP9azsPzlJeC/BxWp3qs/Plf05g9mzgten/cK+ubX02kVG
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
P4iN
         "]], Polygon3DBox[CompressedData["
1:eJw1nAnYF9P7xuc7y5l5FWlPkUpFaRGK0KYkWVIie8q+VEjZKUqhVPYsibKL
hBRZk32XXyl7JKHsQvK/P+75X1fnes9zzpkz850551nu5z41HTpiwPA4iqIJ
aRTpX1QjRNFF+vtJEkXXFVH0YBZFTSRPk3yr5C3Uf6HkjyVfKzmTfIHk9yQv
lvyaymGq36y2rdX3quQDJF8tub7kdSr7VqJopG52vfoG6e+ukueo7KZx76rt
RbWNkXxWHkWrNH431Y9W24vq66W2ppK7SQ5VUfSd+rtL/kjXXqP+z4PnWy55
suS9Ne5w3fteta1V/UG1b6bSXW0v67ftqba+qt+t/jU8i/rOlNxZ8nGS99H9
7le9tdqf03zvqLyg9kvVdqb6ftH9DlT9C/XfoL4vJXeSfKTGvCD5D8kDJV8h
+WbJr+qeu2j+ORp/ruQv1N9R/Yer/3nJ30ruWvFv4Le8ovE7a/xDGj+a36e/
vVQuU1st9VfpujWqz9b4M/g9zCu5J7L6tlD5TvI9kkeofw/mkby35NPUt1pt
QyW/pPYnNP8l5fPPVdlPv28vtZ+n/l6Sh2v8GxozRG33qq21xr4puaHaN0iu
rvH/03x7q75AY85X37tqG60Ftlptt2r8aZLf1Fwnq/8t1ovatpHcQdfNl3xl
8LPNV+mXew1xr28Tr60Hda9jVL+L9aT+xuq/T/W1anu9cBmk+vTIfZeW6+dR
lb4av0jlID3PWbrfkxr7ifp3Ut9AzXuZ5M/UfrSufUZzzJX8isr+ql+ltnoa
u6H8nltqjgdU76y+UerrobZTNMfLGt9XbVeqrY76X1Spq772mvcR9S3S3+bq
u0tjzub7Sz5G8rOSH5X8leTjJL8g+XHJqyQPlvy85Mck/0/z7chv0b0WsN7U
f6z6n1P/PMnPS96B9S75HMkfSR4o+WnJD0t+Stdvoevb6vpRhddg9cTfjLX5
rPprqX9U7O/1tNq2U9+dGnOWxj4huaHk2yQPl7xAYzbT+Faab4Tk8ep/T9e+
q3K76nerqDmapPFDVHlc8lasBcnDJM+VXFfyjZJPkzxK8m2sR10/nXemUkfy
Deo/Vf33St5M8jWSj2c+3T/V/Zvr/idJvl/91dU/Vf0nSr5PcjXJUySfIHmO
5FqSr5N8suR7JEuNRJMlD5X8sOTakq+XfIrkxyQ3kHyL5DMkj5R8jeTFer6b
VW+mspfu/6Lkm1Q/lT3G+pF8A2tJ1yyPfc+ZfCvJH8f+TXdlfmfb69mLit8l
v/GX2O+c336dykLJw1ROVv0Ela8it12v+i0qb6u+Qtdfrfo4ldWqP6G2a1Uf
zx7Q+D3V9o3qa7T+f1D9bf2e1vrh4/R3qcZuqTHz1D9L1+hPdKXaB/MsGv+O
+r/RNV/nng/duIfKatWbanwH1V/QmBtVP4o1qnpNzTGDtS15Rex3eiffNvPa
uEPXfKXfvV5z9FH9HLV/o7F36L7/qH8nfmPmPRIl1pnsnZ/1DGNU/5/aGlZ5
Tf4bW0eyVs+UvElyB8lPZS7NePeJ+77X9Y/xrLrnJaqPLazzR2jMnxr7oZ6n
tfreVdvl6iskD1PfUnRA4T2zo567esV7qUpluPo/xMapL5d8huQP0AGlfTxd
8vuSJxb+BnyL4zXHpMI6vZr6ekTW9ezZTPJukffyJZI7JJ7zF8lL9MyD9fyz
Vc7hW7Lm1NdWc67Q3J9p3tdYiyqXZv5+96g+WfUd9b6u0t8XI68Z1s569S9Q
/WXamE/lcfav5O9y6/CtdP/+kXX7PsHXX46e0XxPqq+BysG8A7WN0fhdEr+T
PyRfLHmnxO9gveRLJe+c+J3+xrOo3jKxzkP3rdM95+v+72GfVb9I49ujGyT/
pP6rgm3bkyoHq/8GybejPyUPknx1sK3CZlVTvRJsy7Bp2OZvNOYhzX8Ce1T1
ONg2YCNWlftjDutJ8uWqf6vysOQuksepvlrlQcmHsd54X6pvoXqs/qZ697W4
XvLr2AP8Fz1//9Q2dqOe/xO1XaNrTlL/7aw/7qF6M7Xdr/qzGtMRe67fPLPw
HmAvzJB8h+R5kltKvlnybZJX8pt17W9quz9YX22v+nT1367+N/hmkudisyW/
Kbm35Ecl34dvxn6o2IfCl/pLc7WOvL5b67kXa3xXyfdp/Czsk8bfztpR/92q
L1F/N+6t/tnotsy+1lYqL2m+SdiA2DppQmafC9/rAY2/W+OP452rL6CzVH9O
/Z3wx9R/Z2nP2Av3YPMlL5XcT/ITkh+U/IHkgyQ/LvkB/AfJM3W/GZqvD7ZI
5UD1P6b++9W/TH97YivVv7+eH2X3SMU+GL7Y6xrfC92rMfdo/JOS20u+XfIM
9Ifm3jqyvm6p97OV9kAjjfm61CdX42Oq/xTJM1VvprbzVB+Kntb1e0p+Q/1f
qO0C1bdQOU312Rr7q/qbqBwlearkH/FH1D9N9zxXbXeovqXK6arfq/7f1f+W
nqtjYh8GX2aA2t7W/A2xW3q2eioNVP+MPaFrX1N9V/U/jF+Hf6C2CaUtQ//W
1/itVP9c489X37GZ9W1fyYNV31L9W/Be8S/Vv4Pu+a7qZ6tsjT+Gv6T6ufil
qh9ZWJfcWuqfjzW+vfoz7KPGf6EyXfXFGtNN9RUqEyX/gg+jsRMk/8j+VNtj
qn+q8qf6Gmn+JppvseSj1Xdx+X67SH5L/at0zUXYK5X1+NMa82jud8K7+Upt
F0veG/9DfZ2xSZqzkfoz/f0Te6r+bSTvrDEp9lby8fgV6G/2i+rb6hlPYC/r
ml8K299b0L+8D9Wv1TWJ5H4qayTfJDmo3l/lH/Rj6f+zBvvgb+Mf6/m/lHyh
6ofqHjdKHir5ljLm+Ta1P08sdJfqp1b8PfguH+T29zdX+9Yae6CunyR5APos
dQx2C7o2cWzGd+J7LVA5SG19VK5Q/8GSL1Xf6xq/LfFJ6S/j0xLbfZnY18Un
xtdeldhXXorO1m9rrGumqL65nuFWzTNbY06QXF3ydMmzJB+PfVH9AI1diL+v
Oaqp/6bU/v1Q9Z+k+54R2+fB98HGYGvma+xD2H7dfwa2khhR499nTo2vJ3ky
8Qg6VvJ6jemt+n66boLq/dU/VvcZQJwr+VjJ10k+RPL1ko+TfCM+pUq3ivUF
emMgcZ76h0i+OXUMNF/yj4ljI2Ig1kePzLERPp+6oisS+4KX6u8KydM05l9i
Uf3ey1LPeZiurZI8JvUzHCp5X40Zr3o/1qval2u+Q/Bt1D6HeFRjztLv24TN
yR2fE6usVP8S9ffQ30sk70O8qut7Sx4n+SDWF35McKyyQu0vET+pbVzF+gy9
dr7aP8R/l/yP6mNUVkq+VjKAwcvETap/pFIb+6ZyH/ZM5S3if/VfrvpKlbrq
Wxpse4mpia2/U9uDFcc0xDbfS35I9TYqyyWvlfxAxTH/G5ILvZ8RablGdf22
qm9U/RP119PYV9mjeh/vYzOIH1Priwv4vZn1JvrzA2I4yYskX1SxfkRPoofR
x++r1JC8XHOM03w/RbYXc9V/lvqWqdRU/1q1zVP/AvW/qHpeZRwDPIP1tpXG
/4Fvh/4ldpB8hOqvqVRJfkny2Ir1UcMyXqqv8Vdrjlv0PdawblQWq/84zXec
+g+N7dPvofrzajuSWBQfUO9nrMZ+rPp1Gl/R3Jn6Z0a+fkhpnw5X/VWVQtcP
URmEf6gxXVSPNeYO1V9Q/7H4SsR1qr+tUi3zfjxF47fRmBNVf1ZjDo8dszXR
/Z/S+As19lOV+upvAqik+l2sKfAIvZ888/s4Udc+p7aLK7Y32B1iBC6ZkDh2
IMbEJ2kVOfYkJvs5tk9PrHatBl/Lu9f1cWYMqn3pb+J7fyJ5r9Q+zwr1z0fH
xrbJs9CvausSG7/YLvOeW6S+Tan3InvyGfZq6r2KTnpJcppZVz2l+ZsljuF/
zoz5tCG2jOxv8hvRz3eWv/1p9W+XOGb/lXgu8VpgTXyv+knoEXSZyjpsTWJf
8kiVH1Q/MrPtIObaBVuukse2//gBV2T2nfG58L12Yj3ha0gejo3Xc/RR/3mx
8aJ22HTsteTTVe+b2RelrbXqQ/FD8HfUthu+IO+o4jXD2sEmYhvXEeOA5aS2
x1ezZlLr+CXY+8y6/wHJ2xFP4lNpfM3UunmM2s7OrL//YW2qvUVp6/C1L4yN
X20p+QfJF5cYDvgWfdicMzPjYfw2bMCwzPE6/g327S/1PVs43hiiOf5S32u5
1zOx9HZVtlEva2zIbLvAHNuCBUSOD07WHOfgb2rMb6nxy5GRfehfU2NGdRL7
nGBJ+6u0iP0N2uKLEjdJXqv+bdB1ut/2sW3sdcQamuNR9b0leTP1n55b3zyi
9hp6nnn6O0/976itOs8s+UvJv0vePjMGVC+xjww2BOZTI3EMABYExlQ3sc8M
9lRP8rqKsQvi6Xm6X8fY33ii6gMy+16HSd4rM4ZVPfXzg21dgH7HHqn/79Tv
mHeNTzFa9YWa44DYa25lZp3I934nsa7sl/rdovPXlRjojuyDyP74IF2zn67f
UfKO+CC6vm9sjOXtzJjsfqljduwJuCL44mCV9XyH1HsRG/OD6nM0prWu3wH7
rforukejijEy3g82hdjyz9S25hC17QH2orZuvE/1t2XtRfZf90/9rNio71Pj
xNg21ujLfAf8Xo3/XvK2qk/TNRXJNVLjnb0zxyonqu34zHgp2NtpqjfX/Rtn
XhusmQPL/c69D5F8jOqrNE8PYpLY8c6X+CuqN1DphT7VfPVU/0vXNMU+pd57
rEnWZn3JNWP7sDNUv09jmvB8ki/DvwzWnWCYfO97VKrhL+vaxnq+T/X3SHSn
+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
/wP/fSLo
         "]], Polygon3DBox[CompressedData["
1:eJwt13m811Mex/Hfvb/fvfdXSqGbUUilxjKhsssyXabc0qao20KNZUiWYYaI
IcaUpBpLlqZHKamQqCztkdFiadVKG5kaM7YWJHl+OveP9+93Pq/v+yzf7/ec
zznf+n1u6XRzYSaTWUZFVLUkk3nGf9dsJjMql8kcIn64OJNZK94lnlaQybTF
Ts1nMuXir2gytlPlj/jKxEfwttHGx+J11A47DqvA1os/oN9jh2Pl2IfiN9Sv
q9wY/y2drP3m+DxsN99krCU2ma86Vl/cgE7C/sq3mGeW8i7Xd9NfsEXYTOw7
8fc0Gsur01f5Tje93H30j/HwzeX7Cd9H9fAX9dEHnxFjF1/K9wm2H1uGlfMv
4D0ROynGS7/DOsT4eU6gjsob1GtPG/kyEVMHvprYvdCt4tuoBTYAW6be1+Ip
nmkr/VbgQ/XzGD1nzJ14jqQh6j7I9xBdGP1in2IF4o3UERuIrdReU+rnWl58
D30svoKnuT42id+nS1yvibfAF4nvpCXi2drZo++9dLnyZte30Gf8HXk+p17i
U3hvwL4QV6VblK/Ge9PZ6i3DLseO5rsEWy5ujNdWHk3XGEs9rBP2abSfS/cT
99Ut3rH+n6GFnsGPMX+wsTxvUn91m2B30VLtz3HtB94f6QFsBXYa3aS9EnFz
z3WGcl/sA/VPF3dV50b+J2mOPmbzDaMtPPt4Zurjcr4yvlfFU3NpbsYc/UfM
c77d2HS+y/ia8nUVf1P5Lg9otzlWIf6WXsUy6p2IHSv+mIZg52F300fae0qd
Bcbyrfau5Osm/jPdj63kuSPeHd/brv0f/5pewn6jrTuVH+XbqO6D2Cq+ZnSz
bqvEs8fn8NXkW6nfm8V76GmePertpr7abUPL+Vbk0vyPdXCAbzJfFboQey8S
RzwX8aFUne4S7+ebqFxC57Ms5Mvi08S1qC22AivEXsum+RfzcCl2q35axCOK
+avvOeI/aW+JsV6LTYw8U5LGHePvF2s41p74FloV94TNx04U96D5WAU2LBcT
wVj1+664DtWNtS4uoKnKNehitiXGMjTWlviibFqzsXYfjTUd908DsBri67W5
WB/XYBP0cZi4RHtvVz6TeDaviH/BJynn6QJ139XHT9h4cSEV0O18P2MTlHN0
Jt+8yH2Rd8SN6CpsG5bHZmXT2oo1trYo9Tuz8r7i/u4WV6E5yvWpO99mvkOw
eeKG1BPbglXD5ouPp17YVqwqNlfcgHpgm7BjjG+a+7waewE7tvKZLqzMf5EH
78mn3Bs5+LB8ytP3+d/H+4Jyls5Qd67rOXy6uJQuw5ZX5vLI6YfnUz76m/8i
mqFcm9rxrXT9W/qGauTTmhiQT+sh1kXNfNoL7vVfTG8oH0nt1V0VecJYRot/
NudPxd7EKrB53mU3fKh7/CXWFfaKci9sHN9RsS/QVL7v8J50ZuyL2GvY9+Kr
6CysPfYG9oO4H52XT2tmSuX7jvc+IZ9yR+SQPTw30DlY65KULyJvdI98hR2K
jVPOG+si164Tn4H3yKWxxJgKjLlmPGdxlaI0N2OOvkSN3WvbeNeuHa/eiMhZ
8U6No4uhDS9Jc3JcNuWCyAljYr1o82x1vqTx2ivjaYU9p3yx+mV0RT7lkpHq
blFvK43CHon1wNdI3cZ8g0vSHhf5MfJkN2qWT7kyWOyDl8begrWLnI3tjf2b
zsXq0KZ4j5EDXevEcyz2RTa9t4PvryTl7cjfP6s3gM7n6YzNwvaL76MLsN7Y
u1gPdZ/EisW9aAHWHRuBZcX73O8juXRgmutaV6xuvPN433zjY58T7488gRUU
pbHEnKqnn+3ZlIciH3XHxsSeGfceZyJsnngX/gjPJs9uMz2rXhc6R1tnR07S
x//4jsO+zKbxxTh7qncU9lmsDXoL64jdF/Of1uljOPZL5A/8HeWs9p7AL4p9
E/tX7Hn6PEUfb7nWH9vMdzu+Np59nBGL05qPtf9czC+svvo7xL1jLrt2DM/s
2Fu1MSz2Jm1uFx/D93k2nTHjrFmb72hsm/hKehqrhdXFtsZZhUZipcXpfcaz
jGd6V+ylWAO+ndl0Xotz29GxVrEN4jY0GKuGlcZeFnsR9Y+9BTtFe+/HWsOm
YaeKj+RbLy6nQVh1vq2xj+pzYJxD3Me2mI90nnJnrE7sPeo1xZYq36judHWb
RY6ks+Lsxlfq2kTtTcIaYOVYEfYs9hCtVq95Np2f4hxVW5ufiFvSFP4d6p2A
1Y25rO4IbFPkocit2JI4S6hbFudubE0uvfN1WNs458VeIZ5Ni7Hzw0cblA/o
Yz3enufi2Lfi3BPnQdda8FyGrY5zAK3F2mC301vqVaMybI0xNeT7JpvOV3HO
OjnOa/Sh8k8xT9X/A0/LOOdg+7B3sFaRX9xLn7gvet297YzcR6cpd8DOjOcv
XqNuW3XqxVqPPU/cSP3q2K08A/hX8TXBLsRaxznAvNnhWuvoR7wwl/qPcazj
vcO1O7BB6q4Xd8H/rv3VYn+ZMZHbsIcFawoPHuczY7F+2IvYj4Xpe2BB5dkz
zqC18un74gH/o/iKVWpChxrLrOJ0ro7z9RH5dHa93/8f8SeVN2qvVHtTXb8G
ewr7DKuNvYZdj43Cdhamb6f4huqDPRHvEauFvYpdF/kZ+w9WB5uBPR7tKXfB
BxrP7vimiLNsnPFi/mFfiefTWZHqYl5iC8RPF6ccF7numdiDPKt/xpixznEP
2C7xyOK0T8Z+ORIr4dtNI8RfG0s9114uSrluSDbtE7FfXO0Z7I0cg+0VN+Z7
na8tvlI7q2gNVq79a+lZvu18R2HT+bpig7ANhQeP2Jlx2H7qKK7w34w6x3nf
xTF83+EN+WbF+Rp7JV42ne5vMfYedm4unUXjTPpv8U30vHiXuo2wOXx9sbHY
99jx2GzsNuxl7ADWHFuE9cYej1yKHYFNiTN97KsF6fspSznqQY/xfcl3CN9E
vivjHUUeL0zf68/7uSFyTpwB8EnGWSruzjdU/AVfVb4X+bphg7FPCw8efzPj
sV7YcOy/hem7Or6ve8a3D7YDq4ZNivNQ7GXYNqwKNqHyWzm+meObtxOd5pn+
Ci+xGSY=
         "]]}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0s1LVGEUB+Azn1rTaBCuoqJlRG0lMKiIXNRKpEXtIgpbFLhxJjX7WBi4
V4KiDLSNywakZc2uTUxN0zjNh6hEiFH/Qc/FxeH5nRfmPfeeOydvPRi7n4qI
BfUuHZHkyUThdS7isH6NJ7jOs6zyPGu8xh5v8i//qXtyPh9RZpHPOcQlHuMq
T7PCc6zyYl/EKzNvm/1Vf4Ev9VOZiG/6z/qSXJfL/M6HbHCaPzjDJmf5SG3I
c2zxMX/yCdt8yg6fscvtrPc1rydf9w6XzVvW3+Wms0t8o7/Dcc9cc/ZCf0X+
JA/zPU9xhUe5yCOcZ4ElZplRE/KeOTfY4VV+4Qg/8kyyTzv5YN5xueI3efNG
9YPJHpnT/+FAcheL3OUh/maBv3iQOzzALfYn34xdZUS06fpoJXeySeuIBq0n
6kwndzh8m9r/n/wH0ElIZw==
       "]]}, {
      Line3DBox[{1439, 1714, 900, 1438, 2139, 1621, 1440, 2140, 1622, 1441, 
       2141, 1623, 1442, 2142, 1624, 1443, 2143, 1625, 1444, 2144, 2036, 2202,
        1445, 2145, 1626, 1446, 2146, 1627, 1447, 2147, 1628, 1448, 2148, 
       1629, 1449, 2149, 1630, 1450, 2090, 2150, 1716, 1631, 1715, 2264, 1929,
        1930, 1718, 1920, 1632, 1717}], 
      Line3DBox[{1452, 2037, 2203, 1451, 914, 1453, 2151, 1633, 1454, 2152, 
       1634, 1455, 2153, 1635, 1456, 2154, 1636, 1457, 2155, 2038, 2204, 1458,
        2039, 2205, 1459, 2156, 1637, 1460, 2157, 1638, 1461, 2158, 1639, 
       1462, 2091, 2159, 1720, 1640, 1719, 2265, 503, 627, 617, 1993, 2339, 
       697, 1995, 1641, 2032}], 
      Line3DBox[{1464, 2040, 2206, 1463, 2041, 2207, 1465, 927, 1466, 2160, 
       1642, 1467, 2161, 1643, 1468, 2162, 1644, 1469, 2163, 2042, 2208, 1470,
        2043, 2209, 1471, 2044, 2210, 1472, 2164, 1645, 1473, 2092, 2165, 
       1722, 1646, 1721, 1931, 2331, 1690, 1961, 1921, 1960, 1922, 1724, 2136,
        2340, 2000, 1691, 1726, 1647, 1858, 2309, 1725, 1648, 1474}], 
      Line3DBox[{1476, 2045, 2211, 1475, 2046, 2212, 1477, 2047, 2213, 1478, 
       939, 1479, 2166, 1649, 1480, 2167, 1650, 1481, 2168, 2048, 2214, 1482, 
       2049, 2215, 1483, 2050, 2216, 1484, 1728, 1729, 2266, 1485, 2261, 1692,
        1723, 1693, 1962, 1932, 1976, 1933, 2002, 2341, 1694, 2001, 1695, 
       1975, 1486, 2262, 1696, 1727, 1697, 1487, 2268, 1733, 1734, 1488}], 
      Line3DBox[{1490, 2051, 2217, 1489, 2052, 2218, 1491, 2053, 2219, 1492, 
       2054, 2220, 1493, 951, 1494, 2169, 1651, 1495, 2170, 2055, 2221, 1496, 
       2056, 2222, 1497, 1735, 1736, 2269, 1498, 1698, 1730, 2223, 2084, 1963,
        1934, 1978, 1935, 2004, 2085, 2332, 2003, 1699, 1977, 1499, 2267, 
       1731, 1859, 1732, 1500, 2270, 1740, 1741, 1501, 2271, 1742, 1743, 
       1502}], Line3DBox[{1504, 2057, 2224, 1503, 2058, 2225, 1505, 2059, 
       2226, 1506, 2060, 2227, 1507, 2061, 2228, 1508, 962, 1509, 2171, 2062, 
       2229, 1510, 1744, 1745, 2272, 1511, 1700, 1737, 2230, 1937, 1936, 1512,
        1938, 1964, 1939, 1738, 2231, 1980, 2022, 1979, 1513, 2093, 2310, 
       1860, 1739, 1514, 2095, 2232, 1750, 1515, 2273, 1751, 1752, 1516, 2274,
        1753, 1754, 1517}], 
      Line3DBox[{1521, 2172, 1652, 1519, 2173, 1653, 1523, 2174, 1654, 1525, 
       2175, 1655, 1527, 2176, 1656, 1529, 2177, 1657, 1531, 2096, 2178, 1757,
        973, 1756, 1941, 1966, 1942, 1758, 1923, 2024, 2346, 1658, 2033, 2005,
        2006, 1862, 2311, 1659, 1759, 1749, 2179, 1660, 1863, 2098, 2180, 
       1661, 1864, 2100, 2181, 1662, 1865, 2102, 2182, 1663, 1866, 2103, 2183,
        1664, 1540}], 
      Line3DBox[{1539, 1765, 1764, 2276, 1538, 1763, 2242, 2101, 1537, 1762, 
       2241, 2099, 1536, 1761, 2240, 2097, 1535, 2094, 2239, 1861, 1748, 1534,
        1981, 2023, 2345, 2135, 1747, 1944, 1965, 1943, 1533, 2132, 2333, 
       1940, 1746, 1701, 1532, 2275, 1755, 1104, 1530, 2238, 2068, 1528, 2237,
        2067, 1526, 2236, 2066, 1524, 2235, 2065, 1522, 2234, 2064, 1518, 
       2233, 2063, 1520}], 
      Line3DBox[{1542, 2069, 2243, 1541, 2184, 1665, 1543, 2185, 1666, 1544, 
       2186, 1667, 1545, 2187, 1668, 1546, 2104, 2188, 1767, 1669, 1766, 2277,
        1945, 1967, 1946, 1768, 1924, 2025, 2070, 2330, 2034, 2007, 2008, 
       1867, 983, 1769, 1760, 2189, 1670, 1868, 1771, 2190, 1671, 1869, 2105, 
       2191, 1672, 1870, 2106, 2192, 1673, 1871, 2107, 2193, 1674, 1872, 2312,
        1772, 1675, 1547}], 
      Line3DBox[{1549, 2071, 2244, 1548, 2072, 2245, 1550, 2194, 1676, 1551, 
       2195, 1677, 1552, 2108, 2196, 1774, 1678, 1773, 2133, 2334, 1702, 1969,
        1925, 1968, 1926, 1775, 2279, 2009, 2010, 1703, 1873, 2073, 2263, 
       1776, 1770, 1874, 2074, 2278, 1553, 992, 1554, 1779, 2197, 1679, 1875, 
       2109, 2198, 1680, 1876, 2110, 2199, 1681, 1877, 2313, 1780, 1682, 1878,
        2314, 1781, 1683, 1555}], 
      Line3DBox[{1557, 2075, 2246, 1556, 2076, 2247, 1558, 2077, 2248, 1559, 
       2111, 2200, 1783, 1684, 1782, 1947, 2335, 1704, 1971, 1927, 1970, 1928,
        1785, 2137, 2342, 2011, 1705, 1879, 1685, 1786, 2283, 1777, 1881, 
       2078, 2280, 1560, 1778, 1883, 2079, 2281, 1561, 1793, 1885, 2080, 2288,
        1562, 1796, 1888, 1000, 1887, 2112, 2201, 1686, 1890, 2315, 1799, 
       1687, 1891, 2316, 1800, 1688, 1892, 2317, 1801, 1689, 1563}], 
      Line3DBox[{1565, 2081, 2249, 1564, 2082, 2250, 1566, 1802, 1803, 2291, 
       1567, 2086, 2282, 1784, 1706, 1972, 1948, 1983, 1949, 2013, 2343, 1707,
        2012, 1708, 1982, 1568, 2284, 1787, 1880, 1788, 1569, 2286, 1789, 
       1882, 1790, 2285, 1570, 1791, 1884, 1792, 2287, 1571, 1794, 1886, 1795,
        2289, 1572, 1797, 1889, 1798, 2290, 1573, 1195, 1815, 1574, 2297, 
       1816, 1817, 1575, 2298, 1819, 1820, 1576, 2299, 1821, 1822, 1577}], 
      Line3DBox[{1579, 2083, 2251, 1578, 1823, 1824, 2300, 1580, 1709, 1804, 
       2252, 2087, 1973, 1950, 1985, 1951, 2015, 2088, 2336, 2014, 1710, 1984,
        1581, 2113, 2318, 1893, 1805, 1582, 2292, 1806, 1894, 1807, 1583, 
       2294, 1808, 1895, 1809, 2293, 1584, 1810, 1896, 1811, 2295, 1585, 1812,
        1897, 1813, 2296, 1586, 1814, 1898, 2253, 2114, 1587, 2115, 2319, 
       1899, 1818, 1588, 1221, 1837, 1589, 2305, 1838, 1839, 1590, 2306, 1841,
        1842, 1591}], Line3DBox[CompressedData["
1:eJwVzUkyg1EYhtFPKcJMs4KfiIQMVDHQJNJIw8TAEoylkViApQgLYGQBIVMs
QTOzh5CTwal736funySXnYv2TEScczAfsZuK2GN2MWLffiSxByTanfNQu3c+
88AabwsRL85fhhx5k9PGrNtPdoGaveR3rrQ0Ra2uLWste4Nj7V/LuLfZ5M8u
6Vn3DjnCN2Vty73LuzcNKtq2fc2H3aSqnTpXfNPT85xoZ9qq1rd3qGm3cxGf
7jeMeKU+/W/vvt1/+KJEQ58APoci1Q==
       "]], Line3DBox[CompressedData["
1:eJwVzDdOA1EUQNFnidiDgRJa1+QgUyCDx3FsuaBkAVCR02bA1GzCWAiDCEuA
yoSCDXAojv5/9/2Z6Z29dDcTEc1/QxHt4YguN+S55p2NwYiGfcf9mzsu+eCX
3GjE9khE6k3f/MUnF0zZNezqdmvmcya1VKtpdecbZ/oqVa1mfuXUvEJFq5pf
ODEvU9YG/GfJ/ZgJ94p9SV80H5HVylqiLZgPGddKWlGbNx8wpiXallZ0PrOv
z7GpPTp/eOKeHg8U7Frezvj+yjzLrbbu/AOl5inB
       "]]}, {
      Line3DBox[{725, 901, 2139, 726, 914, 752, 2207, 926, 764, 2212, 937, 
       776, 2218, 948, 789, 2225, 958, 802, 2234, 968, 2173, 816, 978, 2184, 
       830, 2245, 987, 843, 2247, 995, 855, 2250, 1002, 866, 1205, 2300, 1206,
        1009, 876, 2337, 534, 661, 659, 696, 2031, 625, 1384, 722, 888}], 
      Line3DBox[{727, 902, 2140, 728, 915, 2151, 753, 927, 765, 2213, 938, 
       777, 2219, 949, 790, 2226, 959, 803, 2235, 969, 2174, 817, 979, 2185, 
       831, 988, 2194, 844, 2248, 996, 856, 1180, 2291, 1181, 1003, 867, 1345,
        2252, 1050, 1364, 1315, 1365, 1316, 1425, 1378, 2254, 1405, 1053, 
       1230, 1015, 882, 2257, 1232, 1021, 889}], 
      Line3DBox[{729, 903, 2141, 730, 916, 2152, 754, 928, 2160, 766, 939, 
       778, 2220, 950, 791, 2227, 960, 804, 2236, 970, 2175, 818, 980, 2186, 
       832, 989, 2195, 845, 1155, 1156, 2200, 1158, 2282, 1046, 1182, 1047, 
       1363, 1343, 1183, 1346, 1402, 2336, 1051, 1404, 1052, 1403, 1208, 2301,
        1054, 1231, 1055, 1302, 2324, 1233, 1234, 890}], 
      Line3DBox[{731, 904, 2142, 732, 917, 2153, 755, 929, 2161, 767, 940, 
       2166, 779, 951, 792, 2228, 961, 805, 2237, 971, 2176, 819, 981, 2187, 
       833, 1136, 1137, 2196, 1139, 1044, 1157, 2335, 1045, 1362, 1340, 1160, 
       1344, 1399, 1048, 2343, 1401, 1049, 1400, 1287, 2318, 1185, 1207, 1186,
        1294, 2320, 1209, 1210, 1303, 2325, 1235, 1236, 891}], 
      Line3DBox[{733, 905, 2143, 734, 918, 2154, 756, 930, 2162, 768, 941, 
       2167, 780, 952, 2169, 793, 962, 806, 2238, 972, 2177, 820, 1120, 1121, 
       2188, 1123, 1043, 1138, 2334, 1337, 1336, 1361, 1341, 1377, 1342, 1159,
        2342, 1398, 1433, 1397, 1280, 1162, 2284, 1184, 1163, 1288, 1187, 
       2292, 1188, 1295, 2321, 1211, 1212, 1304, 2326, 1237, 1238, 892}], 
      Line3DBox[{735, 906, 2144, 737, 919, 2155, 757, 931, 2163, 769, 942, 
       2168, 781, 953, 2170, 794, 963, 2171, 807, 1104, 1106, 2178, 1108, 
       1042, 1122, 1335, 2277, 1334, 1360, 1338, 1376, 1339, 1140, 1396, 2279,
        1432, 1395, 1274, 1142, 1161, 2283, 1144, 1281, 1164, 2286, 1166, 
       1289, 1189, 2294, 1191, 1296, 1213, 2303, 1215, 1305, 2327, 1239, 1241,
        893}], Line3DBox[{739, 908, 2145, 740, 2205, 921, 759, 2209, 933, 771,
        2215, 944, 783, 2222, 955, 796, 1093, 2272, 1094, 965, 809, 2333, 
       1330, 1370, 1331, 1109, 1313, 1430, 974, 2346, 822, 1371, 1372, 1125, 
       983, 835, 1126, 2278, 991, 847, 1145, 2281, 998, 858, 1167, 2287, 1005,
        869, 1192, 2295, 1011, 878, 1216, 2304, 1017, 884, 2258, 1242, 1023, 
       895}], Line3DBox[{741, 909, 2146, 742, 922, 2156, 760, 2210, 934, 772, 
       2216, 945, 784, 1084, 2269, 1085, 956, 797, 1329, 2230, 1039, 1358, 
       1311, 1359, 1312, 1424, 2345, 1369, 1394, 1041, 1110, 975, 2311, 823, 
       1111, 1268, 984, 2189, 836, 992, 848, 1168, 2288, 999, 859, 1169, 2289,
        1006, 870, 1193, 2296, 1012, 879, 2255, 1217, 1018, 885, 2259, 1243, 
       1024, 896}], 
      Line3DBox[{743, 910, 2147, 744, 923, 2157, 761, 935, 2164, 773, 1075, 
       2266, 1076, 946, 785, 1327, 2223, 1036, 1356, 1309, 1357, 1310, 1423, 
       1368, 2231, 1393, 1040, 1095, 966, 810, 2239, 1097, 1263, 976, 2179, 
       824, 1127, 1269, 985, 2190, 837, 1146, 1275, 993, 2197, 849, 1170, 
       1282, 1000, 860, 1173, 2290, 1007, 871, 2253, 1194, 1013, 880, 2256, 
       1218, 1019, 886, 2260, 1244, 1025, 897}], 
      Line3DBox[{745, 911, 2148, 746, 924, 2158, 762, 1066, 1067, 2165, 1069, 
       1030, 2261, 1077, 1031, 1355, 1325, 1078, 1328, 1390, 2332, 1037, 1392,
        1038, 1391, 1257, 2310, 1087, 1096, 1088, 811, 2240, 1112, 1264, 1113,
        2180, 825, 1128, 1270, 1129, 2191, 838, 1147, 1276, 1148, 2198, 850, 
       1171, 1283, 1172, 2201, 861, 1195, 1196, 1291, 2319, 1199, 1200, 1297, 
       2322, 1219, 1220, 1306, 2328, 1245, 1246, 898}], 
      Line3DBox[{747, 912, 2149, 748, 1062, 1063, 2159, 1065, 1028, 1068, 
       2331, 1029, 1354, 1322, 1071, 1326, 1387, 1032, 2341, 1389, 1033, 1388,
        1255, 1080, 2267, 1086, 1081, 798, 2232, 1098, 1260, 1099, 812, 2241, 
       1114, 1265, 1115, 2181, 826, 1130, 1271, 1131, 2192, 839, 1149, 1277, 
       1150, 2199, 851, 1174, 1284, 2315, 1175, 862, 1197, 2297, 1290, 1198, 
       872, 1221, 1222, 1299, 2323, 1225, 1226, 1307, 2329, 1248, 1249, 899}],
       Line3DBox[CompressedData["
1:eJwVz79KgmEUgPFjJmQ5Cc1hOBhWQ0uDU04JSRBCSxE4CEp/7iB1qE2hITDM
i6hLcKkrCFySoClwaZKG6Nfw8JzzfO8L75erXx1dJiLiELOFiNxixDoaSxF5
TqKAjVTERCtwBUUcYxPbvufTES3zPZrY0Zbx5s4uryCbjNjjd+2Ly1jTDvhD
m3EVW9rYfmL+xilu7SX93DzHBe60fa1t/kXaGzpc0wac8o6M9mA+0574x52M
/mxuai+ccCarvZpXuYMupvY2X2P4/8/O9biPG4zwiE/n/gB9eSVp
       "]], 
      Line3DBox[CompressedData["
1:eJwVzr8ug1EYgPHXR6Uk36RjB9Kgk7CqTSkLiWCk8TcxtNegRCkTproM7sIN
GJpIVEQi6WJqDPwMT573e875zjkTe/WN2kBEbKKXRCRDEQVMZyJeshFTPOn7
kI9wgHsURiLu+Biz1j+Q0eZ4eDBinjv+/+QSxrRFftW+uIxxbY3ftB6vY0bb
4Xftm3fRNC/oNXMfWffUeVU75V+Mag3e0tr/b/CuVHswV7VH/nFOqj+ZT7Rn
TuzJaddoo4UGzlC0dsvnyKOJG1zgEkvYxzK6zlrhK1SwjT+b2ChA
       "]], 
      Line3DBox[{887, 1020, 1317, 1250, 1348, 1347, 2338, 881, 1014, 1229, 
       2307, 1228, 875, 1008, 2251, 865, 1001, 2249, 854, 994, 2246, 842, 986,
        2244, 829, 977, 2243, 815, 2172, 967, 2233, 801, 957, 2224, 788, 947, 
       2217, 775, 936, 2211, 763, 925, 2206, 751, 913, 2203, 724, 900, 1056, 
       1253}], Line3DBox[{894, 1022, 2308, 1240, 883, 1016, 2302, 1214, 877, 
       1010, 2293, 1190, 868, 1004, 2285, 1165, 857, 997, 2280, 1143, 846, 
       990, 2263, 1141, 1375, 1374, 834, 982, 2330, 1431, 1314, 1124, 1333, 
       1373, 1332, 821, 973, 1107, 2275, 1105, 808, 964, 2229, 795, 954, 2221,
        782, 943, 2214, 770, 932, 2208, 758, 920, 2204, 738, 907, 2202, 
       736}]}, {}, {}}},
   VertexNormals->CompressedData["
1:eJzsvXk0le33Py5TCQ2GBlJKSqUypBS5MqYSJWUqKooGRYPSoFTmWYTMQ2SW
eYgdIVHmuczOYDxSSYTfuTznfj7r83xWfzy/9XzW5/mu9fbPte7r3Oc+1/Xa
r733a9/nPtvas1e1zzEzMTFt4WBiYmH68+/hfx9H0X/m///Ni2g06U8okIAt
42J56TAFjnx8nk32vPavW+f/K/MaX74ohoaTYakDlyseORQawsmnlRTsu/fU
d6pEopLxDqiaoEH00gjL3Xef/evW/6+bvzF7HOPowTJrjUfnZeHzpqjSCja1
TgaZAZ0wrezckVg3CFXJS42u3PVGC0WTv3+SS0PNLHZG9VQaXHCynxT0D/j3
7ev/aD66mHQS4/glY4UlHh0esb2u+C6ukMlZEPekpAc849nn8Qz0w2ygd2/h
dg8U0WH4cvpSM1zXbLvpXToMUT7eA7e8niFW/8vp6sr5KMXuyW6nKhokuiyo
CuAL+tft9397fiLB4zTGMazy6uU5f2dPWnKmb6PCLs/K9b/4+kDgQ+UX9n4q
kB7lP+xb64YiBkoUZKO6QONwWlrfsUGwEzgTkjvwFHFslzee4ayFRz3JxSsa
R2CT6sOIBRxBSPNI3fplK4rRqeOmSDyeBnaeG1oFFoX+63D4p+aHxCbPYhwT
NFkv4nGBf/HGcnlRhWP2s8+Dxvvgfbd2qIU4FX5ukrTIWeaKjnt1GhXO9IDs
aIbqRGE/6Ml4ct266IPUg4QcnGTagTlx5qSO9RBkpzstFP8RgBZk74jsW1QO
4tQgLqaLNLh49JHd3cww9PC6c+22+2Xo6Lw3mjz3aGB0cuDGwcbwfx0+f3d+
pK3FFOOYGCxqjsdv3eOpU1QRhV2mht0lSSS4/s5/8I0TBRxJ8mfSXFzQEPrs
5Xq/D5S49qTn+1BBTG1xyMFn3khvg1bdi2/dwLkinRndGYDGwqbKbnN/pCBX
2WqV3gqlJ27EXT44DKsbR7RqEkMRLfCdnspPAJfsiteX82iQonz+xD2vSCQW
kbuO92MFsrp5cFugCg2ovm0F7jxR/zrcfjf/Qe7BeYwjMZ7ofuQ9/lBE4YGJ
qPrro2RoMVlS92CYHleDd30+edgFPb6rc4gtkgSVI1PLh33o+mp5yTzNzd6o
Py3MR3pTH6wfb6wWbqaCi4mESCldD2wwNTEs2NINt7bbGr35NQAlHrvFOK6F
oAUDTdnm35ug+61rSVPLMFDKbvvs+xCJLBvZEhf8SoOgaaUN5G4atPOHNK0b
fYHaJvhPCrJWI9ElIolCrDQwyLF9bj/84l+HZyyDl18YPB1l8FPcT7ke45g8
3K+GcdX+9LYN47nRwmBbbRgZiDEnS59rEYc3elyTm37nMwmePAk+mmdIgRXc
I0fKFj1D8mXaEeel+2AoJ2pG4SMVJOa/OJgSG4w85vsF/mrtgvWVWd4FWwfh
Nlf/bQ86P6lefCfPyDcCR9nEDHXDCHg89nG4vz8WNQg5vSoej4CNw8+XcI3S
wHHbd+5ps3g0/NXoh75nLVKffmXcmTcC3r2LHUUz4v7P8ExlxE0qI45yM+Kn
tJzbAPbzkAf3e7Dfj/5MOIf9PZZzjQDm5YOJWXXM03m3tVkwPyUiY+dwVApM
msN1WZ2qNsZTrVNSyzSUDKWmhdp4zE0InthiGoy2dd8rbOvtg2O3WLPCdlLh
5qmgWEujSMT3rUTvy8FusL6SxGHUMwBjLQcsO3NiUXqLrevX6QZYpWmtZCpO
x1lWwkz5YRIK89W8r5v+GLruyHu2jdAgj3MzudooFb3tq6m861aPqj1FxIrN
RyAh1WdX0Fjy/zqezxl5fYaR51kZ+Z3/SclcHuJtvDuXl8QU99/E+YiIm0Qc
JeIns+yTj9jPXV3v+WG/n1fmuhr7+6ZPS5kQnZeea33CME8fhompY34K6+5M
wTiefWVahnHlLLSKxHgmT7JtNXhOhp1FP6XwuPbW9zUC1bHI1L1f1udHDzi7
OIXvTe+Hc49MnTumk5FfXLI539ZmENU+pp2QNwzuelFLcy+lo7VLp9i/2VjB
haGRRf69NJA04zdfpZaJto+R3+ZaNyJ/mysuYVwjsHfmy9Ilp9P/MTwJ3Uno
UEJ/Lko+/R3rpPXnDYSxbpKfqLXFeonI60SeJ/L7lfNxTDgPpc4/2ojzkvUD
jgqcj86V15/EcVNAj9kIx1HaEfMNOH4Sfk74PeHvHudtFmJeRiv46WKe/nB0
OI/5Ka73MhTjuNXqmRzGdXOB1Q2MZ89Xyr0EdzIQo841+TaP1AzE9Sl25FB7
O3TIvhSIWTkEnoGCoYfY8pHOrxtWrBpR4L793ovFxTQwcRlwEqEUIGX+OJHD
6s1I5pymZUvEMNjK8VRtrM3923gmMeqizut/1ElEfUToeELXE3qe0J2EDiX0
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
LRTF3to26sFfA49Srm45/XUEdmqXuY5URKITLAv4NI6+Qt96FDMekWnQ54bO
uWVH/2M4EPsk9k3sd3eK3gzG5XjfmBTG6ZXprAPGJ8O7u0LwKhniNe4tv1tD
hhdJljFCX92R4epTc/t3tWiew2MwfpkkxuFC9yYrHm4S1I16n1FZTvf31txS
ys5n6KOkl5JNZQ9kNqiK8vT0g/tb6SdKv4LRVNqVcu63n0H5h307u9cQiBrV
G2ilRaIt2fM+NmdVQPC+WbajyjSY/qnWzFQSg1bp/woIrc1HcVXsJ6TLaJCy
/4y3zOGX/xg+BO8JPyD4n/s0yQb7icsbsQjsN4uXDl/A/pIrcpSZR5ICFnoG
CpKcZJA+e1jBd6EHEjqrNY39wZnr6gz2j5olO5Ziv9BrPWCCcQk/I30V43TA
TqIY48PnFVF88CYJ3DtXmn/LocB9B24S281gtC8jFHjp9fMp3u0WD/L6gfJG
+OSDa5Goqn+bU4zGZ8juC+T/EjcE9fOfJCv4xCK1QV0xvbPvQLVw3zbHCzTY
cin8pc3GRHRt3DbDUbsY3czMvSkWSoOf12JVjGSS/jHc9h9oX4Hj4NujyWQc
F0++Lu7B8ZCIm0QcJeJnu9kxReEfFHDL8UnYIk2CXSGiNdcdPVBv3CtFHB9P
Gybw4XhZcywvGsdJKzW+Ob8a3xfegP3sGfu3AOxf3i4OGzCflns078P8cpNx
s8O8OujRcQHjmGme+AbjaukhTsF4lh3nvYZxDHVmzcW4vhDMPo7x/Kq3wYcc
TAZiLDqV5XJdNxKpmLJz/ljeB6c+H7JU+EyF7g856ooVsWjez1s38LHd2SE2
/Hp/d5QcnjfPOOIeXdsO9+OluoT2DcEh201pXyyTUZGexTZLoXcQsSi5NcKU
BtF2lKjq+Wlohc9u66tQilpJj1+2X6fBx6ULV8pLpf1jdiHyK5FviTwrtMfc
C+fjSM3WHzg/XzDlW4jz8lRUoXxdPRWyKowon+k6YqfIifZd7p7I9pCfGM67
U08truI8XE6uyMD5V7FTXArH9w1HnBVwvA8ozdiA4/y6t9u1cLwzcjdyxvGP
af4RPRz3CD8n/J7wd+qSq4KYx/k27paY14qnb83xmcCRwJXAc94r44udfvR6
iTGG3ZTPXCuegiYMb0U46tL1g29wT2PpACT79ni7GmYgl5l8Ej6eND4ajF+X
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
0/CqY2yn279u/b+rH/NOUYul9cnwVfpFxXEyGawkhXfyJjghqw6OmE+1JEi+
F/mB1YwCP/ZXqlid9EASD6L0FT73wdLUhkF9JSocqV+lQA7z+T/b11/ru4OM
+u4aiXeGEkYGYnTrCA5zX+yF7vYW/djNRAbJy74sEXsoMHGpT17I6ylCzjUb
1ej63Nfieu1dVSokSoksqq7/37+P99f6a5pRf8kUXvaXOUSBC1F7M8+MkIDT
2zHOptoXmZlDeE0oGVyqzKPwWBpZUXXLPRCtCTltgY6SwO9EoE1uCwUWrrXa
b+kY+o+tk+hT586oj6YY9dHSTQeb7oZTIYrVbJ7FxT7gS2zUPsQVhGaiAmeU
JihQtfRx8LQ4CfZ+GeD4oBGO2hGf7rFg+vqlvPXwmPq9nfVSZtTfXs/v6hcT
Rv0ixKhfyIz6JXBH9juNjgE4xN189rleN9hPOOXJekQg8sLPt2aPDoDGPlbm
iQ09MMY1MehCr09ThbOrVXn7wX1vdkpXTS+cHbpJtg6I++16fld3dDLqDh5G
3dHDqDtaQ88u7P8wDDsN67I2bmyGnx/OsA1sjkHvWQK7022GIfxq2rU7r1rg
cK5Z6Kln8ejBzpdQFzsEqXrcnpclP8OQXmaq5cHU39Yd92hBk6Meg/BVm/v+
UcUumPggs+ByjjeqZNQdoYy6Yxej7phlFXE+9pkG61PJI5UbMuBu6/C+Ou84
tOFb9QLeShoord56yT0zB7Ssz67c65WM7ipmdR4KpoF3qqrvIYcieFa3Si6V
lIbG94peDXalQbCcVbnciVIIttnjHCDqhzb28y7ekEuD40b8o4cevoFDfC/c
1mwKRBsZ+r+Qof/1Gfr/UrxfOzMvDdij+nPySB8Re9vTguZLcch1puCa+Boa
7FgaUGFW/QGFrCvpat+WjNZKuBYtkKDBvUXttVyrK9HJaH6NYpc0FPaNehbz
o1uiWWQDfby5JGOOJ0WV7u3YTmd0IxZju+l4hc3Zy+XCOnWMo+6FWGM8Jto1
nMN4Ss18muuXdNZm3Vz/JL29z09fWyCh8Nc+V9voZDg0b/P/mN/L6MvUttE6
W3asF15/3pM2y9oPyaqpdzmiXRC3h35PQlwvpHpr0dgV+sF8cqBeBNxQzsXu
A6/edwELRyxrlPwg6G6CGve1Pmg16fyF+cad8HjHKpebPYNQ4ee+Rs7OFxUm
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
jphfMnBujYB14f74H2NgndjQ0/dGkrU+zMPzcdzxfJx0PB/HE3swerEHoxt7
MLJmBz0UZq0jYU3TA7pZ60qIyOiDqaz1xOl6ZfI41r7nyS2lm1tY+yA56n61
HGv/0/BTgxf2H0Hb1X/AfuR1/fCBz+4B1PxewekhrP1Hz8pCQ9iP/Ii/elWL
tQ+ZaLvpbR1rP+EjuXeuMWt/4ZA9aYvi/2RfMf74mLh9rHX526XWYGvWOr2g
wnAwkbU+E++EBfZOxGHvhNQ1Z+ooa72L6CtNfcVa/+abPu2b3H+HEoiovLiW
tT9rc/Lq5GPt125ySBWXVYRQF+bpS45n7YfaonOrfhRVofmr5JlyrH3RfOyZ
t8WeeRfsmWdgn/wG7JM/gX3yl9h88jnYJz/SfWnifuNNuN94I+43Jp6H99jz
EIM9D1LT/KZWsNbr2ra7JodZ6/c0R90bM6ICqTOdsqk7WPvLoicnQr9+z0Ph
imtOzmbtM19Hmc34WFeJ7g8a1Xyy6US7zhqMb7mZRPW4lny+u9UGPdsk3f0+
qhulRTyWD7RJHvE6iSfhGPYkfMCehIGKXOPchhJ0xlBDaDZrndNv0+xdzlrf
jHG/aBvuF83E/aJVYvkTYd2x+S6oDuvQrdH9krD+BNr+K5/ChfkU9rlmBpj7
mPVzgHeZ+x2KP1x9tzhrveRo2tOfwlonL2G+YAPmC2oxX+BYxdn4eXw+En7h
FyjKWqe3BsmkzmatzwdCLR6KbLtPZWQ43LBmra89PTKmOqx1NRvnzW7jvNlk
nDeLxP11Dri/zhz31z1epH69lrVOre5JlXi74SM67/MjdlOQD5WF82MJOD/G
h/Njq3D/Wz/uf2Pg/jfxnmfdirad6O2KVP7g2kp0IU/0zinW50X62b7hfraf
uJ+t7Pxoo1bWOigXF3tw+4oMhJRv7xxgrYcPLunIT4jvRg3juydzH05CaUGq
LWdZ6xuZ/7IT57WUcF7rOO5D88Z9aMm4Dy3RWnJfAev5MOldXmSXZ40etdpO
FWc9J+fY6ndFuH63Av++HsC/tzwMxkf4ndXCde27uK79FNe12fNaoxkMix//
RV5rDIORBPs3dk52LIPxHPafpF68B9eL1+F6MXv/zzQGoxZ+v9jzY7wMxi74
vTsdtXCa97IadPKqSN/Nng5Uvdiv/Pp6T+oeru/b4vr+bVzfZ/cnz8H+ZFIH
F8F18FxcByc+4RXYJ/wR+4TlcL0zA9c/tXHdk9SLl+F6cTmuF4/J/x4L7/u1
oA3b4XP4fq/0CLz/5L8nr0de5z8AaKag2A==
    "]],
  Axes->True,
  BoxRatios->{1, 1, 0.4},
  Method->{"RotationControl" -> "Globe"},
  PlotRange->{{0, 1}, {0, 1}, {0., 23.374999999999897`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.606809221377389*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"triangleMask", "[", 
     RowBox[{"-", "F"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"k1", "\[Rule]", "1"}], ",", 
      RowBox[{"\[Lambda]", "\[Rule]", "100"}], ",", 
      RowBox[{"\[CapitalSigma]", "\[Rule]", "1"}], ",", 
      RowBox[{"cs", "\[Rule]", "1"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"k2", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k3", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.598705644178388*^9, 3.59870572534142*^9}, {
  3.59870579001291*^9, 3.598705801011566*^9}, {3.598705839372476*^9, 
  3.598705880969243*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJyVnXeYzFf7/9cSndXrYsvs6h6sIFFmhIjRW9ToBGERdQmi9yijrh5htSDa
ChJWT7Roq61elyCFRFv2m3ju1zmee665ftcvf2Suee1xPue8P+fcp933meCO
vRt38ffz8+ufxs8v5T+fX7dYu21CiX5V+fST/z4rVTU6zL3Jqfm3iReSHe69
XtyxI0fEtsgjXvz4gcKbHe5TXnxSqQNHIxPOevGaczveiY1M8OIp3vz/mhdv
t+X4FIf7hhf/sduivG7PLS+ev0DPmMiEO1588Mn3IzyOe1783Nh0cbGRv3rx
d98/Xzch9qEXn/Eo5kJy8m9enO/oqnXWHJ01R2fN0VlzdNYcnTVHZ83RWXN0
1hydNUdnzdFZc3TWHJ3hjfLHJnncKV3ojH5aZ835rjk6a47OmqOz5uisOTpr
js6ao7Pm6Kw5OmuOzpqjM/yTR9ma3UzM6kJneO8e7gK5e2Y1OqOT1llz/r3m
fNccnTVHZ83RWXN01hydNUdnzdFZc3TWHJ3hj4ePLFf/aB4XOsM9/eePqlEj
j9EZvt+x9sAnG3IbndFD66w5OmtOvprzXXN01hydNUdnzdFZc3TWHJ01R2d4
j90xedM3KOhCZ/jIehlSXblcwOgMH+gXkZyqSQGjM7x4Rv/ifrGBRmfqrXXW
HJ01R2fNeZ7mfNccnTVHZ83RWXN01hyd4Teb7xk1uWKwC53hBV4eO/F5YLDR
Gd4oQ8pXz+4HGZ3hp7eOybh0dZDRGd4j1brE1Z8EGZ2pn9ZZc3TWHJ01R2fN
KYfmfNccnTVHZ83RGe6/Kv3Q96NDXOgMb18hZt2aNSFGZ/jSiGwJWReGGJ3h
52eOf8dvQIjRGd6pRI1321YKMTrDG588uOz442CjM/XQOmuOzpqjs+borDk6
a075NOe75ugMz9Jww7MZ7lAXOsMntJ46Lzo61OgML/78YN5jP4Qanc04sHSi
X9CPoUZneKtJW3t1WRZqdIZHXtr05eG+oUZn+GjnsQoREaFGZ8qrddYcnTVH
Z83RWXN01hydNafc8KyiJ9/5nN113Iyq96zO8D9aB28vVs9hdIZ/f3HSq+SR
DqMzvFnBFLN3z3AYneExA1ufaTnGYXSGlwgd2Ce4vcPoDN9xb9Xp0GIOozPl
0jprjs6ao7Pm6Kw5OmuOzoZLf0dnOO2T+sB/Fz35zufs6pOTluyzOsObJIav
6pkuzOgMf7UkbunQImFGZ/iTHXdccf9wdIb/9KrW5rlZwozO5rmfP/w17LbV
medrnTVHZ83RWXN01hyd4bdkPEJnOPYTneElpL+jM5z2ST3hTUVPvvPZq8WN
W2XbWZ3h51IXWh3wldUZvuDsgPcuz7c6m3K2Tdf676lWZ3iRVMOjR/cKMzrz
HK2z5uisOTprjs5w5kvoDC8o4zs6wxmP0NnMc8V+ojP8Y+nv6AynfVJ/OHry
nc+K/f/z6ZOfrM7w/U3neq7ctDrDh172y5DzltUZnmrPt422H7c6k5/WWXN0
1hyd4czn0RnO/BOd4cyX0Bl+TsZ3dIa3lvEIneHYT3SG099NexVO+zS6Cz8g
eppyyGf1L0qM+zBDuNEZfmZYVMD7ucONzvBuDX89cjRjuNGZf6d11hyd4aw3
0RnO+gid4czn0RnO/BOd4R1kvoTO8F4yvqMzvLiMR+gMx36isxnHpL+jM5z2
iV6mnKIn3/mc3bREl09LWZ3hg85VKOcpZXXm71pnOPsh6AzvJet3dIbvk/Um
OsNZH6EzvKfM59HZPFfmn+gMHyPzJXSGb5fxHZ3hjEfoDC8s9hOd4fR3dIbT
PtERjp5853PczYpTb1YMd3Wa5ZwZmfDIeXt76qPh7mVG59TX+qR2ex44rydH
Hd0WudNw0sMzNozznL+dwbWq+LLBDvd9Z7dGg/L2SjjolQ98bft+y9ePy+mq
Pej0g+Tku84+WVuG+/mdMOnJBx7hrpJ67/b8rgd7U7VPiL3tLDHkb6fbc8ak
Jx/4L7+3rZC9ZpBraubyp2MjbzoTb8xs6XFcMOnJB/5k1otHD18Hu0q36lrT
47juXF6nTL+E2MsmPfnAM8z4o+jnaUJdfOffkZ7vfGa/XT1xYbtQF88jP9KT
D5z8qQ/lJT35wCk/eqEH6ckHflz04X2gN+nJB47+fOfTk31i9BePwly0A94z
+ZA//Ft573znM/KvMoVrB9l2CJ+Y/dLr5LBwF+2Sv5M/z4XTDvn3cPLhO58N
prTI0q68zV+3f+yPr36hOf3OV3q9r0s5fO2rk8/D9EPmpWv8xJSbfJouqXum
6ryU5r3ofop90Jz0el/UvCfhFz1z2qx1ZDP9VPdr7JLmpNf7hJSf9On+jqzr
55fT9GttB7CHmpNe75tRftJnuXt8982K+Y0d0HYDO6w56fU+ErqR/vHplSuj
8wYZu6HtDPZfc9LrfRV0I331wKhhg54GGzuj7RLjjuZ81/sM6Mbfo+q26JCh
fKjRh3J5Otdq8nG8tVfavlFuzUmv1+N8J/2YTJNmHv461OjG83ku+mo7yfvQ
nPR63Ur9ST/sZs5biYOs3UYPdKDdaHtLO9Oc9Hp9hw68zw/kPdLutX2mn2hO
er3eob60R9oh/Vzbc/qz5qTX83/qRX+iH2GPtJ3HHmlOel/zYdJjZ6gvdgL7
wL8n/cM6OSq8+Mee852/PxCO/eTvM2bvanbnrfGF9EPe/fl4zjLhLsrP37Gr
lJ/8sMPYaz0ekS+c/E05JJ/pUh6+m/HIr6Grc3lbTv4Opzy+zmfR72GGYvsW
1Mhp5oe8z+Ra3Y7nH5rfzCfN/GK+/38+Khtk5p+030rd/bY//2deQb+i3/Se
VnJsmMPaDfoZ/Yt+Tb+nv/PvyY98eB7PryzPpXyUl3JSH+pHvag/eqAD32nv
cU0/GryhXkbTX/g7fEi1frGxkb85P5lcLfn7yLXOO5frP9/62ytnwa+WF/U4
Hjrrl8vQz88vznmrZ/3QtmWyuPjO3+H8e/IjH75fPDG3TFG3x7Sfuncz9HG4
H5nnwsk3fG7Cpl4JsYY/KlvlZnLyr6Y8Oh/Sz5tToknp9GlNOfl3pCcdz4FT
DvKDU27qofMhPc8lnW63pKP/HTj2YmDF3SlN++f5HxUflnC35GvTn6nHnYGD
Pb/Xtfrz97vC+ffkRz6Un/51asySGR0u3zJcvxfSwU9LevTiM2+JDsOKFAl3
8Z36Na4x70jdEuFGB/4+5r0DKVIVt5z0+ds1vNCjnLVLcPRBR60/3/nc12nC
Nx++tb7D7tbtXWpD+bVZjX2g3+RPl1x3/oGcrrjz8QsjE+470y9aNcXt2e81
/zHn2JkuT1qeLq+L9kT6DwKH9tjtl8PYPdIPa1olqsqkPMb+0I//XFw69+Hf
87s6OtJkcXsSnaN63dydEHvMa17EODxh1/M/0n9R0JST9HPWF52dqX4+Mx8m
fb97aw6Uz1fQ2Dfsyu/vLvwqommQK1WfiqMd7jvOV4WmPY+NPO01X2LeMbLJ
QHfvysGmnKRPuyBp56KoQmaeTPo8c3fWmVHS2k/s3F8VJn9b8e9gV8zO7n8n
J990bp9QIruf33mv+SfzrLo3L8ZOGxliykn6b/Pv6+/8OtjMn0nfMuvJgSNi
Qsz+A3Z37MdduvW/EuKqlWZB94TY684Bf/xcwu255DUvxZ4vm1psz52Moaac
pD9U7ebU8/EhroEd/L+LTLjhPL1i3vbIhCvO47PfrZeqVKjZDyE/8iFdnnUR
oW6PnZdSPspLOakPetQRHXJXebnE4b7o5Pnkg77ojc48l/SUk/pQv5+kXrw/
dB0l7731mTbjEmLjnWdynqzscdz2mo/RvmhXlJ98Wsh7ofzks2Nf1z/mNApx
8V55z+vk/dKOaV/jpf0v6RHX0+M46Sx7eMnPsZF3veZv9DP6F/UiH9on9SKf
aPdfeU7tD3LRvmnvqaWd05+NPRA7cPCdmjEex8/O6cN7NUuIvec1j8XeBIqd
oV7kQz+lXuRzsv4P43sEFHDRz+n39HfsDnYI+0M5sUPYH8pJ+gY7atwaXS63
2T/EXmInGV+ww13Wppl28Y8AY4f1eEG+5Demy+iyG6tlM+MC5U3VN9OA43uz
m/Lz93cUp/y1ngasK3Qju4tykJ7xBc5n1MTDP+aPsPYfPrnR2lL/ji/8e8aL
UTIekQ6eT8YjOPmRD+Mj6f1zVvqwZkU7rpH+aqvCBfwr2PLw9yvC0dGXHya6
aj2Zv1XpXO6dP4rZ58JnRkZW71vacspLOemf2Ks7A9stSpPbYea3fLpXZYws
387u35I+euarw/df2vkwdizbtnM5TwQ7jB3m71mE8+95Ps+F8xzypx3QX07O
7NB1cIpwM97x91PC6W/8vWqbJfNbvwwz6fk7nPdLe6ed0w/pN7qdw+lH2BH6
MenJB06/xg5ih0hPPvD5Ypew49hR0pMPHLvKeMM4QHrsP+MhHDvMuADHHmKf
4dgl7CSc/ou9gqM/dvhExhQLev1o3wt2u15ws92BF8PMvMK8d0lPOjjp0ZnP
uFnT6127FGbaD++9YpqHJZvnsO2Ev8N5v3zWjR+SZ1Mu299ZP1V9NSsqcGgG
079YB2w63GBb3Lo0pr/DJ5WNnxp+KY0pDzph3+i39G/6Nc/j+TyXfHn+d/Jc
OM/nuWb9L+mxD7xv2suxa0MOfP6Dnf/QTvbcO5B3fnaHmUfxdzjvG/2vfHO0
+Zlfwwzn88uGeTMlvrIcnbvuGTz8VFprl5hPranrfjfou1DTXyjn9C3Di+69
GGrGKer1yD9i37vDA4xu8NMfJEaU3JjB5I9dalP0SFKFzda+wauOrT219DSH
0YH+FxGfdcTmVtZOkh/5YPfghePOlDjc0+pGPUZVrpRnYXmHaQ+097Z59g5L
s9+2W9p7hX2/pH52J8y0T3QeMrpM9djHYaZePJ/n8jzK36L1rqK1R9nyU2/q
Szr+HekzDumdMYXfd177+eivxy+4Tj9n7ZV2fn4/eaWH6/S9ZV6n08N1+uzH
9gb+YxW90sN1+m1i93R6uE7fusacdH5+l7zSJ7/576oXJ73Oh/San7pc7mVy
8nWvfOA6/XJpnzo9XKcfGL34j+Tk217p4Tp9LWmXOj1cp8/3cdrE5GTvOAu4
Tv9A2rNOvytL3yvJyd7xF7RDfY5De9OcdqU57Udz2onmtAfNeb+a83415z1q
zvvSnPeiOfprjj76HAp9NEcfzdFHc/TRHH00Rx/N0Udz9NEcfTRHH81pP/Do
SUmTVpbJY+yYPkdDH83RR3P00Rx9NEcfzdFHc/TRHH00Rx/N0Udz+h3c+X78
3sI7C7jQDf7w+redOzsLGN30+SC6aY5umqOb5uimObppjm6ao5vm6KY5ummO
bvD5OX5uPrBSsAs7Bi9zvcPIW+mCXegJ/3PAzbhlF4OMnvCY3elqpVgaZPTU
56HoqTl6ao6emqOn5uipOXpqjp6ao6fm6AlfeaBv3i5fhbjQE57QalyqyStD
XNgx+Ih3P6nR9psQozN8a4XXxXr8kw86w19uHzhj7qchRmfjhz7yyQc9y4YY
nfW5MDprjs6ao7Pm6Kw5OmuOnpqjJ3xLoePFur4f6kJP+KhCjavumRBq9IQf
3tatV53NoUZP+Mq6Rb76+5/5PHrCn+W+mC7fP+nRE371ypNNw+eEGj3hJ4rE
zjn3WajRU593o6fm6Kk5emqOnpqjG5x4AXQzvFEaT4dzVjf4yIlDuw6r4DC6
wY/U9P86d1+H0Q0+PunDn69OdBjd4P2T9/bcPsVhdIP/FNxxZ50vHEY3+Osv
Lv3QoaWdP+vzenTTHN00RzfN0Qc+XvzS0Qd+sfu8Hy9WdBh94N1vffZht9VW
H/iUSUfvOn+z+sCL7O+3/EmeMKMPPN/940mzi4QZfeCr63xZIDYkzOgD/2BK
myFFM4QZfbRfAfpojj6aY8fg0Q2KvXx0NMSFPnDiR9AHPq5ttq9bdrf6wB/e
+nLYjLtWH3jnzIFT0zrDjD7wZRv8PgoeaPWBx81y7q7ssfrAp3x/ceTNuVYf
eN7H5/wTJ1l9tF8E+miOPppjl+BV07U73XJosAvd4KWD9yyJiLO6wUPFPxzd
4FNL9V1WfJDVDT5z94k2x/zDjG7wD5e+HNuiq9UNPr7KyjT+a60O8Ictz87s
ft3qoP030EFzdDB+ozFXa340PpcLOwN/0MI94narQi70gfct6dg9pJ7VB76y
8bpN3863+sCJM0Ifs/+/Peaj/N2sPvBr9/atiEm27QpeuYTrk2x9rD7w72an
vtNmt9UHXvh86q4PcoYbfbT/CfrA29ZtPfFymiwu9IHnCk/9eGyqXC7sDHz0
jjtxy4/kM7rBV3a7WST/6YJGN+O/PXPLnIDMVjd4R3/PrjodrW5w4rDQDd5k
RxvPwA+sbvCgj2aFDLlldYOHvx98ydPO6mb8Igq8s3nsdtsf4Qu3r3vwwVPb
rsy5d/zcPr1TpDD7S/CM92e2DCsWYHSDf/DluJiQZjmNbvCB85pFrS9rdYP/
mr7TRGcFqxt8xaCI3P32Bhnd4LmXdH13Z36rG5w4NXSD9+1fMu7DDFY3+OIG
l7p0ibW6wUsf6xrlV8nqZvy0O84esHix1Q3+c/kxS/zuWN341O2tlfLrQLcF
Ictv906I8RrXLik/UnR7f9mpzjsjF3jZsR3qHArdBrzenlTSPcprfGzrY7/F
X5Uf3Wqo8qPbaFV+dNuvyo9u6VX50Wv41L7bPY49Xrpp/xZ0q7zlo5aXYn/0
0u2y8ndFt2F11jhnOrZ76VZQ+dWg264bGcNre7Z46RbjYx8jSpUf3Wqp8qNb
aVV+dDupyo8+f7Vb98DhPuyljz6XQR8+tT6fKn9d9Cn/NOB0QuwBL31SKz8Q
9Dn7QbWa2yL3eelT0Mc+xu+q/OgTp8qPPtNV+dFhW54n0xJiT3rpoM+bqP/4
XVPcbs8JLx16K79idFj/U+3UvRKOe+kwXPmloEP9HEMHuz1HvXQ44mO/Yosq
PzosVOVHhzGq/Ix3bnnuiK4rn35xyu7n9Bs5Y7XD7b0voc/X0Kd64WKdPI54
L32KK79o9OFT6/NS+c+gz82+rc9GJnjv54z3sS/RR5UffVqo8qOPS8o/5E0c
ZQozn3wm5UkdX3ti+Z0FzTzhmpRn+PVBF47vtvs5/7lfal9kwkUv3fQ5I7ol
Tzs0NCH2gpdud5W/N3r98m778m7PeS/dtin/H3RbkvDst9jIc166Vfex/1BC
lR/dckj5T678N243mxnvkqT8U4etKHi5qN1nOCrl7DhrpmPlIrufs0XKOatJ
9jrZnMFGz4VSzmrP6169fcru5/za+Oil2MirXnrqc1j03Pms8xyH+4qXnt8o
/3b0nLz4VQOP47KXnv2UXxO68al1S5RyPnqa+q9WjwLNPOGElNP9t7PD2IZ2
n+F7Kefyp/1+2dnc7jMslXLu+TV389sRdp9hgpQzrH/vsp+/tvs2faScSV2y
Le+7xe7btJD3f7D+7PgWrey+zWkpr9bzI3V+bfQsneJ8bOR1Lz213z56Lh99
bEtkgvf+TFtZvz9r8L/7DHw+Ofhu4bMHrT475LkXG3y29UAZu14uJc+Ny9C5
ec3Cdj9hmTx3VsNnG+LT2P2EXHK+OfW7sN5nTtp9mElno2c43NecuRaXWbN1
ot2HKeNJOcHh9t5PWKHO8dEn7+1fOifE3vTSR8cXoMMPPvYTSstzzy/r171j
aTvP5PPRX0fK9Zhh55l55Ln58i4rfOAnq88UeW6rH8MaVI23+vhVXFjN47jp
zPreoPh2h60+/eV8stf5XHW7r7T7LYmTuhV0e244n2e8nbynj91vmVbzVA63
x3s/IaXyZ0CfQVJerUM+H/sGUyX/fSlG3K7W1ergL/mfTzu4ceMrVgc+F363
51iCw86378v57eyny4pUrWPn220ffHY8NvK2M2pWqovtm9h9g1NyPvtLp96H
6n1g14M1nRXWRibccs5aHFD640A7P3/4YunXkQmJXjp0UP4b6HC2XuRwhzvR
yz7HPH6nosdx1xm13L/F87f2VaJ87A88kOduuBD9YfBb+wPt5blrSz0edPm1
1eeMPLfLyz0TNrW2+vDZ5M6EFdln2foul/JsOXx5+6M5tr51NvQu5XF47w/s
Vn4p1Lecf+UMbs995+U3cd/PzPjEOXvdDkltZve169lUq87sj4285xy0eFy9
Sz9YHc762AeoLeWJr3Q9um8Pq8MuKc/RJg9z+qW0+yRlpTyFbpTxe97b1tdf
nnuheMGUJe7Z+q7uVHVnbORDr3p5YtPPi0x44FwR9ip/jvJ232NIunP9He4H
zuPz7h+5UdTue+BfwHhHfTt+8k2jhNhfnfeSjjbdPsvWt5yP9fsqKU/WLFV/
717L1jdQ/FuSF3xVacJD+96nSzlzd6icdVk3+95TiR9EhlaVQgbvtvVNnSdT
rYTY35whB9YnxQalMOvxR59dcHgcvzm3Vfvxs3Nr7Xq8o/jDtHUdbxYyzK7H
z/24IoXb88g5/5sUUztG2/V4HfEL21Q556biSXY9vlvewwEZp9Bhuo/1eCop
Z0CRYqsrZrc6RIlfyotFAcdu7bM6PJTy7wsuFlqnjtWhg5R/Y0Drs+fWW/sQ
L+Wf9VOLxy0f23YSrta/2I1sat1HPqXVOgi+RK1HKE9PtY6A91ecfFbJ+uK7
v9eNaXQkhyn/FJnnpzmadHBO50A7Xqj5NvkXkfn5ZonnhZcWflK42d9W80xj
Z2S+1+j8lY25TgTbfUuZn+AXzXufIuMv+Rj7L7zRgFlbcjQINe1H+2mTz30Z
p76f/m+8c0rTDtuLnSc9fLAaj8gf/5z4N3HQWU071/F0vjj571r6XuuE2LvO
oO6ZTwd2z2P7hdjhIkvWpy+TIsj0r0DGZ5U//niFJW5a87LCee98Fj0z5fG6
27Y9lxe7d1X8x3gu9mpYpk9qRLfJZcbBILEnS9/7OP/e/OGm/bcXe1WtU6PJ
v+YLN+lrS79eX6tYmkUFLR8q/fHZxk5dPs1r91H3++hHk9W+E3yM2i+iPDo+
mvS+/Gc+V/s28EZq/4R8dLwz6X35jbRX+yHwPoqTj453Jr0vv4uTsk/i+m71
zDXrs5n3kiz7IU+bBgyI6Jfbri/U/gNcx0Gbcur4aNEhSvYrksoWeTHPP595
v8tln6F+vofX20+26x2/oP9dv8N1fDQ6ZJH+sT/ydoqiOwqZdltL1uNxbf7Y
2KBVkLH/y9V61qy/1HqZet0STvws/IHwGsKxJ3ySD+OR28f5/kO1PiW9jqcm
vT6nNuO1rO8iDvUoF5HdnrfmU36k2Csd/wLXfsg8V6/XSK/Phc16RNJ3Hf19
EeeMt+afYm/P3Pm7Wo1boca++cv6gnzg+dT6iOfq9RHpfZ3Dkn6oxIdSr1oy
Py+Qte3WXm+dr+1S6yzST5f1xYofPBdHHQsxdlXHZfvilNNXen1+Sn3xQ8+2
I3BEinnB5j3i770hQ+jKJxODjX1mHCEf+P/veMT4clD6F5z5eZ0Zw5MuLypk
z2VU3A1cx33zXPxqAyS+2xfH/neScYR8zPxTxX1T3/MyH1ub83nLrCdzGrtH
+jNVUq9+GWbHHc6hrnauGTq/oB2/zP2mU2Y6s/3Hjkf4dQ+d/06H6OYpTHr4
qOo7hseVtflzXpP0Z9MZF3LZ/OHrrlfZNq60zd+XHyb2f0DqL273j8hp93NE
v7Tz8h/6spUd37GfG8cOT3egUJCx89i91OmHXv/9tbVvXvc/sJ8gdqnK9GnN
j+S0/YJ+l9ChSdW/doaY9kl7nnbt2qK9C4JN++EcudK8h3VLXi1k3jvnp68l
npr6Mp7Omrli9/aIjEYf1heONEMSM9ay+gep8yN4lDonQrdm6nzE+DUpTj5b
5Fzm4Ox/44ufOeHzZJ6w+6/37vxWPL0pZ5z8Xbdb2ud/4/0fm3yYh+R5E2/7
2Jzn/W8crk3PvCL6eMsSUReymvZAO7lVbnuUIyanaQ/ME9b8HNat0qFsJr2/
nLMk5f9v/JpZpxAfEfi/nHy2d2939sO1eUz+tMNvCg5JP+ZQftOu8GNsIvGD
pIf/cWX1/B6FC5r2Sbud8iae0c/ko+9ZIv0Ntc9Peh0PS3umnR98E6eZ1fCt
PtYpi2X+MHtbYLtzvYLtvEL6RUG/eQvX1ws0vL2aDxi/RxmvQ97EmWYzz/1c
1jsHZb3DeMR4OlHiWOH+b3L13i9ln7OPpKefMl6XffNcf8MZH3dMXZo97Te2
/9Kvz4o+5N9e3WsKn+JjnI2Q/cmbTwaOnbjNruPY/5yY7WrIlrX2uYyP7/ev
uHD9Ims3sCenG37WtN7wPCYf0he61rdMp8M2n3dk3484ZXhKxcmfcbBHz4OH
fksZZOwS9uqOxLGSD+m/vRDdeYzH5sP+Xq9Ev0xzHhUy4zLjYOY38arPnb7W
ZaRnX0uPy6SvFXWnxJNvrf08q+wn+TDeLb3cpaXno1w+x1nSs7+09frXeQKG
5TLjO+Na47lTn4UsDjB2APtTQ+IijV2Sfaf+dTvOa1nSjnfsLxWq1WxkaFHL
zfjc+4use0pbflHs5OCr7oN5ylqeVvZzauXfn/rLMpY/kHGh9uGMZ/4df+m/
MbLPH9V8cFKU31v7PyqeCE6/y5kUErA08a19ZmnnfW5EdNmY2e6H75X9w0lp
Dg1slzrc2LcoWS8HpPrPpmwv7Pp6luhQ+VN3w6AXdj+Z9zs+ym/kZ69tesbH
oNaLWgz9y+4vjZdz/ywdj9RP/D2L4cVkfZpyROFUBwplNvk8lHXfgIz/tsN0
5rnH5Rz8Y4mjhO8SXls4dvWw2O0Cyp5vkvPlggs3h5+cVcCkHyd2ODdx39J/
49W5ElyfH9HvVqrzFLg+Z6G/cO5w4M04ksW0f/bJL0q/pvw/yPy50eQJV5pt
tPqfl32YNTFHMzWMsxz7kHZgxtWn4u0+YYyKl4SvUdzsywlP0TzpRqd7lqcW
O5Cmdb9xwxNsO6E9VNmTsdXxADvPpF83Hj5tTcO39lv4JI6S778rTvsh/vGj
pp8mLi5uOXF8ze60zdz7n/5Ff+G87KisN43/uawr4yQ+EV5bxTPSvwJlXOh2
4njurfnsfmwqWSduyfky6V6MzYf+uG/O2mERb51rcD5VVvXrs7JfN7j82qQe
O+1zGUfORj6d0LK55bVlnfhe3fXdblaznPOgpq/Hh2xuZO1AaVmvDX26oHXf
DfZ9dZb12ozYEmkfn7bc3N87eXPdHrctn6rjCoV7FGe+qP2+WD9ojr3WnPmc
5szPNGdepTl+/5qzf6E58xLNmX9ozjxAc3TUnH6iObpp/y500xzdNEc3zdFN
c3TTHN00RzfN0U1zdNMc3TRHN83RR/txoY/m6KM5+miOPpqjj+boozn6aI4+
mqOP5uijOetz468k/qXoo/240Edz87s+iqOP5uijOfpojj6ao4/m6KO5uR/N
x32YmtN+4MyT6Xdw5qXsp8DxZ0ZnOP666Kz9vtBZc3TWHJ01R2fN0VlzdNYc
nTVHZ83RWXN0hrPeQWc4+yfobPYXxX8eneH4h6Mz/L74P6Oz9gdDZ83RWXN0
1hydNUdnzdFZc3TWHJ01R2c461l0NvvKsk+FzvAqEpeBznDiEdDZnDeKvz06
w5eLPzk66/MCuPYTQ3+dHq7T8150erhOz/vS6eE6Pe9Rp4fr9LxfnR6u0/Pe
dXq4Tk970OlpD3D2PWgP8Muyb0l7gBOvBOe5xdTv3ZhzEonTgZM+VP0ODulX
SdyKuUdS0rdUv49D+s4SrwEnfU/1uzmkJ04BTvpR4hdBezul1l+0K81pP5rT
TjSnPWjOe9ccneHEf6EnfJrEN6GbWTdIXA/6wJtK3Iq5b1F4P4nLQIflav2I
Dpqjg+booDk6aE594Q8kro36wonbor5w4pWoLzxY4nGoL5x4E+o7UPkzUF/N
qa/m1Fdz+iM8865GP0dvsL9zBCeeER3gxPGhA5w4NXSAE59l4p2EF5b4IxP/
Q9yDxNegQy11/oUOmqOD5uigOe8d3lj2SWj/cPalsW9w4q/RE75K4oixb2Z/
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
J8J74fdW0vrg6GzOfwtVCbjwwv7eCu0E/236EeXEP/y+rO/0vKuFzKv1+p37
wjTn3ivNF8q8S/cL7ovUnHvHNP9BxkHNWV9rflHm/3q9f0nmpZpzD6Pm3Hem
OfZEc3TWvILcs6n3AbgHU3Puf9Sc+xA15/41zblHTPPvZT2l5zkFZP9Kc+6d
1Jx7GDXn/kHNuQ9Oc+4zMvfcyL1G/WRfS89/uA9Uc+7B1Jx7ITXnPkTNue9P
c+6ZgnPfFPYfzv1LxI+Ze1bknqJU0t+0nb8r/RF+U+7BqyX9Ue8/1Jb+pjn3
5Zl7T+XevPHSH/V4UU76o+Ye6Veac+8enPv3uG/OzLvk3jnuWYNz39oh6ad6
/+G09FPNl0h/hHO/H+MpnHvtmN/Cuc+Ne83g3G+WWfqp3q8YL/0Lzv2B3Jdn
zgvk3jzuiTP3c8h9ccTJmHg4uT/tqfQXE7ck92RuJg5U+Ew5x+wt/Qj+Uu4t
JO7IxM3IfX3E/8C5p4772kzcm9zbRtwOvMm88yWLrwtz1ZZ+xHxvpNx3yj2e
8C/lPk/uo4RzL2VL7vVV91ZxnyA8t9wryD168Gdynx73ysFnyv1y3L8G3yz3
sHFPGZz7yjg313aS+yPgIXIfUQ8f+3KLpb/o9hMjdhu+Uu6b4j4gsx8l9wJx
v4PX/rzYST3OUk49DnJfBnaVezPcPs6dudcDe8X9HtwXo+1VsrRbbX9ipb7a
bgRwn4nosE/2twfJOGLWQXJPDvfyoA/38wSKLno/54yUT9tt4qvhxFkTx045
50g8O/FmZr7aPylp7Z9hxp6j8xaJC97q45yL+Enq21jiKInrQ8/uEt/XWfIn
/Sd9Eh9NeBpm4o51e6AcmjP/0Jx27OVHJOXXHL00P+XDX4j6a46+mtN/NKf+
mvM+fOmg+wU6aI4OmqODlx8R90srTn01p76aU1/Nqa+v8ut+Tfk1p/yaU37N
B/rwF6rl4zzO7K+p+S3P1Zznak6/hb9Y0D481ff5zH0C2g6Tj+a0B3jJUunT
vvd+IROfC6839OGSy7sLmjhrPf8kH+0vRD7wHImdlxd4J9jcZ6LtJ+9Pc3NP
teLUX3PKrTnl0Jx6eZ27yXuEx6jfXYI/Vb+7BL+ifndJ+/8Y/0tJ/4v4W6KD
Hi/QQXN00BwdNEcHzakv/OMRx3q+97m9vxe+LqDckLC+Nk4ZXrXzulKZ2tn7
e+Hh2fdfia3kMPdCaDtP+TU39zkrbubNwl2z3vlxXry9f9jsb8QdHZz3qS0/
/Lt0V7ff8bdx0PDZQz4ZtfC5LT98QfyqexmuOky8vx6XeS58Xpf3f//7Yxt3
Dy9VKnDh2J72ufCSmVcszxNp72GAXzv+2+gxrcPsPWPynCyhGdKNOGTbj/md
q/kXK12MDTN2wIybKUdX/7SnvScBPvbv0PO5N9t84L9lr1zjr7/sc43f9bT9
+cZ+Ze+T0eMI37UdJr3mtA/NyUfbT9J5+XNK/pqTv+a8V815rra3PFdz/r3m
lEdzyqM55dGc8mi7TXk0pzyak6/mlFNzyqn5QB/zfPN7FmpcoJyaG/9XxSmn
5jxPc8qv+XIf51CUH/7noWFpBy2xv/8Ip79QL6/9EH6HQnHqpTn10px6aU45
NKf88GVFi+yOPGJ/bxGOfaBecPo7/RmeJP06o499Fbi2w/V97J+QXttJ0ms+
x8c+CfnodSL5aE57gPM7idQH3lTGNbO/w36IjBeUA449pzx6fTrHx7qV8sD5
fUbKY+5zlfHU3LcpfIOMU2bfRzjjCOWDv55XbODp7+39urzn6KfDSzWNtPeE
w0vJfG+b2ifhnnDKD+d3JM09J8IZ9038oXDGU8oPZ7wz96AKv/w0aEyP3bb8
jEuLg5rnbPfY3vsNZ95r7j0WXl/mq9QLzvyztY/9E+oL5/cxqS88TOYz5r53
4fNlnkB94VdlHKe+8LYyXvP+4Iy/pNfjAunhc+W8lfJT3oVy7gynvCPFz8r4
DchzGoq/gbn/ivipZhVnL3jrHktf60pf6zgvv0FJD08jfjKUz8sPUPn1HZJ9
D+rpa1zQ9pPvXvswkp7yZpI4094+9qnMPbfq3jbarS97pe0DOmp/G3NfFn41
Sn+es0j6hfE7l3ro98tz8Yc098rKc9Df9B8pb7oZvbt18cti1iO6nBl97CNR
f57fSNoVXPuTnPKx7wSnXgvU7+eSPjZl8TOLN9r7APm75rzfr2XcNPcsCH8s
8wH0QTf6FzpQX/TheZR36Xtfx00Os/c7kf+QJ45XMZ/YdZNpD6/zdMzy3NoB
c4/4wNdVJz+zXM9XSQfHzm/zsZ/G+9DjrLnvWt7PKxlHzL2Ukg/14t/zXn6W
3ykmnfk9K1mXGT8MyT9181sbN+2x4xrPQZ//A86S0R4=
   "], {{
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJw1m3cAVtP/x5/73HPPFUJCWVFJKkqRpCWRUMlMJVJGW5GVkJVkl8K3JHuv
SEVGRjbZlCRbVpGMjN/75X1+f5zn877nnDuecz/ns2/9gScfOrJaqVTuC5VK
LtpXtJboC+rcSbhBVqk8pIHt1Iapf6D66wuPED5e+K6iUrlXxz3KSuUv0e/U
f7ro7eq/Q7S7+j8W/V79Z4iWaocIH6Bz1xM+VPhA4QbCI4VPEN5B92yoNkrH
hZ7hauFcdI7mrFLfWNFfNG9/4c6iN+hetTSno+h0tU2F/yd6qugJavuo3anj
3pp/l65zH2PCr4p+omv9KHym6PZqw4UH6ZqZ5l2m8/5V37Zqg9U/QP2To64p
/KTG71H/ccJHqX8j4aOEewm/rrELhfvp+ruof5zwKayn8OnCI4SbCJ8hzOI3
0X12UjtXx9eKTlFbLby+rtNM+AnNbZX7mmdq/m7CFwmfJby78MWsifDOwmcL
jxZuLTxB+GzhDsKThS8S7iR8rfAE4cN1/XW6/qGijdV/mvqHq39H4THCw4Rn
aHy62hodb6z+PqKHsObqu17tFx23V/81oheqf2/hqcKXCC/Q/3+Bdywe6Cg6
Rf0Xq7+5zttF7fKK39Vmal2Fp2vOzqI/iZ6jvk3U2ur4SB2/KHq/zp3LXLWK
2gK109S6qdXUe7lDdH3RvqK91f7UtIWF6ST4QmOd1f+ScDPhFcJNRVeLvqb2
B+vPmGhr0WPUF9W21fFkHdcT3QWeUeuv/g9FHxQdAX+qXaXnrKk52+o5r9FY
UN/OhfcSeyqInqy+Tmp/VXzeAWpVtRPVjlYr1b5Uq5H5flN0za1Ft9G5U3Wt
9TM/2xV67qs19oDo6Mz/62/NWyv6q9q3assKr8N7orM0dy+Nr0l7cyv13yZ6
u9794fAJ65T7XbCnGN9GbaDGphV+D+1Er9OcJsJNNecq3ft6HT8p+pDmHst7
UHs4Ud7ldTpno8znHqx7PSfcWPR/kQXROeKNWRrbQv03iV6m6z2roXt0/Rd0
/I/wlaL9NN4lS8c691rNmyu6vugg5Jbmn6nxDTO/P65XN/N/u01zuon+JvqP
5h0h3EP0umC+O0vX/zv3fPqvLvzOeXdN2Bvqf0zjH2tsS/XXFf1KbQ/h3US/
VmsjvLvop2ot4RPRtWo9hfcT/U3tYOGuor+r9RLeX/Q9XXtCZvm4DFkjfDd8
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
viRxv9qlfVVihv8HeMQDXQ==
         "]], Polygon3DBox[CompressedData["
1:eJw1m3ncVlP3xs85++zzVDJkzBBKRaFBGhQKzSlppEERQqUSZVbmCJkzF1KG
zEOG1/iaZ68xs8xECJXwu75d+/fH/jz72nufc9/3OXuvda1rrafhIRMHHF1k
WXZryLJSf8+LWbZafzvmWRbV30eDn6l/j8Y6q79LlWW/CU8RvkPz26h9qv5R
ur5zTZY1EP5Y+AjhPYS3Fv5E+EjhPYU3F/5AeIxwB+HWut+vut9LalurP07z
KzR/DZ8v3FFr7tUXfFljW2iuvtr76h+i69tr7hz93Vvf61Otb6b136i/QPN7
aXxbzY/R+l+EL9X8v+qfo/ancDvhlVq7v9pq9Qt9xulqR2n+N83PYUz320Ht
E/W7aN1Oul+m+Sf0Z6Duv6PwocKXCJ+haz/X2q2EPxIeq/ndNb++8GvCI4Xb
CK8r/IrwcOHWwu10zQ08b+EjhHvoc5bq89ZorJv6+2jsUT5LY/fr2vXUXtXc
CI3tUuNnskT4sOBnVTf6WQ0TbiVcR/hF4aHCLYTXEX5J+ADhlsIt9fnLde97
NVZoro7wLcIN9Nk7a34PjX2tud68I/V309g9hd8Jn7e3WtDa2Zr/W/O7q32l
9dOEv2S97veP+vdprIH6x2nsG/Vv0Od30bVbaexFze+sexwpvKXmP9T84Zrv
JNyx4ovp3ejPJuq309idwi8Ib6a109S+Vf93rd9Lc23V3mDv6Z7/01xzXfO5
+k9rzfnRe+auws+EvfSXPvcR9XfVmsd5t5p7XO3Q4Gd6mvqzNL+z5p8Qnqj1
2wsv0fgK3fto4abCHwj/JvyZ2mKt24HfrPtlwper/77adOETtb6thr/S+j81
d5JwO+GvhVcKnyzcXvgb4VXCr+ma/XXtlWozOGuVv9P5WvNO6T3H3rtYuI36
S9XOEr5U+H3NfyF8ZuE9+p7wwWqbqf+Kxn5hb6udqv55Gntbcx8KnyB8pvBr
pZ/P7er3029aprnv1C7R/E0a+1JzZ2t8pfqD9P22EH5ebZzwNhp/h3crPF54
W+F3OR+6divhOlp/qca+0dhsjc3T2Bda+5XwOcKX84yFPxI+Ufgs4deFx6pt
q/5bGvtVcx/zDNU/W2NvaO5L4bOFL+OdCDdQfz31S33eRfq8KRprKfyJxn9n
Pwq3Ev5U+A/hXPujg/qdNTYbu6J2tfoddO02mrtAfzPdq7vau+p/p/mFGtpb
/Yaa/1f4ceEBws2FfxJexFkWbiT8h/CDwn2EmwpfqL+F7tWLPaL+XH2HuzV/
XWF784j+vpN5P4/W/Ce6/irh9upvrfnzgm1FZ82/pf5Hmp+DfVO/geZP0J75
jrPCHtLcfzS+U+49NV33/o/m26hfn32t9X/r72Na3589LPxL6e/TU7iJ8HLh
u4R7CDfm7Eef7UHCP+u711TeD2dxfjR/huav0/3r6bpDhU8S/kHzW2psvsZ+
VrtTuLvWb6f55qXtAWe2q/r/8J01v7/mm2n+VF3/E2dZ849q7mThH4XPFr5F
+FytW8X+Fm4hfIrml7EfhR8R3qu0PX8Sn6ffPyzatkxVf2yNbcp7wgcH25pG
whtyjNnznKXK9veBwv5tI7XB6o/S2P2cB82/rv5Dhf3hxmpD1B+tsQc1f1Zl
f/BgYX94RmV/cH9hfzGjsn3GxmJrp1e2VXcX9penV7bv9xW2j6dVtoXYNGzb
hmqD1D9IY/fq807V/POZbSa/Zzv9no2EawnfXPnMc/Z31O/dSvPjhTfBVmDj
sV1aX1fP6wrNPyRcT2sGam4k30lrJ6ttof7HGntQ81OFGwl/Lry4sr2sL/yh
8P3Cm+j6oeofrLHFmpuktrn6H2nsAc0/qM/ZXp/XX+04jY3T/Maaf1f9ezT/
lvBM4eZat6XudVTp3/OO5u/W/BT9PTWz/X1Ia44s/f7e1vhdmm8cfb86wvOF
m0T/3rrCtwivp3tOC95TP2luXeGpwXt2nvAfaufp3iO0flPN9dP9/8zto6YV
tn8nCm6ta7bA3+qeC3KfiXN17TH4V/UvK3z+j6u8/68pbC8mCl8vfEHh81Cj
+/RSf4DGbtK9azTWVbgvNkJ4g9Lna4DaZ1o7KfGJCwufz8nCc4UvKnx+G2vN
A9gerb9b3ydqrLPmumnNFbpXc41tqf4WGrtD17YSbiy8XXr+rYWbCDdO+6Ol
8HbCjdLz76b7vQnX0/031FyL6P3QMD3/74VP1dyZaieqX2n9lGAbda1wU7VN
1V9P6xdofbPo/VVf+Hb4WPR+2VT4NuHto/fXxsK3Co/mGQm/LLxQeMdof4Pf
WSR8uP5O4vfAabFRWl9X+M00P0IYE/98Oh/DyrWvNnsunf8z4MDCy+AJ2APh
NuwV4SeErxHujYvQTZ6tvGfqw42C91KnylxzNr9B/RtL24ZK8+to/mbhQ4Rr
C9cVnlfatkThOjW2KdiWNzJzb2wItgSbA9c+W+u7qr9cY39X3sNn6PP/Cd7b
2CxsFzYIrt5T67/N/b4aqj+3tO0otb52jffEIOG/C+8VbA62B5sFV+ul+R91
bTe1JqU512D1FxXmYnBEeBR8Cnu2QfR3PUh41xrbPGwfNhXuvL3u8YyufxYb
UHqPj+B4Be/9G0rbniBcS3ixrmmptTewp6L30Mbqrw7eW19w5oQfVHtB/XZq
X8JdhHfS8+mKzdQ9rxf+obSNxdZig4lV4GM7qP+txh6r7ONnFvbB+P4xanXg
Jml/Hiq8DlwknZ9DhGsLv5b266hyLSXMXkr7Gz5WS/jVtH+nlT5PXwg/LLy+
Pm8/9Q/AX2nuYs6Mvusl+n13wo30dzn2QmNHYPfLtSFK9mKyZ3fDOzS3n1pv
nl3pOO+FZP+aCjydO6Y7SmPHlz7vS9V/pPJnjhVeN/i7bKA2oPA7uUNzl6sN
VH+NxkrNnSvcXfhX4X91/aXCewuvFn4ablfa1vwi/I/wpOB4AJuwq+aOE/4e
/iDcDu6l1ivL1h7K/8I9hfsLrtT1Af5U2hb+ziEVniXcSd0Vwk9V5nD9hP8o
zO0uFt5P+E/hQviY4Phhuj6vreau1MPbQP2rNf4f7BW/AVugNV+V5qBT8S/B
3PQl4QnYN+H3OO+F4ydizL4au4L3qv78xLGwjX/j79N5I4a8tjDH4sX9wjlh
v2i+Nfu/MleByxxVYx+Br4CDwTXP0Pqbcu9f9vGrwf7+duGthD8Xvi3zmk0S
X79V/ZvVNoNrCT+c2UdtDrcu/d32In6C88L/sNVqv8IdS8fqbySOA197Cnub
Yrij4Bv4o9LxbGP9XSzcU+09YgI+L/cY9qKx1n+g/jVwIs4/nD53TDpTuKHw
u7k53CrhGfrMF4R/VmsZzJHhyugTxOpoCHy/HdPz2k74PdZr/h9dvzT4/L+q
sVZasw1nTP2rND6OeLj03FSuwYYXiaNn9gXExDOF/8ocK2+k9oTWvin8qe4/
rrKegK5wTI15JfxyVbJnxNw3aezRzLE453OZ5v6rtoPmjyysrSxL5xV+z7P+
IrcegH3kXis506VtKDyWPYJt/Uvrh6j/v3R+0Gsa8m41PrnG/Ji16CXoJt8L
j879TJYmjn11YU4C90YzuLFwjIyWgGZxS2FOjpbBfuG340PwJV/oHosz7zHi
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
R1Sud+d/Zvjfmf8D/NxMgA==
         "]], Polygon3DBox[CompressedData["
1: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
tCPe77E28Vzn1z7/SyffzfH9nK3j/5HE2t4=
         "]], 
        Polygon3DBox[{{1359, 793, 943, 1682, 1213, 1214}, {1641, 825, 652, 
         651, 958, 1461}}]}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0j1rU2EYBuAnzbdp2kAQEVHJbvsLWhAqatHJ0WwOYkV0ydAu0q12kEKH
uohbXQSzKKj1KyaKjhqbRGP8gFL0B0jXXodC7nPdDwfyvDkntSu3Lt1MRcSq
vFKS3nRJSz0TUTFf40k2OM1lznKNF/mAdT5mU67rH7nELu9wxHv8y4fc41Pm
shEdfuIZOxvSNd/gnDwbi/hq/qc/17f1F+xxi32+5CA5P7/xNd/Id/0th2zx
B99xxDZ/ssNf7KUjztrxW+/r5/WW/En28ZzUnPGL+bRe1dt6hk/43+/Z5C43
OOQKP3ORH/heFvRHvMz7vMC7nOFtTvFULmLHjhP6uu8v6MlLmjRfZT6559wT
5uMs8xjHeZQlHuEhHmaRVRZY4aTk9TKtihKtiSIdIfL0CCJLnxgY5lMH/499
mgZDyw==
       "]]}, {
      Line3DBox[{1115, 1423, 709, 1114, 1699, 1314, 1116, 1700, 1315, 1117, 
       1701, 1316, 1118, 1702, 1317, 1119, 1703, 1318, 1120, 1704, 1596, 1777,
        1121, 1705, 1319, 1122, 1706, 1320, 1123, 1707, 1321, 1124, 1708, 
       1322, 1125, 1709, 1323, 1126, 1677, 1710, 1425, 1324, 1424, 1862, 1495,
        1502, 1496, 1427, 1494, 1325, 1426}], 
      Line3DBox[{1128, 1597, 1778, 1127, 723, 1129, 1711, 1326, 1130, 1712, 
       1327, 1131, 1713, 1328, 1132, 1714, 1329, 1133, 1715, 1598, 1779, 1134,
        1599, 1780, 1135, 1716, 1330, 1136, 1717, 1331, 1137, 1718, 1332, 
       1138, 1678, 1719, 1429, 1333, 1428, 1863, 351, 361, 345, 1492, 1882, 
       461, 1507, 1334, 1580}], 
      Line3DBox[{1140, 1600, 1781, 1139, 1601, 1782, 1141, 736, 1142, 1720, 
       1335, 1143, 1721, 1336, 1144, 1722, 1337, 1145, 1723, 1602, 1783, 1146,
        1603, 1784, 1147, 1604, 1785, 1148, 1724, 1338, 1149, 1679, 1725, 
       1431, 1339, 1430, 1567, 1899, 1395, 1509, 1340, 1508, 1694, 1900, 1396,
        1511, 1341, 1482, 1878, 1433, 1342, 1150}], 
      Line3DBox[{1152, 1605, 1786, 1151, 1606, 1787, 1153, 1607, 1788, 1154, 
       748, 1155, 1726, 1343, 1156, 1727, 1344, 1157, 1728, 1608, 1789, 1158, 
       1609, 1790, 1159, 1610, 1791, 1160, 1434, 1435, 1864, 1161, 1856, 1397,
        1432, 1398, 1513, 1162, 1857, 1399, 1510, 1400, 1515, 1163, 1865, 
       1437, 1512, 1438, 1164, 1729, 1345, 1165}], 
      Line3DBox[{1167, 1611, 1792, 1166, 1612, 1793, 1168, 1613, 1794, 1169, 
       1614, 1795, 1170, 761, 1171, 1730, 1346, 1172, 1731, 1615, 1796, 1173, 
       1616, 1797, 1174, 1439, 1440, 1866, 1175, 1401, 1436, 1798, 1671, 1517,
        1176, 1672, 1885, 1514, 1402, 1519, 1177, 1867, 1442, 1516, 1443, 
       1178, 1732, 1347, 1179, 1733, 1348, 1180}], 
      Line3DBox[{1182, 1617, 1799, 1181, 1618, 1800, 1183, 1619, 1801, 1184, 
       1620, 1802, 1185, 1621, 1803, 1186, 775, 1187, 1734, 1622, 1804, 1188, 
       1444, 1445, 1868, 1189, 1403, 1441, 1805, 1522, 1521, 1190, 1404, 1518,
        1806, 1525, 1524, 1191, 1680, 1886, 1520, 1447, 1192, 1623, 1807, 
       1193, 1735, 1349, 1194, 1736, 1350, 1195}], 
      Line3DBox[{1199, 1737, 1351, 1197, 1738, 1352, 1201, 1739, 1353, 1203, 
       1740, 1354, 1205, 1741, 1355, 1207, 1742, 1356, 1209, 1681, 1743, 1450,
        790, 1449, 1568, 1569, 1529, 1888, 1357, 1527, 1531, 1532, 1484, 1879,
        1358, 1483, 1452, 1586, 1905, 1359, 1214, 1744, 1360, 1216, 1745, 
       1361, 1218, 1746, 1362, 1220, 1748, 1364, 1222}], 
      Line3DBox[{1221, 1363, 1747, 1219, 1817, 1632, 1217, 1816, 1631, 1215, 
       1815, 1630, 1213, 1682, 1814, 1526, 1451, 1212, 1530, 1889, 1691, 1523,
        1406, 1211, 1690, 1887, 1528, 1446, 1405, 1210, 1869, 1448, 938, 1208,
        1813, 1629, 1206, 1812, 1628, 1204, 1811, 1627, 1202, 1810, 1626, 
       1200, 1809, 1625, 1196, 1808, 1624, 1198}], 
      Line3DBox[{1224, 1633, 1818, 1223, 1749, 1365, 1225, 1750, 1366, 1226, 
       1751, 1367, 1227, 1752, 1368, 1228, 1683, 1753, 1455, 1369, 1454, 1870,
        1570, 1571, 1534, 1634, 1858, 1533, 1407, 1485, 804, 1456, 1453, 1560,
        1697, 1895, 1370, 1559, 1557, 1594, 1908, 1371, 1229, 1754, 1372, 
       1230, 1755, 1373, 1231, 1756, 1374, 1232, 1757, 1375, 1233}], 
      Line3DBox[{1235, 1635, 1819, 1234, 1636, 1820, 1236, 1758, 1376, 1237, 
       1759, 1377, 1238, 1684, 1760, 1459, 1378, 1458, 1695, 1901, 1408, 1536,
        1379, 1535, 1890, 1537, 1409, 1486, 1637, 1859, 1460, 1457, 1563, 
       1581, 1582, 1904, 1561, 1558, 1595, 816, 1588, 1587, 1761, 1380, 1239, 
       1762, 1381, 1240, 1763, 1382, 1241, 1764, 1383, 1242, 1765, 1384, 
       1243}], Line3DBox[{1245, 1638, 1821, 1244, 1639, 1822, 1246, 1640, 
       1823, 1247, 1685, 1766, 1463, 1385, 1462, 1572, 1902, 1410, 1539, 1386,
        1538, 1692, 1892, 1411, 1487, 1387, 1541, 1891, 1461, 1641, 1871, 
       1248, 1562, 1642, 1896, 1590, 1589, 1643, 1906, 1249, 828, 1250, 1767, 
       1388, 1251, 1768, 1389, 1252, 1769, 1390, 1253, 1770, 1391, 1254}], 
      Line3DBox[{1256, 1644, 1824, 1255, 1645, 1825, 1257, 1467, 1468, 1874, 
       1258, 1673, 1872, 1464, 1412, 1542, 1259, 1860, 1413, 1540, 1414, 1544,
        1260, 1873, 1465, 1488, 1466, 1261, 1771, 1646, 1826, 1262, 1647, 
       1827, 1263, 1648, 1828, 1264, 1649, 1829, 1265, 841, 1266, 1903, 1573, 
       1574, 1267, 1907, 1591, 1592, 1268, 1772, 1392, 1269}], 
      Line3DBox[{1271, 1650, 1830, 1270, 1471, 1472, 1875, 1272, 1415, 1469, 
       1831, 1674, 1545, 1273, 1675, 1893, 1543, 1416, 1547, 1274, 1686, 1880,
        1489, 1470, 1275, 1773, 1393, 1276, 1774, 1651, 1832, 1277, 1652, 
       1833, 1278, 1653, 1834, 1279, 1654, 1835, 1280, 1696, 1836, 1576, 1281,
        1577, 903, 1575, 1417, 1583, 1282, 1698, 1897, 1564, 1593, 1565, 1283,
        1775, 1394, 1284}], 
      Line3DBox[{1286, 1475, 1476, 1876, 1285, 1418, 1473, 1498, 1883, 1497, 
       1287, 1548, 1549, 1546, 1837, 1551, 1550, 1288, 1687, 1881, 1490, 1474,
        1289, 1655, 1838, 1290, 1656, 1839, 1291, 1776, 1657, 1840, 1292, 
       1658, 1841, 1293, 1659, 1842, 1294, 1660, 1843, 1295, 1661, 1844, 1296,
        1693, 1898, 1566, 1585, 1584, 1297, 1094, 1579, 1578, 1419, 1298, 
       1861, 1420, 1421, 1299}], 
      Line3DBox[{1313, 1505, 1556, 1506, 1480, 1554, 1058, 1312, 1503, 1555, 
       1504, 1479, 1877, 1676, 1311, 1855, 1670, 1310, 1854, 1669, 1309, 1853,
        1668, 1308, 1852, 1667, 1307, 1851, 1666, 1306, 1850, 1849, 1665, 
       1305, 1848, 1664, 1304, 1847, 1663, 1303, 1846, 1662, 1302, 1688, 1845,
        1491, 1478, 1301, 1552, 1894, 1553, 1493, 1501, 1500, 1300, 1689, 
       1884, 1499, 1477, 1422, 1481}]}, {
      Line3DBox[{517, 710, 1699, 518, 723, 544, 1782, 735, 556, 1787, 746, 
       568, 1793, 758, 581, 1800, 771, 595, 1809, 785, 1738, 610, 799, 1749, 
       624, 1820, 811, 637, 1822, 823, 649, 1825, 834, 661, 970, 1875, 971, 
       844, 672, 1883, 353, 362, 346, 684, 1894, 430, 1054, 501, 697}], 
      Line3DBox[{519, 711, 1700, 520, 724, 1711, 545, 736, 557, 1788, 747, 
       569, 1794, 759, 582, 1801, 772, 596, 1810, 786, 1739, 611, 800, 1750, 
       625, 812, 1758, 638, 1823, 824, 650, 965, 1874, 966, 835, 662, 1048, 
       1831, 900, 1046, 845, 673, 1053, 1837, 905, 1051, 854, 685, 1845, 976, 
       864, 698}], 
      Line3DBox[{521, 712, 1701, 522, 725, 1712, 546, 737, 1720, 558, 748, 
       570, 1795, 760, 583, 1802, 773, 597, 1811, 787, 1740, 612, 801, 1751, 
       626, 813, 1759, 639, 959, 960, 1766, 962, 1872, 896, 967, 897, 1084, 
       1043, 1893, 901, 1047, 902, 1050, 994, 1881, 972, 1052, 973, 686, 1846,
        865, 699}], 
      Line3DBox[{523, 713, 1702, 524, 726, 1713, 547, 738, 1721, 559, 749, 
       1726, 571, 761, 584, 1803, 774, 598, 1812, 788, 1741, 613, 802, 1752, 
       627, 951, 952, 1760, 954, 893, 961, 1902, 894, 1083, 1038, 898, 1860, 
       1042, 899, 1045, 993, 1880, 968, 1049, 969, 674, 1838, 855, 687, 1847, 
       866, 700}], 
      Line3DBox[{525, 714, 1703, 526, 727, 1714, 548, 739, 1722, 560, 750, 
       1727, 572, 762, 1730, 585, 775, 599, 1813, 789, 1742, 614, 945, 946, 
       1753, 948, 891, 953, 1901, 1082, 1081, 1032, 895, 1037, 1892, 1041, 
       1040, 992, 963, 1873, 1044, 964, 663, 846, 1773, 675, 1839, 856, 688, 
       1848, 867, 701}], 
      Line3DBox[{527, 715, 1704, 529, 728, 1715, 549, 740, 1723, 561, 751, 
       1728, 573, 763, 1731, 586, 776, 1734, 600, 938, 940, 1743, 942, 889, 
       947, 1080, 1870, 1079, 1030, 892, 1031, 1036, 1890, 1035, 991, 956, 
       1039, 1891, 958, 651, 836, 1771, 664, 847, 1774, 676, 857, 1776, 689, 
       1849, 868, 702}], 
      Line3DBox[{531, 717, 1705, 532, 1780, 730, 551, 1784, 742, 563, 1790, 
       753, 575, 1797, 765, 588, 934, 1868, 935, 778, 602, 1887, 1024, 1025, 
       1023, 791, 1888, 616, 890, 949, 804, 629, 950, 1065, 1101, 1904, 815, 
       641, 1107, 1108, 1106, 1896, 826, 653, 1827, 838, 666, 1833, 849, 678, 
       1841, 859, 691, 1851, 870, 704}], 
      Line3DBox[{533, 718, 1706, 534, 731, 1716, 552, 1785, 743, 564, 1791, 
       754, 576, 930, 1866, 931, 766, 589, 1021, 1805, 886, 1020, 779, 603, 
       1889, 1026, 888, 990, 792, 1879, 617, 1098, 944, 1064, 1099, 1100, 
       1895, 630, 1104, 1063, 1103, 816, 642, 1105, 1906, 827, 654, 1828, 839,
        667, 1834, 850, 679, 1842, 860, 692, 1852, 871, 705}], 
      Line3DBox[{535, 719, 1707, 536, 732, 1717, 553, 744, 1724, 565, 925, 
       1864, 926, 755, 577, 1018, 1798, 883, 1016, 767, 590, 1022, 1806, 887, 
       988, 780, 604, 1814, 943, 793, 1905, 618, 1062, 805, 1908, 631, 1102, 
       817, 1761, 643, 828, 655, 1829, 840, 668, 1835, 851, 680, 1843, 861, 
       693, 1853, 872, 706}], 
      Line3DBox[{537, 720, 1708, 538, 733, 1718, 554, 919, 920, 1725, 922, 
       879, 1856, 927, 880, 1076, 1014, 1885, 884, 1017, 885, 1078, 1019, 
       1886, 936, 989, 937, 605, 1815, 794, 1744, 619, 806, 1754, 632, 818, 
       1762, 644, 829, 1767, 656, 841, 669, 1836, 1088, 1089, 681, 1844, 862, 
       694, 1854, 873, 707}], 
      Line3DBox[{539, 721, 1709, 540, 915, 916, 1719, 918, 877, 921, 1899, 
       878, 1073, 1009, 881, 1857, 1013, 882, 1077, 1015, 932, 1867, 987, 933,
        591, 1807, 781, 606, 1816, 795, 1745, 620, 807, 1755, 633, 819, 1763, 
       645, 830, 1768, 657, 1085, 1903, 1086, 1087, 1091, 903, 1090, 904, 
       1070, 1898, 1067, 1068, 695, 1855, 874, 708}], 
      Line3DBox[{541, 911, 912, 1710, 914, 876, 917, 1000, 1863, 999, 1055, 
       1010, 1011, 1008, 1900, 1075, 1074, 1012, 928, 1865, 986, 929, 578, 
       768, 1732, 592, 782, 1735, 607, 1817, 796, 1746, 621, 808, 1756, 634, 
       820, 1764, 646, 831, 1769, 658, 1109, 1907, 1110, 1111, 1112, 1113, 
       1897, 1069, 1066, 1092, 1094, 1095, 1093, 906, 978, 1877, 908, 909, 
       982}], Line3DBox[{542, 875, 913, 998, 1862, 997, 1005, 1001, 1002, 995,
        1072, 1882, 1071, 1007, 923, 985, 1878, 924, 566, 756, 1729, 579, 769,
        1733, 593, 783, 1736, 608, 797, 1747, 1748, 622, 809, 1757, 635, 821, 
       1765, 647, 832, 1770, 659, 842, 1772, 670, 852, 1775, 682, 907, 1861, 
       977, 1057, 1096, 1056, 979, 1058, 1059, 981, 1061, 1097, 1060, 983}], 
      Line3DBox[{696, 863, 996, 980, 1004, 1006, 1003, 1884, 683, 853, 975, 
       1876, 974, 671, 843, 1830, 660, 833, 1824, 648, 822, 1821, 636, 810, 
       1819, 623, 798, 1818, 609, 1737, 784, 1808, 594, 770, 1799, 580, 757, 
       1792, 567, 745, 1786, 555, 734, 1781, 543, 722, 1778, 516, 709, 910, 
       984}], Line3DBox[{703, 869, 1850, 690, 858, 1840, 677, 848, 1832, 665, 
       837, 1826, 652, 825, 1871, 957, 640, 814, 1859, 955, 1034, 1033, 628, 
       803, 1858, 1027, 1029, 1028, 615, 790, 941, 1869, 939, 601, 777, 1804, 
       587, 764, 1796, 574, 752, 1789, 562, 741, 1783, 550, 729, 1779, 530, 
       716, 1777, 528}]}, {}, {}}},
   VertexNormals->CompressedData["
1:eJzsfXdUFT3XL0VRwYICIkUUFURQBEEEEYIiUpSqAkoRsXdQKaIoICgqYEVR
QUCa9N5LaNJBeu+9nTM2xIJyT46T566H7+Pe67t81+t318M/WbOZk2T2JHtn
Z36/HUHzc3pHmBgYGC7OYmBgZvjrz+Hv5Vvwj/xfk8tk2stuONoLv7kG3/UP
GYR3VdLrN84788f183+K/A7xbusLv35Yc3PuHVT6u6xhbJHcoFgfJ+7ko/wS
qNbId+h+IqCIQLCRfL/fH9f/P01+5cLkXqTHRTMmrVHp9axRgzlppWL4Ni2m
Q4tiwTaXYCuRAQIuv7dWasw1ECgxzt++Ty4OUKVY7xv1EtDw2GZW/5HAP+65
/lPyq7l9xkiPixOXWKByxUrJWa/C+RXNeMesbdSTQErdFpewegI+LY63Xuga
CrLaZp+YXJMKHgiot4yX0+Q7bB7ZRIaC8Hmz7Mq2pIOsYmcxagEBmxyemOhS
Qv+45/13y4fDPcyQHqNKz51GJaHb7rYphFvR4NbBi46FieB8jO0emyoCztq9
JezJgRgwuP5Ld5ZMBqiOVUl9nElAu4MFNxMlY8A4o9yx5BPZwEvd/M1kOAE/
2c+euMMfAzYve20xxJ4LTBLkLnj5EFAh5sXKYr6YP04Pv0veK/LVHOkxQWvG
SVS6d1/afZKFS1HtjaM/48aXwMEc2uW3ErCxcDj8Vn8iEOY+vOn9kmRQwFbr
oJlLwCTzJWu3ySQCDmqXEc+lbOCZzx1X60fA1j1bw2FcAojViNU7NZYH7l3i
eu7pSMB1YjMCffUTwMczkv1OZwvAyxuyYs7HCLhY9tNVZ76EP04/vyp/19x4
GOkxzFvoOCqreIwTmZM4FCtd9PI0PLPg8m+KOh9vEfDmKUapdyFZIKWZ+n7d
BpOscJ6bjW4lBPx5nQnYijmE01QTwWKJR2pNcQRc3/tKYUtzOuiOWjQ/hSEX
zFr28co2mj5fsj1tHcpOAxEfZ4WcECgE1/hcwp21CNhVenr21YFUULf7sap2
TAlIMGJfN2slAV9Xl5i3qKT+cXqbTl4mf+0o0iMurWw822Zr0/TZGKd2bVc7
1N58/XBI/AiUuxp14URNPtC0G9TTjnsDH4K8Hqd7VGg0JMteVpIPrBv3rxIL
jYUU1oTzTjT9S/l6vRKqzAMp1/S3HtwaCZzXEQMyzwnIeOzRkhH/XEDleyHc
uTMXxIjJfncwIaDyqdoOmwc54NvKxycOZhSDBxnqI0sXEpAa71DEmZQNnkU4
HIBlFWCxl99dWEaFWg0NNQGs2X+cPvG4xOMUj89rSYXHkR5lDG7LIr3yvOmx
RvpMYSn/OLC2H+KyjOOcesvFYqB//rPHN41WqNyQfOVN0wjcKO8U8vF1KUg7
9Myd70YRPNEdfsA/hAoXUSpOa+8tBYcXytequl/K0kmVSVxqRMCf18Wg3c9/
3iG/bPBdttM0bS0BnRotfbt8CkEJMWPD81ulIOhatVBGHhW+OSooAT69BmNN
XF3z91cBvaYZms9MqHDhvV29H4Pz/2P6xHYT21FsPykKRdponj+U0nuH5v2x
zpCVaL7jcYnHKR6fzKJZdkiPbRr+z5Ber3XHPEH6DF4fm5lf3AdxueezDFG6
vQrsGP9wTZy/CRbe3LT2dP8INF1aM1iUUw2ke3iHfjhnQPdyYiaTAxX67hfW
FWCsBm27K+Nv8SSDYcX94qm08fmQKnpB3KwSiLYt11vNUAaCRyf2Ouylwk1L
9V76+JYD95huoa6VNUCpWHH2nAIK3CH7MFN0aem/XZ/Yr2M/j/079kPYL2F/
9He7aZKF7efiCzr0eX7PquEMmvfeBctfovleOlPcHI3LBrt3hmic2lxhO4fG
J9do8mqkx3XLi92QXncuOfEe6XPnjn035072Qlxam8Rodbc0gGyTnRX75tbC
/SpfKr7eG4HVIaFs3J5N4KhaVdrnpzZZM9IWDvtmUeDP6wbgOGffgs2TxeA8
b2C/3gMKnHv6/MEVybWA/1t8RKFfLZBi4JqxpGsU6mqxyHqrV/82feJ1J16H
4vUnXifhdRNeL/lEQLpf5/GSkEd+/oiD53rk33ds1FRFfuhjn+ZT5JfCW0K2
IX8k4bBmENnN1JFRWWRH6ypkOZD9/Ps8v5SF5zsel3ic4vEpfVX1DdLjzHlj
kUivxgwxK5E+XW9327/Y1QNxacDKvdUnoRNssszpfM1QBNMdt8UfXD8MdxEn
ApUOdYEDz8OWrX2TC2Jjz57bUzwCm+dyKjnrtoNi/W07oy7UgTvztuuf1ByB
x1j29F182PTL+sRxEY6TcHyE1/F4XY/X83jdideheP2J10l43YTXS58DI+yR
X/f2cx9Ppvl5xqyebuTfGWs6JpAfOuR3Wwz5JWnWu73IH2G7ie0otp/UPQXr
0TyPe9shieZ9qtMofb7/fVzaZOHx+faBVwrSY1bwnf1IrxFsYyFIn7KBuaUv
NDogLgt2bFJaIjAAUvnKvZnTbmQ9z3W8y3+zH/687gc+awob516vBUPBTBKb
qQNw6/qugpZn3dPqE8ftOI7H8TuOM3HcieNNHBfhOAnHR3gdj9f1eD2P1514
HYrXn/vkOCLQOklrf6cPWjdx1oj+sKetlywNLEaRX58xg1WH7udLfMqRf1c3
CRFGfshWjhBBfinJs1sE+SNsN7Edxfbz+4WwITTPg2JKJ+Vo896KmLcXzXc8
LvE4xeNzVf/ZYKTHUF2OG0ivP8t+oJvaTal8VgVxGXVjrk26HQUkX5NeQQiW
A1bqFl6/Ax1w5sbP0udHhwHeV8L7THh/Ce+D4H0RvB+SLr2KHrc3FQzIojje
qOfcHBS/XzdLoseZK/Y0nEJx58S1M8Yo3sRxEY6TcHx0PFNMFK3jl4is+o7W
9QmcTo5oPY/XnXgditefx4fWuaN1kv0TERe0boroyqpH6yW3r2xayK/PCnnd
gvw8JehLG/Lv2A9hv4T9kV7laiZkNzlH6nORHXU5ISeG7Cee53je4/m+LXPj
AjQuA59fmEDj1NZzywAan1iPWK9Ynww/Jml/d7P+XhIgl2ELLxqvDVa5cahs
pviY6rtsVeQX3q6Nro/optmj8sndtRv6Nq9RDK447iUeHAY0d8rl2xMEPB2w
M1rM8yXg7eHZj+6zfdR7HpVuZ54w7L64XLF81WTvK5EEMGNBw4fD7bR15hwb
6SPVwcDG+KMpum85H+tZVI5O7tNOyuJRDJtjrrpvdjJwGDpzMp9m1/0bB09V
FEUASe+2g+i+Yy3LT6FS3D1KOV5wsaKOmKuCwPNYUN3lGnuAZrfe37BQmlsT
B0pSPx6irwsz55xAZXntyDZiC6eieL30YunHT6Dshu85grUEVGEvD6gsSQWC
O6OP0Pu/VvsYKuuv7RA3P86heJ3FdeP3dVWw4GpliKw9FdaxCD+PEc0F+D78
O3w/96TF65Ma/RCXkvJSs5gZCgDuB+4X7g+uF7eD68fPiZ8bPy/uN36Ov/pP
6hHrlULqE+sF6wnrB78n/N7w+8J6x+8B619PqUWytKIL4lJhpTR1UVYPwONj
KTle8DjB7xu/f/zehyPDmAo0miAueZ5c2bnh1jDgdv5+ZWlrBmgzTg/4Zkfz
k3Ec0ZKCQ6CeHJd4nDaR49O19+f461SiPEHjMfbyWBQah9yreZzR79faeXqh
+q695C1E9RTdq56952UOxOUds609zIeIPy6uEXl29rThjgfA8ZhYx+JvBHy2
WXzbM7MXgJWJMz+/xh+0Pk1niqHZv/UfE2Vkwn/fPnBwgW3sGf0YwOA/al8+
SEDWS2m60qa/b//TznDju+oZSeDLPO9P25oIyNLwY6UUf8hvqz+2Z9ZKHtN0
oEhIdHPkE9DZvPeTfmrEb6vfOqzb69SSdDDvjJPDswwCql98djzkbNxvq79r
g7bKXO9IEJK6ReRdKQGP3e1iPZuS8tvq/1I6O505IgVeUAvbvNGdgGJ3z91q
PZMDZky+Kiw50QZ95slI2RaOQOFghYJ8pqLf1u7Sog3920K7IX+N+emre4dg
qmnBTU+tQoDbw+3/7nY57sYxsZ+jQOkOKYvdlfXQV7xAds73fICfH+sD6+F3
tYvfH36fv/s94vGHx+PvHodvEw7S589ShTpONJ/uXWEf/53zaHwj81VkXx4c
jApG9qal/bMOsjPYLmA7ge2D2ZNHSwzls+HM1PRW965OeGqVQM+JrmFgY+vK
7EG7/lQlyYr+/2P3zlIk12x295t/rRowP3E02Z7cC0e3NNha3e8HIbY5i4SU
7bOqblw5k9LfBH9eU/6yp9i+YruK7S+2x9gOT/dc2mS9nPR63bM4yfrTLD4c
Qf2QV6jWRP0iDrE6of5QXjHI7DTNBrHfPts7fqmEEjpHymofUUHSRd7Z6DrJ
+IP4Ltr/+e+frkXy6dql7JzXu1Q0EdQcl34W00LAPc7pKk8+BoMF84aFQs1S
QcyrOsuIEgIaa12dtSIjAszO+2hEyUkCd+Z/5qwopsXBHDkHt3nHAUk39Rm8
7p5ARmAltxptvRAdsu3mJ/lUYHW51fO4SwGcM/iMvUOcgFxPIw/HNeUAw0dc
NmhebRnjZETzjJ3gBWh+xVxlPIbmeaVLDwXN+zqFGic03/HvcX24Hs6+t4tR
e6J2u6pR+4r9vG6oXdw/3F/cz/5NEufR81Ckreeg57siUkl/Lvz8WB9YDw9C
3OXel4YCFa6jxtpvCejRdb3A1+zlX9f4/1h+4ejeGfp8zwERdKNz7Rea/80t
a9at8AUxD5bqXjoaCbgdL9r7jxLQ3d3M5+DeALBs3Ip+vYSVSQf9X5I32BvJ
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
JsTrWfv0QSPiq6SctO9B/JWQG/EGiLcidfZWF+JjWMnNpPMzFghF6CJexn/q
ecG3eWcRn02134xhccYo3L1Kgw/x2jBfC/O3MG/LyXTPFcRT2m78iRXxlpQy
DesQXykq834S4uG0MZ+n83IWG5QaID6OJVS6gngmsTFtUYh3Mk93axHim/y7
nyvDqjKKYycBVx5ftIjpUg50qEx5L7YtHzy5MSsW8RjnO3z6hHiNu/u8tRGf
cbP1/GTE37tzyHw24vNlHJojiHh8Zz8GBSN+GrMZXxfiqxkpSzIintqOzsoS
xMuaf+E+nad170UMnZ9V3yO6BPGOdpipfEA8pONBaVmIf2Tl1bsL8WqK9nq4
IZ7NfWm7dYhf8+/Ww2Eybx4vz8+8eepk3jy8D4L3p/G+NDdISEC86x75N/cQ
D7t9XbYS4l+nN26j84d3yW4T3KVjCw2yJoURj3jDQxNDxI/V2dbOi/iyeTuT
6TxZpTqJs4gX6t39ikA8Uan7l/sQPzRTNSEa8SHz9trmI36k+rHZ4ogXue6C
RAPi+z1xnuhC/L89ifILEO/v1TI7dS+FFKi9/PFexHt7cYtPBvHdJPm0PRGP
y6Uj8Q3idZ19qDCA+FysUhfUEE9J5CA/G+It1ReZ9iC+0u/SJ/5ugb9j4O8X
+PsB/p6AvyOsv5VOzwvwDUSqojwB4W9XPED5AbRaJek8do6he8cRr13HoCAC
8dmfpJvS+dgZ9yZ+IH627bqgMsTLxnxjzD/GvGMhdV46z3bHiy91iHebcm5C
H/FtV5mtoPNLM89t4EJ80x2mzNqIZ/p1U9NBtE9UKKUUhvaNJnn0rdF+UdGa
Igu0r9fgPksH7fONpKlooP09vvObnyBeXNr8C0qIJ8cvt+U04sdVDI42Id5X
qXTPesQD+3r8rdy/wv8yIPPazXr8M6+dCpnX7mOfCP27js45revoO88clXY+
9H0H56fA+SpwngqcZwHnXcD5FrypE/S8AG/TjG+gPAFK20/eRPkBjMWz6Px2
teTNZojvzhS8L4DOc4/ro/O3T7OkOSA+t3ytiBricVsJ1xsi3nKS9MXTiMe8
nDhthPjLV6huAoivKyfUcxjxd690u4si3m4uh8oRhZ5hKOERmPGtPw1+sWDf
5z2zC+D9Mrx/hvfNbngIBKHvvqVmTkLoO/DMZi0v9P1Xjve7H/pee8p97jn0
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
l974o3Xa05+y/ABan/8Afr5EKg==
    "]],
  Axes->True,
  BoxRatios->{1, 1, 0.4},
  Method->{"RotationControl" -> "Globe"},
  PlotRange->{{0, 1}, {0, 1}, {0., 11.111111111111097`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.606809224099699*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Check with the known result ", "Section",
 CellChangeTimes->{{3.598701130213725*^9, 3.59870115767912*^9}}],

Cell["\<\
check with Eq. (233) of http://arxiv.org/pdf/1303.1523.pdf\
\>", "Text",
 CellChangeTimes->{{3.598701161634296*^9, 3.598701169874806*^9}}],

Cell["\[Lambda]/\[CapitalSigma] term agrees", "Subsection",
 CellChangeTimes->{{3.598701182225843*^9, 3.598701186413905*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["1", 
     SuperscriptBox["cs", "2"]], "-", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " term from Eq 233"
}], "Subsection",
 CellChangeTimes->{{3.598701193651518*^9, 3.5987012004374*^9}, {
  3.598705463500486*^9, 3.5987054696305847`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eq233", "=", 
  RowBox[{
   FractionBox[
    RowBox[{"3", "k1", " ", "k2", " ", "k3"}], 
    RowBox[{"2", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"k1", "+", "k2", "+", "k3"}], ")"}], "3"]}]], "-", 
   FractionBox[
    RowBox[{
     RowBox[{
      SuperscriptBox["k1", "2"], 
      SuperscriptBox["k2", "2"]}], "+", 
     RowBox[{
      SuperscriptBox["k1", "2"], 
      SuperscriptBox["k3", "2"]}], "+", 
     RowBox[{
      SuperscriptBox["k2", "2"], 
      SuperscriptBox["k3", "2"]}]}], 
    RowBox[{"k1", " ", "k2", " ", "k3", 
     RowBox[{"(", 
      RowBox[{"k1", "+", "k2", "+", "k3"}], ")"}]}]], "+", 
   FractionBox[
    RowBox[{
     RowBox[{
      SuperscriptBox["k1", "2"], 
      SuperscriptBox["k2", "3"]}], "+", 
     RowBox[{
      SuperscriptBox["k1", "2"], 
      SuperscriptBox["k3", "3"]}], "+", 
     RowBox[{
      SuperscriptBox["k2", "2"], 
      SuperscriptBox["k1", "3"]}], "+", 
     RowBox[{
      SuperscriptBox["k2", "2"], 
      SuperscriptBox["k3", "3"]}], "+", 
     RowBox[{
      SuperscriptBox["k3", "2"], 
      SuperscriptBox["k1", "3"]}], "+", 
     RowBox[{
      SuperscriptBox["k3", "2"], 
      SuperscriptBox["k2", "3"]}]}], 
    RowBox[{"2", "k1", " ", "k2", " ", "k3", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"k1", "+", "k2", "+", "k3"}], ")"}], "2"]}]], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["k1", "3"], "+", 
     SuperscriptBox["k2", "3"], "+", 
     SuperscriptBox["k3", "3"]}], 
    RowBox[{"8", "k1", " ", "k2", " ", "k3"}]]}]}]], "Input",
 CellChangeTimes->{{3.598701208427513*^9, 3.598701330022793*^9}, 
   3.5987024609113703`*^9, {3.598704251084095*^9, 3.5987042525426083`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"3", " ", "k1", " ", "k2", " ", "k3"}], 
   RowBox[{"2", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"k1", "+", "k2", "+", "k3"}], ")"}], "3"]}]], "-", 
  FractionBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["k1", "2"], " ", 
     SuperscriptBox["k2", "2"]}], "+", 
    RowBox[{
     SuperscriptBox["k1", "2"], " ", 
     SuperscriptBox["k3", "2"]}], "+", 
    RowBox[{
     SuperscriptBox["k2", "2"], " ", 
     SuperscriptBox["k3", "2"]}]}], 
   RowBox[{"k1", " ", "k2", " ", "k3", " ", 
    RowBox[{"(", 
     RowBox[{"k1", "+", "k2", "+", "k3"}], ")"}]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["k1", "3"], "+", 
    SuperscriptBox["k2", "3"], "+", 
    SuperscriptBox["k3", "3"]}], 
   RowBox[{"8", " ", "k1", " ", "k2", " ", "k3"}]], "+", 
  FractionBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["k1", "3"], " ", 
     SuperscriptBox["k2", "2"]}], "+", 
    RowBox[{
     SuperscriptBox["k1", "2"], " ", 
     SuperscriptBox["k2", "3"]}], "+", 
    RowBox[{
     SuperscriptBox["k1", "3"], " ", 
     SuperscriptBox["k3", "2"]}], "+", 
    RowBox[{
     SuperscriptBox["k2", "3"], " ", 
     SuperscriptBox["k3", "2"]}], "+", 
    RowBox[{
     SuperscriptBox["k1", "2"], " ", 
     SuperscriptBox["k3", "3"]}], "+", 
    RowBox[{
     SuperscriptBox["k2", "2"], " ", 
     SuperscriptBox["k3", "3"]}]}], 
   RowBox[{"2", " ", "k1", " ", "k2", " ", "k3", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"k1", "+", "k2", "+", "k3"}], ")"}], "2"]}]]}]], "Output",
 CellChangeTimes->{3.598701330486712*^9, 3.598702463362512*^9, 
  3.5987025390112133`*^9, 3.598703425739625*^9, 3.598704252977274*^9, 
  3.5987054414496737`*^9, 3.598707005885556*^9, 3.606808981951438*^9, 
  3.606809070847698*^9, 3.6068092148483887`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["1", 
     SuperscriptBox["cs", "2"]], "-", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " term from above calculation"
}], "Subsection",
 CellChangeTimes->{{3.598705485472714*^9, 3.598705490793817*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"calculated", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"F", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "/", 
    
    RowBox[{"(", 
     FormBox[
      RowBox[{
       FractionBox["1", 
        SuperscriptBox["cs", "2"]], "-", "1"}],
      TraditionalForm], ")"}]}], "//", "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.598705458204214*^9, 3.598705459522029*^9}, {
  3.598705573532784*^9, 3.598705591460958*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["k1", "6"], "+", 
   RowBox[{"3", " ", 
    SuperscriptBox["k1", "5"], " ", 
    RowBox[{"(", 
     RowBox[{"k2", "+", "k3"}], ")"}]}], "-", 
   RowBox[{
    SuperscriptBox["k1", "4"], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["k2", "2"], "-", 
      RowBox[{"6", " ", "k2", " ", "k3"}], "+", 
      SuperscriptBox["k3", "2"]}], ")"}]}], "+", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["k2", "2"], "-", 
       SuperscriptBox["k3", "2"]}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["k2", "2"], "+", 
      RowBox[{"3", " ", "k2", " ", "k3"}], "+", 
      SuperscriptBox["k3", "2"]}], ")"}]}], "+", 
   RowBox[{"3", " ", "k1", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"k2", "-", "k3"}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["k2", "3"], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["k2", "2"], " ", "k3"}], "+", 
      RowBox[{"4", " ", "k2", " ", 
       SuperscriptBox["k3", "2"]}], "+", 
      SuperscriptBox["k3", "3"]}], ")"}]}], "-", 
   RowBox[{"3", " ", 
    SuperscriptBox["k1", "3"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", 
       SuperscriptBox["k2", "3"]}], "+", 
      RowBox[{"3", " ", 
       SuperscriptBox["k2", "2"], " ", "k3"}], "+", 
      RowBox[{"3", " ", "k2", " ", 
       SuperscriptBox["k3", "2"]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["k3", "3"]}]}], ")"}]}], "-", 
   RowBox[{
    SuperscriptBox["k1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["k2", "4"], "+", 
      RowBox[{"9", " ", 
       SuperscriptBox["k2", "3"], " ", "k3"}], "+", 
      RowBox[{"12", " ", 
       SuperscriptBox["k2", "2"], " ", 
       SuperscriptBox["k3", "2"]}], "+", 
      RowBox[{"9", " ", "k2", " ", 
       SuperscriptBox["k3", "3"]}], "+", 
      SuperscriptBox["k3", "4"]}], ")"}]}]}], 
  RowBox[{"8", " ", "k1", " ", "k2", " ", "k3", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"k1", "+", "k2", "+", "k3"}], ")"}], "3"]}]]], "Output",
 CellChangeTimes->{{3.5987055600246983`*^9, 3.598705593890438*^9}, 
   3.598707005941845*^9, 3.60680898198999*^9, 3.606809070900367*^9, 
   3.606809214897106*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
The two forms are checked to be equal\
\>", "Subsection",
 CellChangeTimes->{{3.598705613670004*^9, 3.598705629135388*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"eq233", "-", "calculated"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.598705598506806*^9, 3.598705602767415*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.598705600322912*^9, 3.598705602991087*^9}, 
   3.598707005978416*^9, 3.6068089820045137`*^9, 3.6068090709569473`*^9, 
   3.606809214920648*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1920, 1025},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"9.0 for Linux x86 (64-bit) (February 7, 2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 194, 4, 51, "Text"],
Cell[754, 26, 434, 11, 32, "Input"],
Cell[CellGroupData[{
Cell[1213, 41, 203, 4, 80, "Section"],
Cell[1419, 47, 429, 14, 34, "Text"],
Cell[1851, 63, 435, 10, 32, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2323, 78, 190, 4, 80, "Section"],
Cell[CellGroupData[{
Cell[2538, 86, 121, 1, 45, "Subsection"],
Cell[2662, 89, 752, 20, 35, "Input"],
Cell[3417, 111, 605, 13, 54, "Text"],
Cell[4025, 126, 1992, 56, 53, "Input"],
Cell[6020, 184, 173, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[6218, 192, 125, 2, 32, "Input"],
Cell[6346, 196, 619, 17, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7002, 218, 128, 2, 32, "Input"],
Cell[7133, 222, 1548, 45, 52, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[8730, 273, 206, 4, 44, "Subsection"],
Cell[8939, 279, 2882, 78, 253, "Input"],
Cell[11824, 359, 174, 4, 30, "Text"],
Cell[12001, 365, 3157, 81, 69, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15195, 451, 198, 4, 45, "Subsection"],
Cell[15396, 457, 525, 16, 32, "Input"],
Cell[15924, 475, 166, 3, 31, "Text"],
Cell[CellGroupData[{
Cell[16115, 482, 124, 2, 32, "Input"],
Cell[16242, 486, 690, 15, 47, "Output"]
}, Open  ]],
Cell[16947, 504, 155, 3, 31, "Text"],
Cell[CellGroupData[{
Cell[17127, 511, 563, 15, 32, "Input"],
Cell[17693, 528, 6235, 172, 105, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[23977, 706, 238, 5, 44, "Subsection"],
Cell[24218, 713, 1168, 38, 87, "Text"],
Cell[CellGroupData[{
Cell[25411, 755, 1528, 39, 51, "Input"],
Cell[26942, 796, 2896, 74, 50, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[29887, 876, 194, 4, 44, "Subsection"],
Cell[30084, 882, 381, 8, 49, "Text"],
Cell[CellGroupData[{
Cell[30490, 894, 1714, 49, 35, "Input"],
Cell[32207, 945, 927, 25, 49, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[33183, 976, 133, 3, 44, "Subsection"],
Cell[33319, 981, 1014, 38, 48, "Text"],
Cell[34336, 1021, 2799, 73, 83, "Input"],
Cell[CellGroupData[{
Cell[37160, 1098, 387, 8, 32, "Input"],
Cell[37550, 1108, 2914, 83, 74, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[40513, 1197, 113, 1, 44, "Subsection"],
Cell[40629, 1200, 172, 4, 31, "Text"],
Cell[CellGroupData[{
Cell[40826, 1208, 155, 3, 32, "Input"],
Cell[40984, 1213, 2831, 81, 74, "Output"]
}, Open  ]],
Cell[43830, 1297, 117, 1, 31, "Text"],
Cell[CellGroupData[{
Cell[43972, 1302, 2665, 75, 59, "Input"],
Cell[46640, 1379, 1564, 43, 49, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[48265, 1429, 102, 1, 80, "Section"],
Cell[48370, 1432, 929, 28, 58, "Text"],
Cell[49302, 1462, 2172, 62, 136, "Input"],
Cell[CellGroupData[{
Cell[51499, 1528, 508, 12, 32, "Input"],
Cell[52010, 1542, 5876, 164, 133, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57923, 1711, 523, 17, 60, "Subsection"],
Cell[58449, 1730, 1239, 36, 99, "Input"],
Cell[CellGroupData[{
Cell[59713, 1770, 468, 10, 32, "Input"],
Cell[60184, 1782, 2212, 61, 59, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[62445, 1849, 147, 3, 44, "Subsection"],
Cell[CellGroupData[{
Cell[62617, 1856, 672, 14, 32, "Input"],
Cell[63292, 1872, 2501, 71, 58, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[65842, 1949, 118, 1, 44, "Subsection"],
Cell[65963, 1952, 191, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[66179, 1960, 1443, 39, 32, "Input"],
Cell[67625, 2001, 3020, 84, 73, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[70694, 2091, 113, 1, 44, "Subsection"],
Cell[70810, 2094, 188, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[71023, 2102, 385, 10, 32, "Input"],
Cell[71411, 2114, 6134, 173, 156, "Output"]
}, Open  ]],
Cell[77560, 2290, 347, 7, 31, "Text"],
Cell[CellGroupData[{
Cell[77932, 2301, 181, 4, 32, "Input"],
Cell[78116, 2307, 2177, 63, 71, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80330, 2375, 332, 8, 32, "Input"],
Cell[80665, 2385, 1894, 54, 52, "Output"]
}, Open  ]],
Cell[82574, 2442, 825, 25, 60, "Text"],
Cell[CellGroupData[{
Cell[83424, 2471, 1346, 34, 48, "Input"],
Cell[84773, 2507, 1940, 51, 52, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[86762, 2564, 136, 3, 44, "Subsection"],
Cell[CellGroupData[{
Cell[86923, 2571, 671, 19, 32, "Input"],
Cell[87597, 2592, 1378, 37, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[89024, 2635, 338, 6, 44, "Subsection"],
Cell[CellGroupData[{
Cell[89387, 2645, 407, 10, 32, "Input"],
Cell[89797, 2657, 3369, 95, 77, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[93215, 2758, 106, 1, 44, "Subsection"],
Cell[93324, 2761, 209, 4, 30, "Text"],
Cell[93536, 2767, 823, 22, 42, "Text"],
Cell[CellGroupData[{
Cell[94384, 2793, 679, 18, 53, "Input"],
Cell[95066, 2813, 3266, 89, 94, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98369, 2907, 210, 6, 32, "Input"],
Cell[98582, 2915, 359, 12, 49, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[99002, 2934, 105, 1, 80, "Section"],
Cell[99110, 2937, 298, 9, 32, "Input"],
Cell[CellGroupData[{
Cell[99433, 2950, 584, 16, 32, "Input"],
Cell[100020, 2968, 105666, 1720, 306, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[205723, 4693, 690, 18, 32, "Input"],
Cell[206416, 4713, 82232, 1333, 305, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[288697, 6052, 112, 1, 80, "Section"],
Cell[288812, 6055, 148, 3, 30, "Text"],
Cell[288963, 6060, 125, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[289113, 6065, 327, 10, 51, "Subsection"],
Cell[CellGroupData[{
Cell[289465, 6079, 1709, 54, 56, "Input"],
Cell[291177, 6135, 1821, 55, 53, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[293047, 6196, 289, 9, 59, "Subsection"],
Cell[CellGroupData[{
Cell[293361, 6209, 449, 13, 50, "Input"],
Cell[293813, 6224, 2296, 69, 52, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[296158, 6299, 133, 3, 44, "Subsection"],
Cell[CellGroupData[{
Cell[296316, 6306, 159, 3, 32, "Input"],
Cell[296478, 6311, 194, 3, 32, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
